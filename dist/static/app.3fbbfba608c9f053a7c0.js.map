{"version":3,"sources":["webpack:///app.3fbbfba608c9f053a7c0.js","webpack:///webpack/bootstrap 0496cd071a536b7567e8","webpack:///./src/main.js","webpack:///App.vue","webpack:///Projects.vue","webpack:///./src/App.vue?d818","webpack:///./src/components/Identity.vue?38b1","webpack:///./src/components/Projects.vue?6b4c","webpack:///./src/components/Project.vue?7b7c","webpack:///./src/App.vue","webpack:///./src/components/Identity.vue","webpack:///./src/components/Project.vue","webpack:///./src/components/Projects.vue","webpack:///./~/vue/dist/vue.common.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","_vue","_vue2","_App","_App2","el","components","App","Object","defineProperty","value","_Identity","_Identity2","_Projects","_Projects2","Identity","Projects","data","show","events","toggle-overlay","this","skills","skill","ready","i","slice","longest","sort","a","b","length","base","time","self","interval","setInterval","j","secondInterval","clearInterval","window","addEventListener","console","log","beforeDestroy","props","methods","clicked","$dispatch","_Project","_Project2","Project","visible","projects","name","desc","role","technologies","class","url","__vue_script__","__vue_template__","options","template","set","key","val","hasOwn","_isVue","_data","ob","__ob__","convert","dep","notify","vms","vm","_proxy","_digest","del","_unproxy","hasOwnProperty","isLiteral","exp","literalValueRE","test","isReserved","str","charCodeAt","_toString","toString","toNumber","parsed","Number","isNaN","toBoolean","stripQuotes","camelize","replace","camelizeRE","toUpper","_","toUpperCase","hyphenate","hyphenateRE","toLowerCase","classify","classifyRE","bind$1","fn","ctx","l","arguments","apply","toArray","list","start","ret","Array","extend","to","from","keys","isObject","isPlainObject","OBJECT_STRING","def","enumerable","writable","configurable","_debounce","func","wait","timeout","args","context","timestamp","result","later","last","Date","now","setTimeout","indexOf","arr","cancellable","cb","cancelled","cancel","looseEqual","JSON","stringify","Cache","limit","size","head","tail","undefined","_keymap","create","pushFilter","filter","lastFilterIndex","trim","tokens","match","filterTokenRE","map","processFilterArg","dir","filters","push","arg","reservedArgRE","dynamic","stripped","parseDirective","s","hit","cache$1","get","inSingle","inDouble","curly","square","paren","prev","expression","put","escapeRegex","regexEscapeRE","compileRegex","open","config","delimiters","close","unsafeOpen","unsafeDelimiters","unsafeClose","tagRE","RegExp","htmlRE","cache","parseText","text","index","html","first","oneTime","lastIndex","exec","tag","tokensToExp","token","formatToken","join","single","$eval","inlineFilters","filterRE$1","appendWithTransition","target","applyTransition","appendChild","beforeWithTransition","before","removeWithTransition","remove","direction","op","transition","__v_trans","hooks","transitionEndEvent","_isCompiled","$parent","action","query","document","querySelector","inDoc","node","doc","documentElement","parent","parentNode","nodeType","contains","getAttr","_attr","getAttribute","removeAttribute","getBindAttr","hasBindAttr","hasAttribute","insertBefore","after","nextSibling","removeChild","prepend","firstChild","replaceChild","on$1","event","off","removeEventListener","setClass","cls","isIE9","SVGElement","setAttribute","className","addClass","classList","add","cur","removeClass","tar","extractContent","asFragment","child","rawContent","isTemplate","content","DocumentFragment","hasChildNodes","trimNode","createDocumentFragment","createElement","lastChild","tagName","createAnchor","persist","anchor","debug","createComment","createTextNode","__vue_anchor","findRef","hasAttributes","attrs","attributes","refRE","mapNodeRange","end","next","removeNodeRange","frag","onRemoved","removed","done","nodes","checkComponentAttr","hasAttrs","commonTagRE","reservedTagRE","getIsBinding","resolveAsset","is","initProp","prop","path","coerceProp","assertProp","raw","required","expectedType","type","valid","String","Boolean","Function","isArray","validator","coerce","mergeData","toVal","fromVal","mergeAssets","parentVal","childVal","res","guardArrayAssets","guardComponents","ids","Vue","guardProps","assets","asset","mergeOptions","mergeField","strat","strats","defaultStrat","mixins","camelizedId","charAt","assertAsset","Dep","uid$3","subs","Observer","augment","hasProto","protoAugment","copyAugment","arrayMethods","arrayKeys","observeArray","walk","src","__proto__","observe","isExtensible","addVm","defineReactive","getter","setter","convertAllProperties","property","getOwnPropertyDescriptor","childOb","depend","e","newVal","initMixin","prototype","_init","$el","$root","$children","$refs","$els","_watchers","_directives","_uid","uid","_events","_eventsCount","_isFragment","_fragment","_fragmentStart","_fragmentEnd","_isDestroyed","_isReady","_isAttached","_isBeingDestroyed","_unlinkFn","_context","_scope","_frag","children","$options","constructor","_updateRef","_callHook","_initState","_initEvents","$mount","getPathCharType","ch","code","formatSubPath","trimmed","parse","maybeUnescapeQuote","nextChar","mode","IN_SINGLE_QUOTE","IN_DOUBLE_QUOTE","newChar","actions","APPEND","typeMap","BEFORE_PATH","subPathDepth","PUSH","INC_SUB_PATH_DEPTH","PUSH_SUB_PATH","IN_SUB_PATH","pathStateMachine","ERROR","AFTER_PATH","parsePath","pathCache","getPath","parseExpression","setPath","original","$set","save","isString","saved","newlineRE","rewrite","allowedKeywordsRE","restoreRE","restore","compileGetter","improperKeywordsRE","body","saveRE","wsRE","identRE","makeGetterFn","compileSetter","scope","needSet","expressionCache","isSimplePath","pathTestRE","booleanLiteralRE","resetBatcherState","queue","userQueue","has","circular","waiting","internalQueueDepleted","flushBatcherQueue","runBatcherQueue","watcher","run","pushWatcher","user","q","nextTick","Watcher","expOrFn","isFn","uid$2","active","dirty","lazy","deps","newDeps","prevError","twoWay","queued","shallow","traverse","normalize","propCache","prefix","camel","upper","testEl","style","prefixed","prefixes","camelPrefixes","keyFilter","handler","codes","charCode","parseInt","keyCodes","keyCode","stopFilter","stopPropagation","preventFilter","preventDefault","getValue","multi","init","selected","_value","indexOf$1","isRealTemplate","stringToFragment","templateString","templateCache","tagMatch","tagRE$1","entityMatch","entityRE","wrap","efault","depth","suffix","templateStringToUse","innerHTML","nodeToFragment","textContent","clonedNode","cloneNode","querySelectorAll","cloned","hasBrokenTemplate","tempClone","hasTextareaCloneBug","parseTemplate","shouldClone","idSelectorCache","getElementById","Fragment","linker","host","parentFrag","childFrags","inserted","unlink","childNodes","singleBefore","singleRemove","multiBefore","multiRemove","__vfrag__","withTransition","method","callHook","attach","shouldCallRemove","beforeRemove","detach","destroy","FragmentFactory","cid","cacheId","outerHTML","linkerCache","compile","findPrevFrag","previousSibling","forId","findVmFromFrag","__vue__","range","n","pushJob","job","queue$1","flush","f","offsetHeight","Transition","enterClass","leaveClass","pendingCssEvent","pendingCssCb","pendingJsCb","justEntered","entered","left","typeCache","forEach","isHidden","offsetWidth","getClientRects","stringToObject","split","contains$1","compileProps","propOptions","attr","names","empty","identRE$1","propBindingModes","ONE_WAY","TWO_WAY","ONE_TIME","optimizedLiteral","parentPath","makePropsLinkFn","_props","getDefault","$get","_bindDir","propDef","partial","nodeLinkFn","_asComponent","compileNode","childLinkFn","terminal","compileNodeList","dirs","linkAndCapture","makeUnlinkFn","originalDirCount","directiveComparator","_bind","descriptor","priority","DEFAULT_PRIORITY","contextDirs","destroying","teardownDirs","_teardown","$remove","compileAndLinkProps","propsLinkFn","propDirs","compileRoot","contextOptions","contextLinkFn","replacerLinkFn","containerAttrs","_containerAttrs","replacerAttrs","_replacerAttrs","compileDirectives","selfDirs","compileElement","compileTextNode","linkFn","checkTerminalDirectives","checkElementDirectives","checkComponent","_skip","removeText","wholeText","processTextToken","makeTextNodeLinkFn","setTokenType","publicDirectives","fragClone","nodeList","linkFns","makeChildLinkFn","childrenLinkFn","makeTerminalNodeLinkFn","component","ref","internalDirectives","modifiers","literal","componentLinkFn","skip","previousElementSibling","dirName","terminalDirectives","pushDir","interpTokens","hasOneTimeToken","hasOneTime","rawName","rawValue","interp","dirDef","parseModifiers","modifierRE","bind","transitionRE","bindRE","onRE","on","argRE","makeNodeLinkFn","directives","transclude","extractAttrs","_content","transcludeTemplate","replacer","mergeAttrs","specialCharRE","stateMixin","noop","makeComputedGetter","owner","evaluate","newData","_setData","_initProps","_initMeta","_initMethods","_initData","_initComputed","_propsUnlinkFn","propsData","optionsDataFn","optionsData","oldData","removeVm","update","computed","userDef","metas","_meta","eventsMixin","registerComponentEvents","eventRE","_fromParent","$on","registerCallbacks","hash","handlers","register","onAttached","callAttach","onDetached","callDetach","watch","_initDOMHooks","hook","$emit","Directive","_locked","_bound","_listeners","_host","lifecycleMixin","_ref","refs","_compile","_initElement","contentLinkFn","rootLinker","ctor","_linkerCachable","rootUnlinkFn","contentUnlinkFn","_destroy","deferCleanup","_cleanup","destroyReady","pendingRemoval","cleanupIfPossible","$destroy","teardown","$off","miscMixin","_applyFilters","oldValue","write","offset","k","read","_resolveComponent","factory","resolved","requested","pendingCallbacks","cbs","reason","globalAPI","createClass","util","compiler","parsers","text$1","directive","extendOptions","Super","isFirstExtend","_Ctor","Sub","_assetTypes","use","plugin","installed","unshift","install","mixin","definition","dataAPI","clean","asStatement","$arguments","$delete","$watch","deep","sync","immediate","filterRE","$interpolate","$log","domAPI","insert","op1","op2","targetIsDetached","shouldCallHook","append","beforeWithCb","removeWithCb","$nextTick","$appendTo","$prependTo","$before","$after","inDocument","realCb","eventsAPI","modifyListenerCount","count","hookRE","$once","splice","isSource","shouldPropagate","hasParentCbs","some","$broadcast","source","lifecycleAPI","$compile","limitBy","filterBy","search","delimiter","convertArray","item","reduce","concat","$value","$key","orderBy","sortKey","reverse","order","extractFragment","main","__v_selected","inBrowser","navigator","userAgent","isAndroid","transitionProp","animationProp","animationEndEvent","isWebkitTrans","ontransitionend","onwebkittransitionend","isWebkitAnim","onanimationend","onwebkitanimationend","nextTickHandler","pending","copies","callbacks","timerFunc","MutationObserver","counter","observer","textNode","characterData","shift","entry","newer","older","returnEntry","freeze","defineProperties","silent","async","warnExpressionErrors","_delimitersChanged","_propBindingModes","_maxUpdateCount","warn","optionMergeStrategies","instanceData","defaultData","created","attached","detached","beforeCompile","compiled","destroyed","paramAttributes","arrayProto","addSub","sub","removeSub","addDep","getOwnPropertyNames","items","debounce","IN_PATH","BEFORE_IDENT","IN_IDENT","ws","ident","[","eof",".","0","number","'","\"","]","else","allowedKeywords","improperKeywords","beforeGet","preProcess","postProcess","afterGet","forContext","$forContext","alias","_withLock","$index","current","depIds","cloak","ON","MODEL","BIND","TRANSITION","EL","COMPONENT","PARTIAL","FOR","IF","SLOT","unbind","importantRE","cssText","handleObject","handleSingle","isImportant","setProperty","removeProperty","xlinkNS","xlinkRE","disallowedInterpAttrRE","attrWithPropsRE","modelProps","true-value","false-value","invalid","modelProp","model","__v_model","listener","setAttributeNS","esc","tab","enter","space","delete","up","right","down","acceptStatement","iframeBind","contentWindow","stop","prevent","reset","checkbox","getBooleanValue","checked","_trueValue","_falseValue","params","_watcher","afterBind","select","forceUpdate","multiple","initValue","selectedIndex","radio","text$2","isRange","composing","focused","rawListener","hasjQuery","jQuery","checkFilters","hasRead","hasWrite","_unbind","nextElementSibling","elseEl","toggle","display","legend","tr","col","td","th","option","optgroup","thead","tbody","colgroup","caption","tfoot","g","defs","symbol","image","circle","ellipse","line","polygon","polyline","rect","t","placeholder","vIf","elseFactory","elseFrag","uid$1","vFor","inMatch","itMatch","iterator","isOption","diff","updateRef","updateModel","primitive","convertedFromObject","fromObject","trackByKey","trackBy","oldFrags","frags","getCachedFrag","reused","fresh","removalIndex","totalRemoved","deleteCachedFrag","targetPrev","prevEl","currentPrev","insertionIndex","staggerCb","staggerAnchor","move","parentScope","cacheFrag","staggerAmount","getStagger","total","trans","stagger","_preProcess","_postProcess","swap","for","if","TYPE_TRANSITION","TYPE_ANIMATION","transDurationProp","animDurationProp","p$1","cancelPending","callHookWithCb","enterCancelled","enterNextTick","enterDone","getCssTransitionType","setupCssCb","leave","leaveCancelled","leaveDone","leaveNextTick","hasPending","hidden","css","inlineStyles","computedStyles","getComputedStyle","transDuration","animDuration","onEnd","oldId","bindingModes","childKey","parentKey","parentWatcher","childWatcher","keepAlive","inlineTemplate","pendingComponentCb","Component","pendingRemovals","pendingRemovalCb","setComponent","invalidatePending","resolveComponent","mountComponent","unbuild","childVM","ComponentName","activateHook","activate","cached","getCached","newComponent","build","waitingFor","extraOptions","_isRouterView","defer","transitionMode","vClass","handleArray","cleanup","prevKeys","_setupParams","_checkStatement","_update","oldVal","mappedKey","_setupParamWatcher","called","unwatch","paramWatchers","_paramUnwatchFns","$event","listeners","unwatchFns","digitsRE","json","indent","capitalize","uppercase","lowercase","currency","_currency","parseFloat","isFinite","stringified","Math","abs","toFixed","_int","_float","sign","pluralize","delay","slot","fallback","slotName","selector","tryCompile","namedSlot","elementDirectives","_namedSlot","version","transitions","partials"],"mappings":"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","file":"app.3fbbfba608c9f053a7c0.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/static/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _vue = __webpack_require__(17);\n\t\n\tvar _vue2 = _interopRequireDefault(_vue);\n\t\n\tvar _App = __webpack_require__(13);\n\t\n\tvar _App2 = _interopRequireDefault(_App);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t/* eslint-disable no-new */\n\tnew _vue2.default({\n\t  el: 'body',\n\t  components: { App: _App2.default }\n\t});\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _Identity = __webpack_require__(14);\n\t\n\tvar _Identity2 = _interopRequireDefault(_Identity);\n\t\n\tvar _Projects = __webpack_require__(16);\n\t\n\tvar _Projects2 = _interopRequireDefault(_Projects);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t// <template>\n\t//   <div id=\"app\">\n\t//     <identity></identity>\n\t//     <projects :show=\"show\"></projects>\n\t//   </div>\n\t// </template>\n\t//\n\t// <script>\n\texports.default = {\n\t  components: {\n\t    Identity: _Identity2.default,\n\t    Projects: _Projects2.default\n\t  },\n\t  data: function data() {\n\t    return {\n\t      show: false\n\t    };\n\t  },\n\t\n\t  events: {\n\t    'toggle-overlay': function toggleOverlay(show) {\n\t      this.show = show;\n\t    }\n\t  }\n\t};\n\t// </script>\n\t//\n\t// <style>\n\t// body {\n\t//   font-family: \"Lato\", sans-serif;\n\t//   font-style: normal;\n\t//   font-weight: 300;\n\t//   font-size: 13px;\n\t//   margin: 0;padding: 0;\n\t//   height: 100%;\n\t// }\n\t// html {\n\t//   height: 100%;\n\t// }\n\t// #app {\n\t//   height: 100%;\n\t// }\n\t// </style>\n\n\t/* generated by vue-loader */\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t// <template>\n\t//   <div class=\"identity\">\n\t//     <h1>Matthieu Lachassagne</h1>\n\t//     <h2>full-stack padawan</h2>\n\t//     <p>I <span>❤</span> {{ skill }}</p>\n\t//   </div>\n\t// </template>\n\t//\n\t// <script>\n\texports.default = {\n\t  data: function data() {\n\t    return {\n\t      skills: ['JavaScript', 'Rails', 'React.js', 'Vue.js', 'and more'],\n\t      skill: 'Javascript'\n\t    };\n\t  },\n\t  ready: function ready() {\n\t    var i = 0;\n\t    var skills = this.skills.slice(0);\n\t    var longest = skills.sort(function (a, b) {\n\t      return b.length - a.length;\n\t    })[0];\n\t    var length = longest.length;\n\t    var base = 200;\n\t    var time = 200 * length + 1000;\n\t    var self = this;\n\t    self.interval = setInterval(function () {\n\t      var j = 0;\n\t      self.skill = '';\n\t      self.secondInterval = setInterval(function () {\n\t        self.skill += self.skills[i][j];\n\t        j++;\n\t        if (j === self.skills[i].length) {\n\t          j = 0;\n\t          clearInterval(self.secondInterval);\n\t        }\n\t      }, base);\n\t      i++;\n\t      if (i === self.skills.length) i = 0;\n\t    }, time);\n\t    window.addEventListener('blur', function () {\n\t      console.log('nope');\n\t      clearInterval(self.interval);\n\t    }, false);\n\t  },\n\t  beforeDestroy: function beforeDestroy() {\n\t    clearInterval(this.interval);\n\t    clearInterval(this.secondInterval);\n\t  }\n\t};\n\t// </script>\n\t//\n\t// <style>\n\t//   h1 {\n\t//     font-family: \"Raleway\", sans-serif;\n\t//     font-weight: 100;\n\t//     font-size: 4em;\n\t//     text-align: center;\n\t//     margin: 0;\n\t//   }\n\t//   h2 {\n\t//     text-align: center;\n\t//     font-weight: lighter;\n\t//     font-size: 1.5em;\n\t//   }\n\t//   .identity {\n\t//     height: 50%;\n\t//     position: fixed;\n\t//     left: 0;right: 0;\n\t//     padding-top: 50px;\n\t//   }\n\t//\n\t//   .identity p {\n\t//     font-size: 2em;\n\t//     text-align: center;\n\t//     padding-top: 90px;\n\t//   }\n\t//\n\t//   @media screen and (max-width: 620px) {\n\t//     .identity p {\n\t//       font-size: 1.5em;\n\t//       padding-top: 0px;\n\t//     }\n\t//   }\n\t//\n\t//   .identity p span {\n\t//     color: #e74c3c;\n\t//   }\n\t// </style>\n\n\t/* generated by vue-loader */\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t// <template>\n\t//   <div class=\"project {{project.class}} project-{{index}}\" v-on:click=\"clicked\">\n\t//     <a href=\"{{project.url}}\" target=\"_blank\">\n\t//       <h2>{{project.name}}</h2>\n\t//       <p class=\"desc\">{{project.desc}}</p>\n\t//       <div class=\"overlay\">\n\t//         <h2>{{project.role}}</h2>\n\t//         <p>{{project.technologies}}</p>\n\t//       </div>\n\t//     </a>\n\t//   </div>\n\t// </template>\n\t//\n\t// <script>\n\texports.default = {\n\t  props: ['project', 'index', 'show'],\n\t  methods: {\n\t    clicked: function clicked() {\n\t      this.show = !this.show;\n\t      this.$dispatch('toggle-overlay', this.show);\n\t    }\n\t  }\n\t};\n\t// </script>\n\t//\n\t// <style scoped>\n\t//   .project {\n\t//     width: 100%;\n\t//     height: 100%;\n\t//     display: inline-block;\n\t//     position: relative;\n\t//     cursor: pointer;\n\t//   }\n\t//\n\t//   .project a {\n\t//     text-decoration: none;\n\t//   }\n\t//\n\t//   .project h2 {\n\t//     padding: 25px;\n\t//     padding-bottom: 0;\n\t//   }\n\t//\n\t//   .project .overlay {\n\t//     color: #fff;\n\t//     position: absolute;\n\t//     background-color: rgba(0,0,0,.8);\n\t//     top: 0;left: 0;right: 0;bottom: 0;\n\t//     opacity: 0;\n\t//     transition: opacity .5s ease;\n\t//   }\n\t//\n\t//   .desc {\n\t//     height: 100px;\n\t//   }\n\t//\n\t//   h2 {\n\t//     height: 100px;\n\t//   }\n\t//\n\t//   .project:hover .overlay {\n\t//     opacity: 1;\n\t//     transition: opacity .5s ease;\n\t//   }\n\t//\n\t//   .project p {\n\t//     padding: 25px;\n\t//     text-align: center;\n\t//   }\n\t//\n\t//   .conquest {\n\t//     background-color: #212D3B;\n\t//   }\n\t//\n\t//   .conquest a {\n\t//     color: #fff;\n\t//   }\n\t//\n\t//   .moodlr {\n\t//     background-color: #4A90E2;\n\t//   }\n\t//\n\t//   .moodlr a {\n\t//     color: #fff;\n\t//   }\n\t//\n\t//   .striply {\n\t//     background-color: #f5e774;\n\t//   }\n\t//\n\t//   .striply a {\n\t//     color: #333;\n\t//   }\n\t//\n\t//   .infinity {\n\t//     background-color: #0B131C;\n\t//   }\n\t//\n\t//   .infinity a {\n\t//     color: #fff;\n\t//   }\n\t//\n\t//   .worldia {\n\t//     background-color: #63C6AE;\n\t//   }\n\t//\n\t//   .worldia a {\n\t//     color: #fff;\n\t//   }\n\t//\n\t//   .lpf {\n\t//     background-color: #0099CC;\n\t//   }\n\t//\n\t//   .lpf a {\n\t//     color: #fff;\n\t//   }\n\t//\n\t//   .vsl {\n\t//     background-color: #3D454B;\n\t//   }\n\t//\n\t//   .vsl a {\n\t//     color: #fff;\n\t//   }\n\t//\n\t//   .perso {\n\t//     background-color: #e74c3c;\n\t//   }\n\t//\n\t//   .perso a {\n\t//     color: #fff;\n\t//   }\n\t//\n\t//   .appear-transition {\n\t//     transition: all 1s ease;\n\t//     opacity: 1;\n\t//   }\n\t//\n\t//   /* .appear-enter defines the starting state for entering */\n\t//   /* .appear-leave defines the ending state for leaving */\n\t//   .appear-enter, .appear-leave {\n\t//     opacity: 0;\n\t//   }\n\t// </style>\n\n\t/* generated by vue-loader */\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _Project = __webpack_require__(15);\n\t\n\tvar _Project2 = _interopRequireDefault(_Project);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = {\n\t  props: ['show'],\n\t  components: {\n\t    Project: _Project2.default\n\t  },\n\t  data: function data() {\n\t    return {\n\t      visible: false,\n\t      projects: [{\n\t        name: 'Conquest',\n\t        desc: 'Multiplayer Online RTS game in browser',\n\t        role: 'Front-end developer',\n\t        technologies: 'HTML / CSS / JavaScript / Gulp',\n\t        class: 'conquest',\n\t        url: 'http://conquest.io'\n\t      }, {\n\t        name: 'Worldia',\n\t        desc: 'SaaS for customizing trips. Worked on v2 not yet released',\n\t        role: 'Front-end developer',\n\t        technologies: 'HTML / CSS / AngularJS / Symfony2 / CircleCi',\n\t        class: 'worldia',\n\t        url: 'http://worldia.com'\n\t      }, {\n\t        name: 'Moodlr',\n\t        desc: 'Tweeter like for moods',\n\t        role: 'Back-end developer',\n\t        technologies: 'Ruby on Rails / Rspec / Heroku / CircleCi / Travis',\n\t        class: 'moodlr',\n\t        url: 'http://moodlr.herokuapp.com'\n\t      }, {\n\t        name: 'Les petits frenchies',\n\t        desc: 'French fashion blog and e-shop',\n\t        role: 'Wordpress developer',\n\t        technologies: 'WordPress / HTML / CSS / JavaScript',\n\t        class: 'lpf',\n\t        url: 'http://lespetitsfrenchies.fr'\n\t\n\t      }, {\n\t        name: 'Striply',\n\t        desc: 'Online portfolio for comic strip artists',\n\t        role: 'Lead developer',\n\t        technologies: 'FatFreeFramework / HTML / Sass / JavaScript / Gulp',\n\t        class: 'striply',\n\t        url: 'https://github.com/Mteuahasan/backend-project-hetic'\n\t      }, {\n\t        name: 'Versailles Sciences Lab',\n\t        desc: 'Insitutional website for the Versaille University',\n\t        role: 'Wordpress developer',\n\t        technologies: 'WordPress / HTML / CSS / JavaScript',\n\t        class: 'vsl',\n\t        url: 'http://vsl.prism.uvsq.fr/'\n\t      }, {\n\t        name: 'Infinity',\n\t        desc: 'Galactic physics simulation',\n\t        role: 'Physics & WebGL hacker',\n\t        technologies: 'WebGL',\n\t        class: 'infinity',\n\t        url: 'http://matthieulachassagne.com/infinity'\n\t      }, {\n\t        name: 'This website',\n\t        desc: 'is a portfolio.',\n\t        role: 'Web development',\n\t        technologies: 'Vue.js / Webpack / Babel',\n\t        class: 'perso',\n\t        url: 'http://github.com/mteuahasan'\n\t      }, {\n\t        name: 'Coming soon',\n\t        desc: 'other stuffs...',\n\t        role: 'including...',\n\t        technologies: 'React.js / Electron...',\n\t        class: ''\n\t      }]\n\t    };\n\t  },\n\t  ready: function ready() {\n\t    this.visible = true;\n\t  }\n\t};\n\t// </script>\n\t//\n\t// <style>\n\t//   #showcase {\n\t//     width: 100%;\n\t//     height: 50%;\n\t//     position: absolute;\n\t//     bottom: 0;\n\t//     top: 50%;\n\t//   }\n\t//\n\t//   #showcase > div {\n\t//     float: left;\n\t//     width: 33.3333%;\n\t//     height: auto;\n\t//     display: inline-block;\n\t//   }\n\t// </style>\n\n\t/* generated by vue-loader */\n\t// <template>\n\t//   <div id=\"showcase\">\n\t//     <div v-for=\"(index, project) in projects\">\n\t//       <project :project=\"project\" :index=\"index\" :show=\"show\" transition=\"appear\" transition-mode=\"out-in\" v-if=\"visible\"></project><!--\n\t//       -->\n\t//     </div>\n\t//   </div>\n\t// </template>\n\t//\n\t// <script>\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n/* 8 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n/* 9 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div id=app><identity></identity><projects :show=show></projects></div>\";\n\n/***/ },\n/* 10 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=identity><h1>Matthieu Lachassagne</h1><h2>full-stack padawan</h2><p>I <span>❤</span> {{ skill }}</p></div>\";\n\n/***/ },\n/* 11 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div id=showcase><div v-for=\\\"(index, project) in projects\\\"><project :project=project :index=index :show=show transition=appear transition-mode=out-in v-if=visible></project></div></div>\";\n\n/***/ },\n/* 12 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=\\\"project {{project.class}} project-{{index}}\\\" v-on:click=clicked _v-9418e7c8=\\\"\\\"><a href={{project.url}} target=_blank _v-9418e7c8=\\\"\\\"><h2 _v-9418e7c8=\\\"\\\">{{project.name}}</h2><p class=desc _v-9418e7c8=\\\"\\\">{{project.desc}}</p><div class=overlay _v-9418e7c8=\\\"\\\"><h2 _v-9418e7c8=\\\"\\\">{{project.role}}</h2><p _v-9418e7c8=\\\"\\\">{{project.technologies}}</p></div></a></div>\";\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__webpack_require__(6)\n\t__vue_script__ = __webpack_require__(1)\n\t__vue_template__ = __webpack_require__(9)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) { (typeof module.exports === \"function\" ? module.exports.options : module.exports).template = __vue_template__ }\n\tif (false) {(function () {  module.hot.accept()\n\t  var hotAPI = require(\"vue-hot-reload-api\")\n\t  hotAPI.install(require(\"vue\"), true)\n\t  if (!hotAPI.compatible) return\n\t  var id = \"/Users/matthieulachassagne/Sites/JS/VUE/matthieulachassagne.com/src/App.vue\"\n\t  if (!module.hot.data) {\n\t    hotAPI.createRecord(id, module.exports)\n\t  } else {\n\t    hotAPI.update(id, module.exports, __vue_template__)\n\t  }\n\t})()}\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__webpack_require__(7)\n\t__vue_script__ = __webpack_require__(2)\n\t__vue_template__ = __webpack_require__(10)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) { (typeof module.exports === \"function\" ? module.exports.options : module.exports).template = __vue_template__ }\n\tif (false) {(function () {  module.hot.accept()\n\t  var hotAPI = require(\"vue-hot-reload-api\")\n\t  hotAPI.install(require(\"vue\"), true)\n\t  if (!hotAPI.compatible) return\n\t  var id = \"/Users/matthieulachassagne/Sites/JS/VUE/matthieulachassagne.com/src/components/Identity.vue\"\n\t  if (!module.hot.data) {\n\t    hotAPI.createRecord(id, module.exports)\n\t  } else {\n\t    hotAPI.update(id, module.exports, __vue_template__)\n\t  }\n\t})()}\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__webpack_require__(8)\n\t__vue_script__ = __webpack_require__(3)\n\t__vue_template__ = __webpack_require__(12)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) { (typeof module.exports === \"function\" ? module.exports.options : module.exports).template = __vue_template__ }\n\tif (false) {(function () {  module.hot.accept()\n\t  var hotAPI = require(\"vue-hot-reload-api\")\n\t  hotAPI.install(require(\"vue\"), true)\n\t  if (!hotAPI.compatible) return\n\t  var id = \"/Users/matthieulachassagne/Sites/JS/VUE/matthieulachassagne.com/src/components/Project.vue\"\n\t  if (!module.hot.data) {\n\t    hotAPI.createRecord(id, module.exports)\n\t  } else {\n\t    hotAPI.update(id, module.exports, __vue_template__)\n\t  }\n\t})()}\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__webpack_require__(5)\n\t__vue_script__ = __webpack_require__(4)\n\t__vue_template__ = __webpack_require__(11)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) { (typeof module.exports === \"function\" ? module.exports.options : module.exports).template = __vue_template__ }\n\tif (false) {(function () {  module.hot.accept()\n\t  var hotAPI = require(\"vue-hot-reload-api\")\n\t  hotAPI.install(require(\"vue\"), true)\n\t  if (!hotAPI.compatible) return\n\t  var id = \"/Users/matthieulachassagne/Sites/JS/VUE/matthieulachassagne.com/src/components/Projects.vue\"\n\t  if (!module.hot.data) {\n\t    hotAPI.createRecord(id, module.exports)\n\t  } else {\n\t    hotAPI.update(id, module.exports, __vue_template__)\n\t  }\n\t})()}\n\n/***/ },\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*!\n\t * Vue.js v1.0.15\n\t * (c) 2016 Evan You\n\t * Released under the MIT License.\n\t */\n\t'use strict';\n\t\n\tfunction set(obj, key, val) {\n\t  if (hasOwn(obj, key)) {\n\t    obj[key] = val;\n\t    return;\n\t  }\n\t  if (obj._isVue) {\n\t    set(obj._data, key, val);\n\t    return;\n\t  }\n\t  var ob = obj.__ob__;\n\t  if (!ob) {\n\t    obj[key] = val;\n\t    return;\n\t  }\n\t  ob.convert(key, val);\n\t  ob.dep.notify();\n\t  if (ob.vms) {\n\t    var i = ob.vms.length;\n\t    while (i--) {\n\t      var vm = ob.vms[i];\n\t      vm._proxy(key);\n\t      vm._digest();\n\t    }\n\t  }\n\t  return val;\n\t}\n\t\n\t/**\n\t * Delete a property and trigger change if necessary.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t */\n\t\n\tfunction del(obj, key) {\n\t  if (!hasOwn(obj, key)) {\n\t    return;\n\t  }\n\t  delete obj[key];\n\t  var ob = obj.__ob__;\n\t  if (!ob) {\n\t    return;\n\t  }\n\t  ob.dep.notify();\n\t  if (ob.vms) {\n\t    var i = ob.vms.length;\n\t    while (i--) {\n\t      var vm = ob.vms[i];\n\t      vm._unproxy(key);\n\t      vm._digest();\n\t    }\n\t  }\n\t}\n\t\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\t/**\n\t * Check whether the object has the property.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t * @return {Boolean}\n\t */\n\t\n\tfunction hasOwn(obj, key) {\n\t  return hasOwnProperty.call(obj, key);\n\t}\n\t\n\t/**\n\t * Check if an expression is a literal value.\n\t *\n\t * @param {String} exp\n\t * @return {Boolean}\n\t */\n\t\n\tvar literalValueRE = /^\\s?(true|false|[\\d\\.]+|'[^']*'|\"[^\"]*\")\\s?$/;\n\t\n\tfunction isLiteral(exp) {\n\t  return literalValueRE.test(exp);\n\t}\n\t\n\t/**\n\t * Check if a string starts with $ or _\n\t *\n\t * @param {String} str\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isReserved(str) {\n\t  var c = (str + '').charCodeAt(0);\n\t  return c === 0x24 || c === 0x5F;\n\t}\n\t\n\t/**\n\t * Guard text output, make sure undefined outputs\n\t * empty string\n\t *\n\t * @param {*} value\n\t * @return {String}\n\t */\n\t\n\tfunction _toString(value) {\n\t  return value == null ? '' : value.toString();\n\t}\n\t\n\t/**\n\t * Check and convert possible numeric strings to numbers\n\t * before setting back to data\n\t *\n\t * @param {*} value\n\t * @return {*|Number}\n\t */\n\t\n\tfunction toNumber(value) {\n\t  if (typeof value !== 'string') {\n\t    return value;\n\t  } else {\n\t    var parsed = Number(value);\n\t    return isNaN(parsed) ? value : parsed;\n\t  }\n\t}\n\t\n\t/**\n\t * Convert string boolean literals into real booleans.\n\t *\n\t * @param {*} value\n\t * @return {*|Boolean}\n\t */\n\t\n\tfunction toBoolean(value) {\n\t  return value === 'true' ? true : value === 'false' ? false : value;\n\t}\n\t\n\t/**\n\t * Strip quotes from a string\n\t *\n\t * @param {String} str\n\t * @return {String | false}\n\t */\n\t\n\tfunction stripQuotes(str) {\n\t  var a = str.charCodeAt(0);\n\t  var b = str.charCodeAt(str.length - 1);\n\t  return a === b && (a === 0x22 || a === 0x27) ? str.slice(1, -1) : str;\n\t}\n\t\n\t/**\n\t * Camelize a hyphen-delmited string.\n\t *\n\t * @param {String} str\n\t * @return {String}\n\t */\n\t\n\tvar camelizeRE = /-(\\w)/g;\n\t\n\tfunction camelize(str) {\n\t  return str.replace(camelizeRE, toUpper);\n\t}\n\t\n\tfunction toUpper(_, c) {\n\t  return c ? c.toUpperCase() : '';\n\t}\n\t\n\t/**\n\t * Hyphenate a camelCase string.\n\t *\n\t * @param {String} str\n\t * @return {String}\n\t */\n\t\n\tvar hyphenateRE = /([a-z\\d])([A-Z])/g;\n\t\n\tfunction hyphenate(str) {\n\t  return str.replace(hyphenateRE, '$1-$2').toLowerCase();\n\t}\n\t\n\t/**\n\t * Converts hyphen/underscore/slash delimitered names into\n\t * camelized classNames.\n\t *\n\t * e.g. my-component => MyComponent\n\t *      some_else    => SomeElse\n\t *      some/comp    => SomeComp\n\t *\n\t * @param {String} str\n\t * @return {String}\n\t */\n\t\n\tvar classifyRE = /(?:^|[-_\\/])(\\w)/g;\n\t\n\tfunction classify(str) {\n\t  return str.replace(classifyRE, toUpper);\n\t}\n\t\n\t/**\n\t * Simple bind, faster than native\n\t *\n\t * @param {Function} fn\n\t * @param {Object} ctx\n\t * @return {Function}\n\t */\n\t\n\tfunction bind$1(fn, ctx) {\n\t  return function (a) {\n\t    var l = arguments.length;\n\t    return l ? l > 1 ? fn.apply(ctx, arguments) : fn.call(ctx, a) : fn.call(ctx);\n\t  };\n\t}\n\t\n\t/**\n\t * Convert an Array-like object to a real Array.\n\t *\n\t * @param {Array-like} list\n\t * @param {Number} [start] - start index\n\t * @return {Array}\n\t */\n\t\n\tfunction toArray(list, start) {\n\t  start = start || 0;\n\t  var i = list.length - start;\n\t  var ret = new Array(i);\n\t  while (i--) {\n\t    ret[i] = list[i + start];\n\t  }\n\t  return ret;\n\t}\n\t\n\t/**\n\t * Mix properties into target object.\n\t *\n\t * @param {Object} to\n\t * @param {Object} from\n\t */\n\t\n\tfunction extend(to, from) {\n\t  var keys = Object.keys(from);\n\t  var i = keys.length;\n\t  while (i--) {\n\t    to[keys[i]] = from[keys[i]];\n\t  }\n\t  return to;\n\t}\n\t\n\t/**\n\t * Quick object check - this is primarily used to tell\n\t * Objects from primitive values when we know the value\n\t * is a JSON-compliant type.\n\t *\n\t * @param {*} obj\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isObject(obj) {\n\t  return obj !== null && typeof obj === 'object';\n\t}\n\t\n\t/**\n\t * Strict object type check. Only returns true\n\t * for plain JavaScript objects.\n\t *\n\t * @param {*} obj\n\t * @return {Boolean}\n\t */\n\t\n\tvar toString = Object.prototype.toString;\n\tvar OBJECT_STRING = '[object Object]';\n\t\n\tfunction isPlainObject(obj) {\n\t  return toString.call(obj) === OBJECT_STRING;\n\t}\n\t\n\t/**\n\t * Array type check.\n\t *\n\t * @param {*} obj\n\t * @return {Boolean}\n\t */\n\t\n\tvar isArray = Array.isArray;\n\t\n\t/**\n\t * Define a non-enumerable property\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t * @param {*} val\n\t * @param {Boolean} [enumerable]\n\t */\n\t\n\tfunction def(obj, key, val, enumerable) {\n\t  Object.defineProperty(obj, key, {\n\t    value: val,\n\t    enumerable: !!enumerable,\n\t    writable: true,\n\t    configurable: true\n\t  });\n\t}\n\t\n\t/**\n\t * Debounce a function so it only gets called after the\n\t * input stops arriving after the given wait period.\n\t *\n\t * @param {Function} func\n\t * @param {Number} wait\n\t * @return {Function} - the debounced function\n\t */\n\t\n\tfunction _debounce(func, wait) {\n\t  var timeout, args, context, timestamp, result;\n\t  var later = function later() {\n\t    var last = Date.now() - timestamp;\n\t    if (last < wait && last >= 0) {\n\t      timeout = setTimeout(later, wait - last);\n\t    } else {\n\t      timeout = null;\n\t      result = func.apply(context, args);\n\t      if (!timeout) context = args = null;\n\t    }\n\t  };\n\t  return function () {\n\t    context = this;\n\t    args = arguments;\n\t    timestamp = Date.now();\n\t    if (!timeout) {\n\t      timeout = setTimeout(later, wait);\n\t    }\n\t    return result;\n\t  };\n\t}\n\t\n\t/**\n\t * Manual indexOf because it's slightly faster than\n\t * native.\n\t *\n\t * @param {Array} arr\n\t * @param {*} obj\n\t */\n\t\n\tfunction indexOf(arr, obj) {\n\t  var i = arr.length;\n\t  while (i--) {\n\t    if (arr[i] === obj) return i;\n\t  }\n\t  return -1;\n\t}\n\t\n\t/**\n\t * Make a cancellable version of an async callback.\n\t *\n\t * @param {Function} fn\n\t * @return {Function}\n\t */\n\t\n\tfunction cancellable(fn) {\n\t  var cb = function cb() {\n\t    if (!cb.cancelled) {\n\t      return fn.apply(this, arguments);\n\t    }\n\t  };\n\t  cb.cancel = function () {\n\t    cb.cancelled = true;\n\t  };\n\t  return cb;\n\t}\n\t\n\t/**\n\t * Check if two values are loosely equal - that is,\n\t * if they are plain objects, do they have the same shape?\n\t *\n\t * @param {*} a\n\t * @param {*} b\n\t * @return {Boolean}\n\t */\n\t\n\tfunction looseEqual(a, b) {\n\t  /* eslint-disable eqeqeq */\n\t  return a == b || (isObject(a) && isObject(b) ? JSON.stringify(a) === JSON.stringify(b) : false);\n\t  /* eslint-enable eqeqeq */\n\t}\n\t\n\tvar hasProto = ('__proto__' in {});\n\t\n\t// Browser environment sniffing\n\tvar inBrowser = typeof window !== 'undefined' && Object.prototype.toString.call(window) !== '[object Object]';\n\t\n\tvar isIE9 = inBrowser && navigator.userAgent.toLowerCase().indexOf('msie 9.0') > 0;\n\t\n\tvar isAndroid = inBrowser && navigator.userAgent.toLowerCase().indexOf('android') > 0;\n\t\n\tvar transitionProp = undefined;\n\tvar transitionEndEvent = undefined;\n\tvar animationProp = undefined;\n\tvar animationEndEvent = undefined;\n\t\n\t// Transition property/event sniffing\n\tif (inBrowser && !isIE9) {\n\t  var isWebkitTrans = window.ontransitionend === undefined && window.onwebkittransitionend !== undefined;\n\t  var isWebkitAnim = window.onanimationend === undefined && window.onwebkitanimationend !== undefined;\n\t  transitionProp = isWebkitTrans ? 'WebkitTransition' : 'transition';\n\t  transitionEndEvent = isWebkitTrans ? 'webkitTransitionEnd' : 'transitionend';\n\t  animationProp = isWebkitAnim ? 'WebkitAnimation' : 'animation';\n\t  animationEndEvent = isWebkitAnim ? 'webkitAnimationEnd' : 'animationend';\n\t}\n\t\n\t/**\n\t * Defer a task to execute it asynchronously. Ideally this\n\t * should be executed as a microtask, so we leverage\n\t * MutationObserver if it's available, and fallback to\n\t * setTimeout(0).\n\t *\n\t * @param {Function} cb\n\t * @param {Object} ctx\n\t */\n\t\n\tvar nextTick = (function () {\n\t  var callbacks = [];\n\t  var pending = false;\n\t  var timerFunc;\n\t  function nextTickHandler() {\n\t    pending = false;\n\t    var copies = callbacks.slice(0);\n\t    callbacks = [];\n\t    for (var i = 0; i < copies.length; i++) {\n\t      copies[i]();\n\t    }\n\t  }\n\t  /* istanbul ignore if */\n\t  if (typeof MutationObserver !== 'undefined') {\n\t    var counter = 1;\n\t    var observer = new MutationObserver(nextTickHandler);\n\t    var textNode = document.createTextNode(counter);\n\t    observer.observe(textNode, {\n\t      characterData: true\n\t    });\n\t    timerFunc = function () {\n\t      counter = (counter + 1) % 2;\n\t      textNode.data = counter;\n\t    };\n\t  } else {\n\t    timerFunc = setTimeout;\n\t  }\n\t  return function (cb, ctx) {\n\t    var func = ctx ? function () {\n\t      cb.call(ctx);\n\t    } : cb;\n\t    callbacks.push(func);\n\t    if (pending) return;\n\t    pending = true;\n\t    timerFunc(nextTickHandler, 0);\n\t  };\n\t})();\n\t\n\tfunction Cache(limit) {\n\t  this.size = 0;\n\t  this.limit = limit;\n\t  this.head = this.tail = undefined;\n\t  this._keymap = Object.create(null);\n\t}\n\t\n\tvar p = Cache.prototype;\n\t\n\t/**\n\t * Put <value> into the cache associated with <key>.\n\t * Returns the entry which was removed to make room for\n\t * the new entry. Otherwise undefined is returned.\n\t * (i.e. if there was enough room already).\n\t *\n\t * @param {String} key\n\t * @param {*} value\n\t * @return {Entry|undefined}\n\t */\n\t\n\tp.put = function (key, value) {\n\t  var removed;\n\t  if (this.size === this.limit) {\n\t    removed = this.shift();\n\t  }\n\t\n\t  var entry = this.get(key, true);\n\t  if (!entry) {\n\t    entry = {\n\t      key: key\n\t    };\n\t    this._keymap[key] = entry;\n\t    if (this.tail) {\n\t      this.tail.newer = entry;\n\t      entry.older = this.tail;\n\t    } else {\n\t      this.head = entry;\n\t    }\n\t    this.tail = entry;\n\t    this.size++;\n\t  }\n\t  entry.value = value;\n\t\n\t  return removed;\n\t};\n\t\n\t/**\n\t * Purge the least recently used (oldest) entry from the\n\t * cache. Returns the removed entry or undefined if the\n\t * cache was empty.\n\t */\n\t\n\tp.shift = function () {\n\t  var entry = this.head;\n\t  if (entry) {\n\t    this.head = this.head.newer;\n\t    this.head.older = undefined;\n\t    entry.newer = entry.older = undefined;\n\t    this._keymap[entry.key] = undefined;\n\t    this.size--;\n\t  }\n\t  return entry;\n\t};\n\t\n\t/**\n\t * Get and register recent use of <key>. Returns the value\n\t * associated with <key> or undefined if not in cache.\n\t *\n\t * @param {String} key\n\t * @param {Boolean} returnEntry\n\t * @return {Entry|*}\n\t */\n\t\n\tp.get = function (key, returnEntry) {\n\t  var entry = this._keymap[key];\n\t  if (entry === undefined) return;\n\t  if (entry === this.tail) {\n\t    return returnEntry ? entry : entry.value;\n\t  }\n\t  // HEAD--------------TAIL\n\t  //   <.older   .newer>\n\t  //  <--- add direction --\n\t  //   A  B  C  <D>  E\n\t  if (entry.newer) {\n\t    if (entry === this.head) {\n\t      this.head = entry.newer;\n\t    }\n\t    entry.newer.older = entry.older; // C <-- E.\n\t  }\n\t  if (entry.older) {\n\t    entry.older.newer = entry.newer; // C. --> E\n\t  }\n\t  entry.newer = undefined; // D --x\n\t  entry.older = this.tail; // D. --> E\n\t  if (this.tail) {\n\t    this.tail.newer = entry; // E. <-- D\n\t  }\n\t  this.tail = entry;\n\t  return returnEntry ? entry : entry.value;\n\t};\n\t\n\tvar cache$1 = new Cache(1000);\n\tvar filterTokenRE = /[^\\s'\"]+|'[^']*'|\"[^\"]*\"/g;\n\tvar reservedArgRE = /^in$|^-?\\d+/;\n\t\n\t/**\n\t * Parser state\n\t */\n\t\n\tvar str;\n\tvar dir;\n\tvar c;\n\tvar prev;\n\tvar i;\n\tvar l;\n\tvar lastFilterIndex;\n\tvar inSingle;\n\tvar inDouble;\n\tvar curly;\n\tvar square;\n\tvar paren;\n\t/**\n\t * Push a filter to the current directive object\n\t */\n\t\n\tfunction pushFilter() {\n\t  var exp = str.slice(lastFilterIndex, i).trim();\n\t  var filter;\n\t  if (exp) {\n\t    filter = {};\n\t    var tokens = exp.match(filterTokenRE);\n\t    filter.name = tokens[0];\n\t    if (tokens.length > 1) {\n\t      filter.args = tokens.slice(1).map(processFilterArg);\n\t    }\n\t  }\n\t  if (filter) {\n\t    (dir.filters = dir.filters || []).push(filter);\n\t  }\n\t  lastFilterIndex = i + 1;\n\t}\n\t\n\t/**\n\t * Check if an argument is dynamic and strip quotes.\n\t *\n\t * @param {String} arg\n\t * @return {Object}\n\t */\n\t\n\tfunction processFilterArg(arg) {\n\t  if (reservedArgRE.test(arg)) {\n\t    return {\n\t      value: toNumber(arg),\n\t      dynamic: false\n\t    };\n\t  } else {\n\t    var stripped = stripQuotes(arg);\n\t    var dynamic = stripped === arg;\n\t    return {\n\t      value: dynamic ? arg : stripped,\n\t      dynamic: dynamic\n\t    };\n\t  }\n\t}\n\t\n\t/**\n\t * Parse a directive value and extract the expression\n\t * and its filters into a descriptor.\n\t *\n\t * Example:\n\t *\n\t * \"a + 1 | uppercase\" will yield:\n\t * {\n\t *   expression: 'a + 1',\n\t *   filters: [\n\t *     { name: 'uppercase', args: null }\n\t *   ]\n\t * }\n\t *\n\t * @param {String} str\n\t * @return {Object}\n\t */\n\t\n\tfunction parseDirective(s) {\n\t\n\t  var hit = cache$1.get(s);\n\t  if (hit) {\n\t    return hit;\n\t  }\n\t\n\t  // reset parser state\n\t  str = s;\n\t  inSingle = inDouble = false;\n\t  curly = square = paren = 0;\n\t  lastFilterIndex = 0;\n\t  dir = {};\n\t\n\t  for (i = 0, l = str.length; i < l; i++) {\n\t    prev = c;\n\t    c = str.charCodeAt(i);\n\t    if (inSingle) {\n\t      // check single quote\n\t      if (c === 0x27 && prev !== 0x5C) inSingle = !inSingle;\n\t    } else if (inDouble) {\n\t      // check double quote\n\t      if (c === 0x22 && prev !== 0x5C) inDouble = !inDouble;\n\t    } else if (c === 0x7C && // pipe\n\t    str.charCodeAt(i + 1) !== 0x7C && str.charCodeAt(i - 1) !== 0x7C) {\n\t      if (dir.expression == null) {\n\t        // first filter, end of expression\n\t        lastFilterIndex = i + 1;\n\t        dir.expression = str.slice(0, i).trim();\n\t      } else {\n\t        // already has filter\n\t        pushFilter();\n\t      }\n\t    } else {\n\t      switch (c) {\n\t        case 0x22:\n\t          inDouble = true;break; // \"\n\t        case 0x27:\n\t          inSingle = true;break; // '\n\t        case 0x28:\n\t          paren++;break; // (\n\t        case 0x29:\n\t          paren--;break; // )\n\t        case 0x5B:\n\t          square++;break; // [\n\t        case 0x5D:\n\t          square--;break; // ]\n\t        case 0x7B:\n\t          curly++;break; // {\n\t        case 0x7D:\n\t          curly--;break; // }\n\t      }\n\t    }\n\t  }\n\t\n\t  if (dir.expression == null) {\n\t    dir.expression = str.slice(0, i).trim();\n\t  } else if (lastFilterIndex !== 0) {\n\t    pushFilter();\n\t  }\n\t\n\t  cache$1.put(s, dir);\n\t  return dir;\n\t}\n\t\n\tvar directive = Object.freeze({\n\t  parseDirective: parseDirective\n\t});\n\t\n\tvar regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n\tvar cache = undefined;\n\tvar tagRE = undefined;\n\tvar htmlRE = undefined;\n\t/**\n\t * Escape a string so it can be used in a RegExp\n\t * constructor.\n\t *\n\t * @param {String} str\n\t */\n\t\n\tfunction escapeRegex(str) {\n\t  return str.replace(regexEscapeRE, '\\\\$&');\n\t}\n\t\n\tfunction compileRegex() {\n\t  var open = escapeRegex(config.delimiters[0]);\n\t  var close = escapeRegex(config.delimiters[1]);\n\t  var unsafeOpen = escapeRegex(config.unsafeDelimiters[0]);\n\t  var unsafeClose = escapeRegex(config.unsafeDelimiters[1]);\n\t  tagRE = new RegExp(unsafeOpen + '(.+?)' + unsafeClose + '|' + open + '(.+?)' + close, 'g');\n\t  htmlRE = new RegExp('^' + unsafeOpen + '.*' + unsafeClose + '$');\n\t  // reset cache\n\t  cache = new Cache(1000);\n\t}\n\t\n\t/**\n\t * Parse a template text string into an array of tokens.\n\t *\n\t * @param {String} text\n\t * @return {Array<Object> | null}\n\t *               - {String} type\n\t *               - {String} value\n\t *               - {Boolean} [html]\n\t *               - {Boolean} [oneTime]\n\t */\n\t\n\tfunction parseText(text) {\n\t  if (!cache) {\n\t    compileRegex();\n\t  }\n\t  var hit = cache.get(text);\n\t  if (hit) {\n\t    return hit;\n\t  }\n\t  text = text.replace(/\\n/g, '');\n\t  if (!tagRE.test(text)) {\n\t    return null;\n\t  }\n\t  var tokens = [];\n\t  var lastIndex = tagRE.lastIndex = 0;\n\t  var match, index, html, value, first, oneTime;\n\t  /* eslint-disable no-cond-assign */\n\t  while (match = tagRE.exec(text)) {\n\t    /* eslint-enable no-cond-assign */\n\t    index = match.index;\n\t    // push text token\n\t    if (index > lastIndex) {\n\t      tokens.push({\n\t        value: text.slice(lastIndex, index)\n\t      });\n\t    }\n\t    // tag token\n\t    html = htmlRE.test(match[0]);\n\t    value = html ? match[1] : match[2];\n\t    first = value.charCodeAt(0);\n\t    oneTime = first === 42; // *\n\t    value = oneTime ? value.slice(1) : value;\n\t    tokens.push({\n\t      tag: true,\n\t      value: value.trim(),\n\t      html: html,\n\t      oneTime: oneTime\n\t    });\n\t    lastIndex = index + match[0].length;\n\t  }\n\t  if (lastIndex < text.length) {\n\t    tokens.push({\n\t      value: text.slice(lastIndex)\n\t    });\n\t  }\n\t  cache.put(text, tokens);\n\t  return tokens;\n\t}\n\t\n\t/**\n\t * Format a list of tokens into an expression.\n\t * e.g. tokens parsed from 'a {{b}} c' can be serialized\n\t * into one single expression as '\"a \" + b + \" c\"'.\n\t *\n\t * @param {Array} tokens\n\t * @param {Vue} [vm]\n\t * @return {String}\n\t */\n\t\n\tfunction tokensToExp(tokens, vm) {\n\t  if (tokens.length > 1) {\n\t    return tokens.map(function (token) {\n\t      return formatToken(token, vm);\n\t    }).join('+');\n\t  } else {\n\t    return formatToken(tokens[0], vm, true);\n\t  }\n\t}\n\t\n\t/**\n\t * Format a single token.\n\t *\n\t * @param {Object} token\n\t * @param {Vue} [vm]\n\t * @param {Boolean} [single]\n\t * @return {String}\n\t */\n\t\n\tfunction formatToken(token, vm, single) {\n\t  return token.tag ? token.oneTime && vm ? '\"' + vm.$eval(token.value) + '\"' : inlineFilters(token.value, single) : '\"' + token.value + '\"';\n\t}\n\t\n\t/**\n\t * For an attribute with multiple interpolation tags,\n\t * e.g. attr=\"some-{{thing | filter}}\", in order to combine\n\t * the whole thing into a single watchable expression, we\n\t * have to inline those filters. This function does exactly\n\t * that. This is a bit hacky but it avoids heavy changes\n\t * to directive parser and watcher mechanism.\n\t *\n\t * @param {String} exp\n\t * @param {Boolean} single\n\t * @return {String}\n\t */\n\t\n\tvar filterRE$1 = /[^|]\\|[^|]/;\n\tfunction inlineFilters(exp, single) {\n\t  if (!filterRE$1.test(exp)) {\n\t    return single ? exp : '(' + exp + ')';\n\t  } else {\n\t    var dir = parseDirective(exp);\n\t    if (!dir.filters) {\n\t      return '(' + exp + ')';\n\t    } else {\n\t      return 'this._applyFilters(' + dir.expression + // value\n\t      ',null,' + // oldValue (null for read)\n\t      JSON.stringify(dir.filters) + // filter descriptors\n\t      ',false)'; // write?\n\t    }\n\t  }\n\t}\n\t\n\tvar text$1 = Object.freeze({\n\t  compileRegex: compileRegex,\n\t  parseText: parseText,\n\t  tokensToExp: tokensToExp\n\t});\n\t\n\tvar delimiters = ['{{', '}}'];\n\tvar unsafeDelimiters = ['{{{', '}}}'];\n\t\n\tvar config = Object.defineProperties({\n\t\n\t  /**\n\t   * Whether to print debug messages.\n\t   * Also enables stack trace for warnings.\n\t   *\n\t   * @type {Boolean}\n\t   */\n\t\n\t  debug: false,\n\t\n\t  /**\n\t   * Whether to suppress warnings.\n\t   *\n\t   * @type {Boolean}\n\t   */\n\t\n\t  silent: false,\n\t\n\t  /**\n\t   * Whether to use async rendering.\n\t   */\n\t\n\t  async: true,\n\t\n\t  /**\n\t   * Whether to warn against errors caught when evaluating\n\t   * expressions.\n\t   */\n\t\n\t  warnExpressionErrors: true,\n\t\n\t  /**\n\t   * Whether or not to handle fully object properties which\n\t   * are already backed by getters and seters. Depending on\n\t   * use case and environment, this might introduce non-neglible\n\t   * performance penalties.\n\t   */\n\t  convertAllProperties: false,\n\t\n\t  /**\n\t   * Internal flag to indicate the delimiters have been\n\t   * changed.\n\t   *\n\t   * @type {Boolean}\n\t   */\n\t\n\t  _delimitersChanged: true,\n\t\n\t  /**\n\t   * List of asset types that a component can own.\n\t   *\n\t   * @type {Array}\n\t   */\n\t\n\t  _assetTypes: ['component', 'directive', 'elementDirective', 'filter', 'transition', 'partial'],\n\t\n\t  /**\n\t   * prop binding modes\n\t   */\n\t\n\t  _propBindingModes: {\n\t    ONE_WAY: 0,\n\t    TWO_WAY: 1,\n\t    ONE_TIME: 2\n\t  },\n\t\n\t  /**\n\t   * Max circular updates allowed in a batcher flush cycle.\n\t   */\n\t\n\t  _maxUpdateCount: 100\n\t\n\t}, {\n\t  delimiters: { /**\n\t                 * Interpolation delimiters. Changing these would trigger\n\t                 * the text parser to re-compile the regular expressions.\n\t                 *\n\t                 * @type {Array<String>}\n\t                 */\n\t\n\t    get: function get() {\n\t      return delimiters;\n\t    },\n\t    set: function set(val) {\n\t      delimiters = val;\n\t      compileRegex();\n\t    },\n\t    configurable: true,\n\t    enumerable: true\n\t  },\n\t  unsafeDelimiters: {\n\t    get: function get() {\n\t      return unsafeDelimiters;\n\t    },\n\t    set: function set(val) {\n\t      unsafeDelimiters = val;\n\t      compileRegex();\n\t    },\n\t    configurable: true,\n\t    enumerable: true\n\t  }\n\t});\n\t\n\tvar warn = undefined;\n\t\n\tif (false) {\n\t  (function () {\n\t    var hasConsole = typeof console !== 'undefined';\n\t    warn = function (msg, e) {\n\t      if (hasConsole && (!config.silent || config.debug)) {\n\t        console.warn('[Vue warn]: ' + msg);\n\t        /* istanbul ignore if */\n\t        if (config.debug) {\n\t          if (e) {\n\t            throw e;\n\t          } else {\n\t            console.warn(new Error('Warning Stack Trace').stack);\n\t          }\n\t        }\n\t      }\n\t    };\n\t  })();\n\t}\n\t\n\t/**\n\t * Append with transition.\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction appendWithTransition(el, target, vm, cb) {\n\t  applyTransition(el, 1, function () {\n\t    target.appendChild(el);\n\t  }, vm, cb);\n\t}\n\t\n\t/**\n\t * InsertBefore with transition.\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction beforeWithTransition(el, target, vm, cb) {\n\t  applyTransition(el, 1, function () {\n\t    before(el, target);\n\t  }, vm, cb);\n\t}\n\t\n\t/**\n\t * Remove with transition.\n\t *\n\t * @param {Element} el\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction removeWithTransition(el, vm, cb) {\n\t  applyTransition(el, -1, function () {\n\t    remove(el);\n\t  }, vm, cb);\n\t}\n\t\n\t/**\n\t * Apply transitions with an operation callback.\n\t *\n\t * @param {Element} el\n\t * @param {Number} direction\n\t *                  1: enter\n\t *                 -1: leave\n\t * @param {Function} op - the actual DOM operation\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction applyTransition(el, direction, op, vm, cb) {\n\t  var transition = el.__v_trans;\n\t  if (!transition ||\n\t  // skip if there are no js hooks and CSS transition is\n\t  // not supported\n\t  !transition.hooks && !transitionEndEvent ||\n\t  // skip transitions for initial compile\n\t  !vm._isCompiled ||\n\t  // if the vm is being manipulated by a parent directive\n\t  // during the parent's compilation phase, skip the\n\t  // animation.\n\t  vm.$parent && !vm.$parent._isCompiled) {\n\t    op();\n\t    if (cb) cb();\n\t    return;\n\t  }\n\t  var action = direction > 0 ? 'enter' : 'leave';\n\t  transition[action](op, cb);\n\t}\n\t\n\t/**\n\t * Query an element selector if it's not an element already.\n\t *\n\t * @param {String|Element} el\n\t * @return {Element}\n\t */\n\t\n\tfunction query(el) {\n\t  if (typeof el === 'string') {\n\t    var selector = el;\n\t    el = document.querySelector(el);\n\t    if (!el) {\n\t      (\"production\") !== 'production' && warn('Cannot find element: ' + selector);\n\t    }\n\t  }\n\t  return el;\n\t}\n\t\n\t/**\n\t * Check if a node is in the document.\n\t * Note: document.documentElement.contains should work here\n\t * but always returns false for comment nodes in phantomjs,\n\t * making unit tests difficult. This is fixed by doing the\n\t * contains() check on the node's parentNode instead of\n\t * the node itself.\n\t *\n\t * @param {Node} node\n\t * @return {Boolean}\n\t */\n\t\n\tfunction inDoc(node) {\n\t  var doc = document.documentElement;\n\t  var parent = node && node.parentNode;\n\t  return doc === node || doc === parent || !!(parent && parent.nodeType === 1 && doc.contains(parent));\n\t}\n\t\n\t/**\n\t * Get and remove an attribute from a node.\n\t *\n\t * @param {Node} node\n\t * @param {String} _attr\n\t */\n\t\n\tfunction getAttr(node, _attr) {\n\t  var val = node.getAttribute(_attr);\n\t  if (val !== null) {\n\t    node.removeAttribute(_attr);\n\t  }\n\t  return val;\n\t}\n\t\n\t/**\n\t * Get an attribute with colon or v-bind: prefix.\n\t *\n\t * @param {Node} node\n\t * @param {String} name\n\t * @return {String|null}\n\t */\n\t\n\tfunction getBindAttr(node, name) {\n\t  var val = getAttr(node, ':' + name);\n\t  if (val === null) {\n\t    val = getAttr(node, 'v-bind:' + name);\n\t  }\n\t  return val;\n\t}\n\t\n\t/**\n\t * Check the presence of a bind attribute.\n\t *\n\t * @param {Node} node\n\t * @param {String} name\n\t * @return {Boolean}\n\t */\n\t\n\tfunction hasBindAttr(node, name) {\n\t  return node.hasAttribute(name) || node.hasAttribute(':' + name) || node.hasAttribute('v-bind:' + name);\n\t}\n\t\n\t/**\n\t * Insert el before target\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t */\n\t\n\tfunction before(el, target) {\n\t  target.parentNode.insertBefore(el, target);\n\t}\n\t\n\t/**\n\t * Insert el after target\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t */\n\t\n\tfunction after(el, target) {\n\t  if (target.nextSibling) {\n\t    before(el, target.nextSibling);\n\t  } else {\n\t    target.parentNode.appendChild(el);\n\t  }\n\t}\n\t\n\t/**\n\t * Remove el from DOM\n\t *\n\t * @param {Element} el\n\t */\n\t\n\tfunction remove(el) {\n\t  el.parentNode.removeChild(el);\n\t}\n\t\n\t/**\n\t * Prepend el to target\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t */\n\t\n\tfunction prepend(el, target) {\n\t  if (target.firstChild) {\n\t    before(el, target.firstChild);\n\t  } else {\n\t    target.appendChild(el);\n\t  }\n\t}\n\t\n\t/**\n\t * Replace target with el\n\t *\n\t * @param {Element} target\n\t * @param {Element} el\n\t */\n\t\n\tfunction replace(target, el) {\n\t  var parent = target.parentNode;\n\t  if (parent) {\n\t    parent.replaceChild(el, target);\n\t  }\n\t}\n\t\n\t/**\n\t * Add event listener shorthand.\n\t *\n\t * @param {Element} el\n\t * @param {String} event\n\t * @param {Function} cb\n\t */\n\t\n\tfunction on$1(el, event, cb) {\n\t  el.addEventListener(event, cb);\n\t}\n\t\n\t/**\n\t * Remove event listener shorthand.\n\t *\n\t * @param {Element} el\n\t * @param {String} event\n\t * @param {Function} cb\n\t */\n\t\n\tfunction off(el, event, cb) {\n\t  el.removeEventListener(event, cb);\n\t}\n\t\n\t/**\n\t * In IE9, setAttribute('class') will result in empty class\n\t * if the element also has the :class attribute; However in\n\t * PhantomJS, setting `className` does not work on SVG elements...\n\t * So we have to do a conditional check here.\n\t *\n\t * @param {Element} el\n\t * @param {String} cls\n\t */\n\t\n\tfunction setClass(el, cls) {\n\t  /* istanbul ignore if */\n\t  if (isIE9 && !(el instanceof SVGElement)) {\n\t    el.className = cls;\n\t  } else {\n\t    el.setAttribute('class', cls);\n\t  }\n\t}\n\t\n\t/**\n\t * Add class with compatibility for IE & SVG\n\t *\n\t * @param {Element} el\n\t * @param {String} cls\n\t */\n\t\n\tfunction addClass(el, cls) {\n\t  if (el.classList) {\n\t    el.classList.add(cls);\n\t  } else {\n\t    var cur = ' ' + (el.getAttribute('class') || '') + ' ';\n\t    if (cur.indexOf(' ' + cls + ' ') < 0) {\n\t      setClass(el, (cur + cls).trim());\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Remove class with compatibility for IE & SVG\n\t *\n\t * @param {Element} el\n\t * @param {String} cls\n\t */\n\t\n\tfunction removeClass(el, cls) {\n\t  if (el.classList) {\n\t    el.classList.remove(cls);\n\t  } else {\n\t    var cur = ' ' + (el.getAttribute('class') || '') + ' ';\n\t    var tar = ' ' + cls + ' ';\n\t    while (cur.indexOf(tar) >= 0) {\n\t      cur = cur.replace(tar, ' ');\n\t    }\n\t    setClass(el, cur.trim());\n\t  }\n\t  if (!el.className) {\n\t    el.removeAttribute('class');\n\t  }\n\t}\n\t\n\t/**\n\t * Extract raw content inside an element into a temporary\n\t * container div\n\t *\n\t * @param {Element} el\n\t * @param {Boolean} asFragment\n\t * @return {Element}\n\t */\n\t\n\tfunction extractContent(el, asFragment) {\n\t  var child;\n\t  var rawContent;\n\t  /* istanbul ignore if */\n\t  if (isTemplate(el) && el.content instanceof DocumentFragment) {\n\t    el = el.content;\n\t  }\n\t  if (el.hasChildNodes()) {\n\t    trimNode(el);\n\t    rawContent = asFragment ? document.createDocumentFragment() : document.createElement('div');\n\t    /* eslint-disable no-cond-assign */\n\t    while (child = el.firstChild) {\n\t      /* eslint-enable no-cond-assign */\n\t      rawContent.appendChild(child);\n\t    }\n\t  }\n\t  return rawContent;\n\t}\n\t\n\t/**\n\t * Trim possible empty head/tail textNodes inside a parent.\n\t *\n\t * @param {Node} node\n\t */\n\t\n\tfunction trimNode(node) {\n\t  trim(node, node.firstChild);\n\t  trim(node, node.lastChild);\n\t}\n\t\n\tfunction trim(parent, node) {\n\t  if (node && node.nodeType === 3 && !node.data.trim()) {\n\t    parent.removeChild(node);\n\t  }\n\t}\n\t\n\t/**\n\t * Check if an element is a template tag.\n\t * Note if the template appears inside an SVG its tagName\n\t * will be in lowercase.\n\t *\n\t * @param {Element} el\n\t */\n\t\n\tfunction isTemplate(el) {\n\t  return el.tagName && el.tagName.toLowerCase() === 'template';\n\t}\n\t\n\t/**\n\t * Create an \"anchor\" for performing dom insertion/removals.\n\t * This is used in a number of scenarios:\n\t * - fragment instance\n\t * - v-html\n\t * - v-if\n\t * - v-for\n\t * - component\n\t *\n\t * @param {String} content\n\t * @param {Boolean} persist - IE trashes empty textNodes on\n\t *                            cloneNode(true), so in certain\n\t *                            cases the anchor needs to be\n\t *                            non-empty to be persisted in\n\t *                            templates.\n\t * @return {Comment|Text}\n\t */\n\t\n\tfunction createAnchor(content, persist) {\n\t  var anchor = config.debug ? document.createComment(content) : document.createTextNode(persist ? ' ' : '');\n\t  anchor.__vue_anchor = true;\n\t  return anchor;\n\t}\n\t\n\t/**\n\t * Find a component ref attribute that starts with $.\n\t *\n\t * @param {Element} node\n\t * @return {String|undefined}\n\t */\n\t\n\tvar refRE = /^v-ref:/;\n\t\n\tfunction findRef(node) {\n\t  if (node.hasAttributes()) {\n\t    var attrs = node.attributes;\n\t    for (var i = 0, l = attrs.length; i < l; i++) {\n\t      var name = attrs[i].name;\n\t      if (refRE.test(name)) {\n\t        return camelize(name.replace(refRE, ''));\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Map a function to a range of nodes .\n\t *\n\t * @param {Node} node\n\t * @param {Node} end\n\t * @param {Function} op\n\t */\n\t\n\tfunction mapNodeRange(node, end, op) {\n\t  var next;\n\t  while (node !== end) {\n\t    next = node.nextSibling;\n\t    op(node);\n\t    node = next;\n\t  }\n\t  op(end);\n\t}\n\t\n\t/**\n\t * Remove a range of nodes with transition, store\n\t * the nodes in a fragment with correct ordering,\n\t * and call callback when done.\n\t *\n\t * @param {Node} start\n\t * @param {Node} end\n\t * @param {Vue} vm\n\t * @param {DocumentFragment} frag\n\t * @param {Function} cb\n\t */\n\t\n\tfunction removeNodeRange(start, end, vm, frag, cb) {\n\t  var done = false;\n\t  var removed = 0;\n\t  var nodes = [];\n\t  mapNodeRange(start, end, function (node) {\n\t    if (node === end) done = true;\n\t    nodes.push(node);\n\t    removeWithTransition(node, vm, onRemoved);\n\t  });\n\t  function onRemoved() {\n\t    removed++;\n\t    if (done && removed >= nodes.length) {\n\t      for (var i = 0; i < nodes.length; i++) {\n\t        frag.appendChild(nodes[i]);\n\t      }\n\t      cb && cb();\n\t    }\n\t  }\n\t}\n\t\n\tvar commonTagRE = /^(div|p|span|img|a|b|i|br|ul|ol|li|h1|h2|h3|h4|h5|h6|code|pre|table|th|td|tr|form|label|input|select|option|nav|article|section|header|footer)$/;\n\tvar reservedTagRE = /^(slot|partial|component)$/;\n\t\n\t/**\n\t * Check if an element is a component, if yes return its\n\t * component id.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Object|undefined}\n\t */\n\t\n\tfunction checkComponentAttr(el, options) {\n\t  var tag = el.tagName.toLowerCase();\n\t  var hasAttrs = el.hasAttributes();\n\t  if (!commonTagRE.test(tag) && !reservedTagRE.test(tag)) {\n\t    if (resolveAsset(options, 'components', tag)) {\n\t      return { id: tag };\n\t    } else {\n\t      var is = hasAttrs && getIsBinding(el);\n\t      if (is) {\n\t        return is;\n\t      } else if (false) {\n\t        if (tag.indexOf('-') > -1 || /HTMLUnknownElement/.test(el.toString()) &&\n\t        // Chrome returns unknown for several HTML5 elements.\n\t        // https://code.google.com/p/chromium/issues/detail?id=540526\n\t        !/^(data|time|rtc|rb)$/.test(tag)) {\n\t          warn('Unknown custom element: <' + tag + '> - did you ' + 'register the component correctly?');\n\t        }\n\t      }\n\t    }\n\t  } else if (hasAttrs) {\n\t    return getIsBinding(el);\n\t  }\n\t}\n\t\n\t/**\n\t * Get \"is\" binding from an element.\n\t *\n\t * @param {Element} el\n\t * @return {Object|undefined}\n\t */\n\t\n\tfunction getIsBinding(el) {\n\t  // dynamic syntax\n\t  var exp = getAttr(el, 'is');\n\t  if (exp != null) {\n\t    return { id: exp };\n\t  } else {\n\t    exp = getBindAttr(el, 'is');\n\t    if (exp != null) {\n\t      return { id: exp, dynamic: true };\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Set a prop's initial value on a vm and its data object.\n\t *\n\t * @param {Vue} vm\n\t * @param {Object} prop\n\t * @param {*} value\n\t */\n\t\n\tfunction initProp(vm, prop, value) {\n\t  var key = prop.path;\n\t  value = coerceProp(prop, value);\n\t  vm[key] = vm._data[key] = assertProp(prop, value) ? value : undefined;\n\t}\n\t\n\t/**\n\t * Assert whether a prop is valid.\n\t *\n\t * @param {Object} prop\n\t * @param {*} value\n\t */\n\t\n\tfunction assertProp(prop, value) {\n\t  // if a prop is not provided and is not required,\n\t  // skip the check.\n\t  if (prop.raw === null && !prop.required) {\n\t    return true;\n\t  }\n\t  var options = prop.options;\n\t  var type = options.type;\n\t  var valid = true;\n\t  var expectedType;\n\t  if (type) {\n\t    if (type === String) {\n\t      expectedType = 'string';\n\t      valid = typeof value === expectedType;\n\t    } else if (type === Number) {\n\t      expectedType = 'number';\n\t      valid = typeof value === 'number';\n\t    } else if (type === Boolean) {\n\t      expectedType = 'boolean';\n\t      valid = typeof value === 'boolean';\n\t    } else if (type === Function) {\n\t      expectedType = 'function';\n\t      valid = typeof value === 'function';\n\t    } else if (type === Object) {\n\t      expectedType = 'object';\n\t      valid = isPlainObject(value);\n\t    } else if (type === Array) {\n\t      expectedType = 'array';\n\t      valid = isArray(value);\n\t    } else {\n\t      valid = value instanceof type;\n\t    }\n\t  }\n\t  if (!valid) {\n\t    (\"production\") !== 'production' && warn('Invalid prop: type check failed for ' + prop.path + '=\"' + prop.raw + '\".' + ' Expected ' + formatType(expectedType) + ', got ' + formatValue(value) + '.');\n\t    return false;\n\t  }\n\t  var validator = options.validator;\n\t  if (validator) {\n\t    if (!validator.call(null, value)) {\n\t      (\"production\") !== 'production' && warn('Invalid prop: custom validator check failed for ' + prop.path + '=\"' + prop.raw + '\"');\n\t      return false;\n\t    }\n\t  }\n\t  return true;\n\t}\n\t\n\t/**\n\t * Force parsing value with coerce option.\n\t *\n\t * @param {*} value\n\t * @param {Object} options\n\t * @return {*}\n\t */\n\t\n\tfunction coerceProp(prop, value) {\n\t  var coerce = prop.options.coerce;\n\t  if (!coerce) {\n\t    return value;\n\t  }\n\t  // coerce is a function\n\t  return coerce(value);\n\t}\n\t\n\tfunction formatType(val) {\n\t  return val ? val.charAt(0).toUpperCase() + val.slice(1) : 'custom type';\n\t}\n\t\n\tfunction formatValue(val) {\n\t  return Object.prototype.toString.call(val).slice(8, -1);\n\t}\n\t\n\t/**\n\t * Option overwriting strategies are functions that handle\n\t * how to merge a parent option value and a child option\n\t * value into the final value.\n\t *\n\t * All strategy functions follow the same signature:\n\t *\n\t * @param {*} parentVal\n\t * @param {*} childVal\n\t * @param {Vue} [vm]\n\t */\n\t\n\tvar strats = config.optionMergeStrategies = Object.create(null);\n\t\n\t/**\n\t * Helper that recursively merges two data objects together.\n\t */\n\t\n\tfunction mergeData(to, from) {\n\t  var key, toVal, fromVal;\n\t  for (key in from) {\n\t    toVal = to[key];\n\t    fromVal = from[key];\n\t    if (!hasOwn(to, key)) {\n\t      set(to, key, fromVal);\n\t    } else if (isObject(toVal) && isObject(fromVal)) {\n\t      mergeData(toVal, fromVal);\n\t    }\n\t  }\n\t  return to;\n\t}\n\t\n\t/**\n\t * Data\n\t */\n\t\n\tstrats.data = function (parentVal, childVal, vm) {\n\t  if (!vm) {\n\t    // in a Vue.extend merge, both should be functions\n\t    if (!childVal) {\n\t      return parentVal;\n\t    }\n\t    if (typeof childVal !== 'function') {\n\t      (\"production\") !== 'production' && warn('The \"data\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.');\n\t      return parentVal;\n\t    }\n\t    if (!parentVal) {\n\t      return childVal;\n\t    }\n\t    // when parentVal & childVal are both present,\n\t    // we need to return a function that returns the\n\t    // merged result of both functions... no need to\n\t    // check if parentVal is a function here because\n\t    // it has to be a function to pass previous merges.\n\t    return function mergedDataFn() {\n\t      return mergeData(childVal.call(this), parentVal.call(this));\n\t    };\n\t  } else if (parentVal || childVal) {\n\t    return function mergedInstanceDataFn() {\n\t      // instance merge\n\t      var instanceData = typeof childVal === 'function' ? childVal.call(vm) : childVal;\n\t      var defaultData = typeof parentVal === 'function' ? parentVal.call(vm) : undefined;\n\t      if (instanceData) {\n\t        return mergeData(instanceData, defaultData);\n\t      } else {\n\t        return defaultData;\n\t      }\n\t    };\n\t  }\n\t};\n\t\n\t/**\n\t * El\n\t */\n\t\n\tstrats.el = function (parentVal, childVal, vm) {\n\t  if (!vm && childVal && typeof childVal !== 'function') {\n\t    (\"production\") !== 'production' && warn('The \"el\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.');\n\t    return;\n\t  }\n\t  var ret = childVal || parentVal;\n\t  // invoke the element factory if this is instance merge\n\t  return vm && typeof ret === 'function' ? ret.call(vm) : ret;\n\t};\n\t\n\t/**\n\t * Hooks and param attributes are merged as arrays.\n\t */\n\t\n\tstrats.init = strats.created = strats.ready = strats.attached = strats.detached = strats.beforeCompile = strats.compiled = strats.beforeDestroy = strats.destroyed = function (parentVal, childVal) {\n\t  return childVal ? parentVal ? parentVal.concat(childVal) : isArray(childVal) ? childVal : [childVal] : parentVal;\n\t};\n\t\n\t/**\n\t * 0.11 deprecation warning\n\t */\n\t\n\tstrats.paramAttributes = function () {\n\t  /* istanbul ignore next */\n\t  (\"production\") !== 'production' && warn('\"paramAttributes\" option has been deprecated in 0.12. ' + 'Use \"props\" instead.');\n\t};\n\t\n\t/**\n\t * Assets\n\t *\n\t * When a vm is present (instance creation), we need to do\n\t * a three-way merge between constructor options, instance\n\t * options and parent options.\n\t */\n\t\n\tfunction mergeAssets(parentVal, childVal) {\n\t  var res = Object.create(parentVal);\n\t  return childVal ? extend(res, guardArrayAssets(childVal)) : res;\n\t}\n\t\n\tconfig._assetTypes.forEach(function (type) {\n\t  strats[type + 's'] = mergeAssets;\n\t});\n\t\n\t/**\n\t * Events & Watchers.\n\t *\n\t * Events & watchers hashes should not overwrite one\n\t * another, so we merge them as arrays.\n\t */\n\t\n\tstrats.watch = strats.events = function (parentVal, childVal) {\n\t  if (!childVal) return parentVal;\n\t  if (!parentVal) return childVal;\n\t  var ret = {};\n\t  extend(ret, parentVal);\n\t  for (var key in childVal) {\n\t    var parent = ret[key];\n\t    var child = childVal[key];\n\t    if (parent && !isArray(parent)) {\n\t      parent = [parent];\n\t    }\n\t    ret[key] = parent ? parent.concat(child) : [child];\n\t  }\n\t  return ret;\n\t};\n\t\n\t/**\n\t * Other object hashes.\n\t */\n\t\n\tstrats.props = strats.methods = strats.computed = function (parentVal, childVal) {\n\t  if (!childVal) return parentVal;\n\t  if (!parentVal) return childVal;\n\t  var ret = Object.create(null);\n\t  extend(ret, parentVal);\n\t  extend(ret, childVal);\n\t  return ret;\n\t};\n\t\n\t/**\n\t * Default strategy.\n\t */\n\t\n\tvar defaultStrat = function defaultStrat(parentVal, childVal) {\n\t  return childVal === undefined ? parentVal : childVal;\n\t};\n\t\n\t/**\n\t * Make sure component options get converted to actual\n\t * constructors.\n\t *\n\t * @param {Object} options\n\t */\n\t\n\tfunction guardComponents(options) {\n\t  if (options.components) {\n\t    var components = options.components = guardArrayAssets(options.components);\n\t    var def;\n\t    var ids = Object.keys(components);\n\t    for (var i = 0, l = ids.length; i < l; i++) {\n\t      var key = ids[i];\n\t      if (commonTagRE.test(key) || reservedTagRE.test(key)) {\n\t        (\"production\") !== 'production' && warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + key);\n\t        continue;\n\t      }\n\t      def = components[key];\n\t      if (isPlainObject(def)) {\n\t        components[key] = Vue.extend(def);\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Ensure all props option syntax are normalized into the\n\t * Object-based format.\n\t *\n\t * @param {Object} options\n\t */\n\t\n\tfunction guardProps(options) {\n\t  var props = options.props;\n\t  var i, val;\n\t  if (isArray(props)) {\n\t    options.props = {};\n\t    i = props.length;\n\t    while (i--) {\n\t      val = props[i];\n\t      if (typeof val === 'string') {\n\t        options.props[val] = null;\n\t      } else if (val.name) {\n\t        options.props[val.name] = val;\n\t      }\n\t    }\n\t  } else if (isPlainObject(props)) {\n\t    var keys = Object.keys(props);\n\t    i = keys.length;\n\t    while (i--) {\n\t      val = props[keys[i]];\n\t      if (typeof val === 'function') {\n\t        props[keys[i]] = { type: val };\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Guard an Array-format assets option and converted it\n\t * into the key-value Object format.\n\t *\n\t * @param {Object|Array} assets\n\t * @return {Object}\n\t */\n\t\n\tfunction guardArrayAssets(assets) {\n\t  if (isArray(assets)) {\n\t    var res = {};\n\t    var i = assets.length;\n\t    var asset;\n\t    while (i--) {\n\t      asset = assets[i];\n\t      var id = typeof asset === 'function' ? asset.options && asset.options.name || asset.id : asset.name || asset.id;\n\t      if (!id) {\n\t        (\"production\") !== 'production' && warn('Array-syntax assets must provide a \"name\" or \"id\" field.');\n\t      } else {\n\t        res[id] = asset;\n\t      }\n\t    }\n\t    return res;\n\t  }\n\t  return assets;\n\t}\n\t\n\t/**\n\t * Merge two option objects into a new one.\n\t * Core utility used in both instantiation and inheritance.\n\t *\n\t * @param {Object} parent\n\t * @param {Object} child\n\t * @param {Vue} [vm] - if vm is present, indicates this is\n\t *                     an instantiation merge.\n\t */\n\t\n\tfunction mergeOptions(parent, child, vm) {\n\t  guardComponents(child);\n\t  guardProps(child);\n\t  var options = {};\n\t  var key;\n\t  if (child.mixins) {\n\t    for (var i = 0, l = child.mixins.length; i < l; i++) {\n\t      parent = mergeOptions(parent, child.mixins[i], vm);\n\t    }\n\t  }\n\t  for (key in parent) {\n\t    mergeField(key);\n\t  }\n\t  for (key in child) {\n\t    if (!hasOwn(parent, key)) {\n\t      mergeField(key);\n\t    }\n\t  }\n\t  function mergeField(key) {\n\t    var strat = strats[key] || defaultStrat;\n\t    options[key] = strat(parent[key], child[key], vm, key);\n\t  }\n\t  return options;\n\t}\n\t\n\t/**\n\t * Resolve an asset.\n\t * This function is used because child instances need access\n\t * to assets defined in its ancestor chain.\n\t *\n\t * @param {Object} options\n\t * @param {String} type\n\t * @param {String} id\n\t * @return {Object|Function}\n\t */\n\t\n\tfunction resolveAsset(options, type, id) {\n\t  var assets = options[type];\n\t  var camelizedId;\n\t  return assets[id] ||\n\t  // camelCase ID\n\t  assets[camelizedId = camelize(id)] ||\n\t  // Pascal Case ID\n\t  assets[camelizedId.charAt(0).toUpperCase() + camelizedId.slice(1)];\n\t}\n\t\n\t/**\n\t * Assert asset exists\n\t */\n\t\n\tfunction assertAsset(val, type, id) {\n\t  if (!val) {\n\t    (\"production\") !== 'production' && warn('Failed to resolve ' + type + ': ' + id);\n\t  }\n\t}\n\t\n\tvar arrayProto = Array.prototype;\n\tvar arrayMethods = Object.create(arrayProto)\n\t\n\t/**\n\t * Intercept mutating methods and emit events\n\t */\n\t\n\t;['push', 'pop', 'shift', 'unshift', 'splice', 'sort', 'reverse'].forEach(function (method) {\n\t  // cache original method\n\t  var original = arrayProto[method];\n\t  def(arrayMethods, method, function mutator() {\n\t    // avoid leaking arguments:\n\t    // http://jsperf.com/closure-with-arguments\n\t    var i = arguments.length;\n\t    var args = new Array(i);\n\t    while (i--) {\n\t      args[i] = arguments[i];\n\t    }\n\t    var result = original.apply(this, args);\n\t    var ob = this.__ob__;\n\t    var inserted;\n\t    switch (method) {\n\t      case 'push':\n\t        inserted = args;\n\t        break;\n\t      case 'unshift':\n\t        inserted = args;\n\t        break;\n\t      case 'splice':\n\t        inserted = args.slice(2);\n\t        break;\n\t    }\n\t    if (inserted) ob.observeArray(inserted);\n\t    // notify change\n\t    ob.dep.notify();\n\t    return result;\n\t  });\n\t});\n\t\n\t/**\n\t * Swap the element at the given index with a new value\n\t * and emits corresponding event.\n\t *\n\t * @param {Number} index\n\t * @param {*} val\n\t * @return {*} - replaced element\n\t */\n\t\n\tdef(arrayProto, '$set', function $set(index, val) {\n\t  if (index >= this.length) {\n\t    this.length = Number(index) + 1;\n\t  }\n\t  return this.splice(index, 1, val)[0];\n\t});\n\t\n\t/**\n\t * Convenience method to remove the element at given index.\n\t *\n\t * @param {Number} index\n\t * @param {*} val\n\t */\n\t\n\tdef(arrayProto, '$remove', function $remove(item) {\n\t  /* istanbul ignore if */\n\t  if (!this.length) return;\n\t  var index = indexOf(this, item);\n\t  if (index > -1) {\n\t    return this.splice(index, 1);\n\t  }\n\t});\n\t\n\tvar uid$3 = 0;\n\t\n\t/**\n\t * A dep is an observable that can have multiple\n\t * directives subscribing to it.\n\t *\n\t * @constructor\n\t */\n\tfunction Dep() {\n\t  this.id = uid$3++;\n\t  this.subs = [];\n\t}\n\t\n\t// the current target watcher being evaluated.\n\t// this is globally unique because there could be only one\n\t// watcher being evaluated at any time.\n\tDep.target = null;\n\t\n\t/**\n\t * Add a directive subscriber.\n\t *\n\t * @param {Directive} sub\n\t */\n\t\n\tDep.prototype.addSub = function (sub) {\n\t  this.subs.push(sub);\n\t};\n\t\n\t/**\n\t * Remove a directive subscriber.\n\t *\n\t * @param {Directive} sub\n\t */\n\t\n\tDep.prototype.removeSub = function (sub) {\n\t  this.subs.$remove(sub);\n\t};\n\t\n\t/**\n\t * Add self as a dependency to the target watcher.\n\t */\n\t\n\tDep.prototype.depend = function () {\n\t  Dep.target.addDep(this);\n\t};\n\t\n\t/**\n\t * Notify all subscribers of a new value.\n\t */\n\t\n\tDep.prototype.notify = function () {\n\t  // stablize the subscriber list first\n\t  var subs = toArray(this.subs);\n\t  for (var i = 0, l = subs.length; i < l; i++) {\n\t    subs[i].update();\n\t  }\n\t};\n\t\n\tvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\t\n\t/**\n\t * Observer class that are attached to each observed\n\t * object. Once attached, the observer converts target\n\t * object's property keys into getter/setters that\n\t * collect dependencies and dispatches updates.\n\t *\n\t * @param {Array|Object} value\n\t * @constructor\n\t */\n\t\n\tfunction Observer(value) {\n\t  this.value = value;\n\t  this.dep = new Dep();\n\t  def(value, '__ob__', this);\n\t  if (isArray(value)) {\n\t    var augment = hasProto ? protoAugment : copyAugment;\n\t    augment(value, arrayMethods, arrayKeys);\n\t    this.observeArray(value);\n\t  } else {\n\t    this.walk(value);\n\t  }\n\t}\n\t\n\t// Instance methods\n\t\n\t/**\n\t * Walk through each property and convert them into\n\t * getter/setters. This method should only be called when\n\t * value type is Object.\n\t *\n\t * @param {Object} obj\n\t */\n\t\n\tObserver.prototype.walk = function (obj) {\n\t  var keys = Object.keys(obj);\n\t  for (var i = 0, l = keys.length; i < l; i++) {\n\t    this.convert(keys[i], obj[keys[i]]);\n\t  }\n\t};\n\t\n\t/**\n\t * Observe a list of Array items.\n\t *\n\t * @param {Array} items\n\t */\n\t\n\tObserver.prototype.observeArray = function (items) {\n\t  for (var i = 0, l = items.length; i < l; i++) {\n\t    observe(items[i]);\n\t  }\n\t};\n\t\n\t/**\n\t * Convert a property into getter/setter so we can emit\n\t * the events when the property is accessed/changed.\n\t *\n\t * @param {String} key\n\t * @param {*} val\n\t */\n\t\n\tObserver.prototype.convert = function (key, val) {\n\t  defineReactive(this.value, key, val);\n\t};\n\t\n\t/**\n\t * Add an owner vm, so that when $set/$delete mutations\n\t * happen we can notify owner vms to proxy the keys and\n\t * digest the watchers. This is only called when the object\n\t * is observed as an instance's root $data.\n\t *\n\t * @param {Vue} vm\n\t */\n\t\n\tObserver.prototype.addVm = function (vm) {\n\t  (this.vms || (this.vms = [])).push(vm);\n\t};\n\t\n\t/**\n\t * Remove an owner vm. This is called when the object is\n\t * swapped out as an instance's $data object.\n\t *\n\t * @param {Vue} vm\n\t */\n\t\n\tObserver.prototype.removeVm = function (vm) {\n\t  this.vms.$remove(vm);\n\t};\n\t\n\t// helpers\n\t\n\t/**\n\t * Augment an target Object or Array by intercepting\n\t * the prototype chain using __proto__\n\t *\n\t * @param {Object|Array} target\n\t * @param {Object} proto\n\t */\n\t\n\tfunction protoAugment(target, src) {\n\t  target.__proto__ = src;\n\t}\n\t\n\t/**\n\t * Augment an target Object or Array by defining\n\t * hidden properties.\n\t *\n\t * @param {Object|Array} target\n\t * @param {Object} proto\n\t */\n\t\n\tfunction copyAugment(target, src, keys) {\n\t  for (var i = 0, l = keys.length; i < l; i++) {\n\t    var key = keys[i];\n\t    def(target, key, src[key]);\n\t  }\n\t}\n\t\n\t/**\n\t * Attempt to create an observer instance for a value,\n\t * returns the new observer if successfully observed,\n\t * or the existing observer if the value already has one.\n\t *\n\t * @param {*} value\n\t * @param {Vue} [vm]\n\t * @return {Observer|undefined}\n\t * @static\n\t */\n\t\n\tfunction observe(value, vm) {\n\t  if (!value || typeof value !== 'object') {\n\t    return;\n\t  }\n\t  var ob;\n\t  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n\t    ob = value.__ob__;\n\t  } else if ((isArray(value) || isPlainObject(value)) && Object.isExtensible(value) && !value._isVue) {\n\t    ob = new Observer(value);\n\t  }\n\t  if (ob && vm) {\n\t    ob.addVm(vm);\n\t  }\n\t  return ob;\n\t}\n\t\n\t/**\n\t * Define a reactive property on an Object.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t * @param {*} val\n\t */\n\t\n\tfunction defineReactive(obj, key, val) {\n\t  var dep = new Dep();\n\t\n\t  // cater for pre-defined getter/setters\n\t  var getter, setter;\n\t  if (config.convertAllProperties) {\n\t    var property = Object.getOwnPropertyDescriptor(obj, key);\n\t    if (property && property.configurable === false) {\n\t      return;\n\t    }\n\t    getter = property && property.get;\n\t    setter = property && property.set;\n\t  }\n\t\n\t  var childOb = observe(val);\n\t  Object.defineProperty(obj, key, {\n\t    enumerable: true,\n\t    configurable: true,\n\t    get: function reactiveGetter() {\n\t      var value = getter ? getter.call(obj) : val;\n\t      if (Dep.target) {\n\t        dep.depend();\n\t        if (childOb) {\n\t          childOb.dep.depend();\n\t        }\n\t        if (isArray(value)) {\n\t          for (var e, i = 0, l = value.length; i < l; i++) {\n\t            e = value[i];\n\t            e && e.__ob__ && e.__ob__.dep.depend();\n\t          }\n\t        }\n\t      }\n\t      return value;\n\t    },\n\t    set: function reactiveSetter(newVal) {\n\t      var value = getter ? getter.call(obj) : val;\n\t      if (newVal === value) {\n\t        return;\n\t      }\n\t      if (setter) {\n\t        setter.call(obj, newVal);\n\t      } else {\n\t        val = newVal;\n\t      }\n\t      childOb = observe(newVal);\n\t      dep.notify();\n\t    }\n\t  });\n\t}\n\t\n\tvar util = Object.freeze({\n\t\tdefineReactive: defineReactive,\n\t\tset: set,\n\t\tdel: del,\n\t\thasOwn: hasOwn,\n\t\tisLiteral: isLiteral,\n\t\tisReserved: isReserved,\n\t\t_toString: _toString,\n\t\ttoNumber: toNumber,\n\t\ttoBoolean: toBoolean,\n\t\tstripQuotes: stripQuotes,\n\t\tcamelize: camelize,\n\t\thyphenate: hyphenate,\n\t\tclassify: classify,\n\t\tbind: bind$1,\n\t\ttoArray: toArray,\n\t\textend: extend,\n\t\tisObject: isObject,\n\t\tisPlainObject: isPlainObject,\n\t\tdef: def,\n\t\tdebounce: _debounce,\n\t\tindexOf: indexOf,\n\t\tcancellable: cancellable,\n\t\tlooseEqual: looseEqual,\n\t\tisArray: isArray,\n\t\thasProto: hasProto,\n\t\tinBrowser: inBrowser,\n\t\tisIE9: isIE9,\n\t\tisAndroid: isAndroid,\n\t\tget transitionProp () { return transitionProp; },\n\t\tget transitionEndEvent () { return transitionEndEvent; },\n\t\tget animationProp () { return animationProp; },\n\t\tget animationEndEvent () { return animationEndEvent; },\n\t\tnextTick: nextTick,\n\t\tquery: query,\n\t\tinDoc: inDoc,\n\t\tgetAttr: getAttr,\n\t\tgetBindAttr: getBindAttr,\n\t\thasBindAttr: hasBindAttr,\n\t\tbefore: before,\n\t\tafter: after,\n\t\tremove: remove,\n\t\tprepend: prepend,\n\t\treplace: replace,\n\t\ton: on$1,\n\t\toff: off,\n\t\tsetClass: setClass,\n\t\taddClass: addClass,\n\t\tremoveClass: removeClass,\n\t\textractContent: extractContent,\n\t\ttrimNode: trimNode,\n\t\tisTemplate: isTemplate,\n\t\tcreateAnchor: createAnchor,\n\t\tfindRef: findRef,\n\t\tmapNodeRange: mapNodeRange,\n\t\tremoveNodeRange: removeNodeRange,\n\t\tmergeOptions: mergeOptions,\n\t\tresolveAsset: resolveAsset,\n\t\tassertAsset: assertAsset,\n\t\tcheckComponentAttr: checkComponentAttr,\n\t\tinitProp: initProp,\n\t\tassertProp: assertProp,\n\t\tcoerceProp: coerceProp,\n\t\tcommonTagRE: commonTagRE,\n\t\treservedTagRE: reservedTagRE,\n\t\tget warn () { return warn; }\n\t});\n\t\n\tvar uid = 0;\n\t\n\tfunction initMixin (Vue) {\n\t\n\t  /**\n\t   * The main init sequence. This is called for every\n\t   * instance, including ones that are created from extended\n\t   * constructors.\n\t   *\n\t   * @param {Object} options - this options object should be\n\t   *                           the result of merging class\n\t   *                           options and the options passed\n\t   *                           in to the constructor.\n\t   */\n\t\n\t  Vue.prototype._init = function (options) {\n\t\n\t    options = options || {};\n\t\n\t    this.$el = null;\n\t    this.$parent = options.parent;\n\t    this.$root = this.$parent ? this.$parent.$root : this;\n\t    this.$children = [];\n\t    this.$refs = {}; // child vm references\n\t    this.$els = {}; // element references\n\t    this._watchers = []; // all watchers as an array\n\t    this._directives = []; // all directives\n\t\n\t    // a uid\n\t    this._uid = uid++;\n\t\n\t    // a flag to avoid this being observed\n\t    this._isVue = true;\n\t\n\t    // events bookkeeping\n\t    this._events = {}; // registered callbacks\n\t    this._eventsCount = {}; // for $broadcast optimization\n\t\n\t    // fragment instance properties\n\t    this._isFragment = false;\n\t    this._fragment = // @type {DocumentFragment}\n\t    this._fragmentStart = // @type {Text|Comment}\n\t    this._fragmentEnd = null; // @type {Text|Comment}\n\t\n\t    // lifecycle state\n\t    this._isCompiled = this._isDestroyed = this._isReady = this._isAttached = this._isBeingDestroyed = false;\n\t    this._unlinkFn = null;\n\t\n\t    // context:\n\t    // if this is a transcluded component, context\n\t    // will be the common parent vm of this instance\n\t    // and its host.\n\t    this._context = options._context || this.$parent;\n\t\n\t    // scope:\n\t    // if this is inside an inline v-for, the scope\n\t    // will be the intermediate scope created for this\n\t    // repeat fragment. this is used for linking props\n\t    // and container directives.\n\t    this._scope = options._scope;\n\t\n\t    // fragment:\n\t    // if this instance is compiled inside a Fragment, it\n\t    // needs to reigster itself as a child of that fragment\n\t    // for attach/detach to work properly.\n\t    this._frag = options._frag;\n\t    if (this._frag) {\n\t      this._frag.children.push(this);\n\t    }\n\t\n\t    // push self into parent / transclusion host\n\t    if (this.$parent) {\n\t      this.$parent.$children.push(this);\n\t    }\n\t\n\t    // merge options.\n\t    options = this.$options = mergeOptions(this.constructor.options, options, this);\n\t\n\t    // set ref\n\t    this._updateRef();\n\t\n\t    // initialize data as empty object.\n\t    // it will be filled up in _initScope().\n\t    this._data = {};\n\t\n\t    // call init hook\n\t    this._callHook('init');\n\t\n\t    // initialize data observation and scope inheritance.\n\t    this._initState();\n\t\n\t    // setup event system and option events.\n\t    this._initEvents();\n\t\n\t    // call created hook\n\t    this._callHook('created');\n\t\n\t    // if `el` option is passed, start compilation.\n\t    if (options.el) {\n\t      this.$mount(options.el);\n\t    }\n\t  };\n\t}\n\t\n\tvar pathCache = new Cache(1000);\n\t\n\t// actions\n\tvar APPEND = 0;\n\tvar PUSH = 1;\n\tvar INC_SUB_PATH_DEPTH = 2;\n\tvar PUSH_SUB_PATH = 3;\n\t\n\t// states\n\tvar BEFORE_PATH = 0;\n\tvar IN_PATH = 1;\n\tvar BEFORE_IDENT = 2;\n\tvar IN_IDENT = 3;\n\tvar IN_SUB_PATH = 4;\n\tvar IN_SINGLE_QUOTE = 5;\n\tvar IN_DOUBLE_QUOTE = 6;\n\tvar AFTER_PATH = 7;\n\tvar ERROR = 8;\n\t\n\tvar pathStateMachine = [];\n\t\n\tpathStateMachine[BEFORE_PATH] = {\n\t  'ws': [BEFORE_PATH],\n\t  'ident': [IN_IDENT, APPEND],\n\t  '[': [IN_SUB_PATH],\n\t  'eof': [AFTER_PATH]\n\t};\n\t\n\tpathStateMachine[IN_PATH] = {\n\t  'ws': [IN_PATH],\n\t  '.': [BEFORE_IDENT],\n\t  '[': [IN_SUB_PATH],\n\t  'eof': [AFTER_PATH]\n\t};\n\t\n\tpathStateMachine[BEFORE_IDENT] = {\n\t  'ws': [BEFORE_IDENT],\n\t  'ident': [IN_IDENT, APPEND]\n\t};\n\t\n\tpathStateMachine[IN_IDENT] = {\n\t  'ident': [IN_IDENT, APPEND],\n\t  '0': [IN_IDENT, APPEND],\n\t  'number': [IN_IDENT, APPEND],\n\t  'ws': [IN_PATH, PUSH],\n\t  '.': [BEFORE_IDENT, PUSH],\n\t  '[': [IN_SUB_PATH, PUSH],\n\t  'eof': [AFTER_PATH, PUSH]\n\t};\n\t\n\tpathStateMachine[IN_SUB_PATH] = {\n\t  \"'\": [IN_SINGLE_QUOTE, APPEND],\n\t  '\"': [IN_DOUBLE_QUOTE, APPEND],\n\t  '[': [IN_SUB_PATH, INC_SUB_PATH_DEPTH],\n\t  ']': [IN_PATH, PUSH_SUB_PATH],\n\t  'eof': ERROR,\n\t  'else': [IN_SUB_PATH, APPEND]\n\t};\n\t\n\tpathStateMachine[IN_SINGLE_QUOTE] = {\n\t  \"'\": [IN_SUB_PATH, APPEND],\n\t  'eof': ERROR,\n\t  'else': [IN_SINGLE_QUOTE, APPEND]\n\t};\n\t\n\tpathStateMachine[IN_DOUBLE_QUOTE] = {\n\t  '\"': [IN_SUB_PATH, APPEND],\n\t  'eof': ERROR,\n\t  'else': [IN_DOUBLE_QUOTE, APPEND]\n\t};\n\t\n\t/**\n\t * Determine the type of a character in a keypath.\n\t *\n\t * @param {Char} ch\n\t * @return {String} type\n\t */\n\t\n\tfunction getPathCharType(ch) {\n\t  if (ch === undefined) {\n\t    return 'eof';\n\t  }\n\t\n\t  var code = ch.charCodeAt(0);\n\t\n\t  switch (code) {\n\t    case 0x5B: // [\n\t    case 0x5D: // ]\n\t    case 0x2E: // .\n\t    case 0x22: // \"\n\t    case 0x27: // '\n\t    case 0x30:\n\t      // 0\n\t      return ch;\n\t\n\t    case 0x5F: // _\n\t    case 0x24:\n\t      // $\n\t      return 'ident';\n\t\n\t    case 0x20: // Space\n\t    case 0x09: // Tab\n\t    case 0x0A: // Newline\n\t    case 0x0D: // Return\n\t    case 0xA0: // No-break space\n\t    case 0xFEFF: // Byte Order Mark\n\t    case 0x2028: // Line Separator\n\t    case 0x2029:\n\t      // Paragraph Separator\n\t      return 'ws';\n\t  }\n\t\n\t  // a-z, A-Z\n\t  if (code >= 0x61 && code <= 0x7A || code >= 0x41 && code <= 0x5A) {\n\t    return 'ident';\n\t  }\n\t\n\t  // 1-9\n\t  if (code >= 0x31 && code <= 0x39) {\n\t    return 'number';\n\t  }\n\t\n\t  return 'else';\n\t}\n\t\n\t/**\n\t * Format a subPath, return its plain form if it is\n\t * a literal string or number. Otherwise prepend the\n\t * dynamic indicator (*).\n\t *\n\t * @param {String} path\n\t * @return {String}\n\t */\n\t\n\tfunction formatSubPath(path) {\n\t  var trimmed = path.trim();\n\t  // invalid leading 0\n\t  if (path.charAt(0) === '0' && isNaN(path)) {\n\t    return false;\n\t  }\n\t  return isLiteral(trimmed) ? stripQuotes(trimmed) : '*' + trimmed;\n\t}\n\t\n\t/**\n\t * Parse a string path into an array of segments\n\t *\n\t * @param {String} path\n\t * @return {Array|undefined}\n\t */\n\t\n\tfunction parse(path) {\n\t  var keys = [];\n\t  var index = -1;\n\t  var mode = BEFORE_PATH;\n\t  var subPathDepth = 0;\n\t  var c, newChar, key, type, transition, action, typeMap;\n\t\n\t  var actions = [];\n\t\n\t  actions[PUSH] = function () {\n\t    if (key !== undefined) {\n\t      keys.push(key);\n\t      key = undefined;\n\t    }\n\t  };\n\t\n\t  actions[APPEND] = function () {\n\t    if (key === undefined) {\n\t      key = newChar;\n\t    } else {\n\t      key += newChar;\n\t    }\n\t  };\n\t\n\t  actions[INC_SUB_PATH_DEPTH] = function () {\n\t    actions[APPEND]();\n\t    subPathDepth++;\n\t  };\n\t\n\t  actions[PUSH_SUB_PATH] = function () {\n\t    if (subPathDepth > 0) {\n\t      subPathDepth--;\n\t      mode = IN_SUB_PATH;\n\t      actions[APPEND]();\n\t    } else {\n\t      subPathDepth = 0;\n\t      key = formatSubPath(key);\n\t      if (key === false) {\n\t        return false;\n\t      } else {\n\t        actions[PUSH]();\n\t      }\n\t    }\n\t  };\n\t\n\t  function maybeUnescapeQuote() {\n\t    var nextChar = path[index + 1];\n\t    if (mode === IN_SINGLE_QUOTE && nextChar === \"'\" || mode === IN_DOUBLE_QUOTE && nextChar === '\"') {\n\t      index++;\n\t      newChar = '\\\\' + nextChar;\n\t      actions[APPEND]();\n\t      return true;\n\t    }\n\t  }\n\t\n\t  while (mode != null) {\n\t    index++;\n\t    c = path[index];\n\t\n\t    if (c === '\\\\' && maybeUnescapeQuote()) {\n\t      continue;\n\t    }\n\t\n\t    type = getPathCharType(c);\n\t    typeMap = pathStateMachine[mode];\n\t    transition = typeMap[type] || typeMap['else'] || ERROR;\n\t\n\t    if (transition === ERROR) {\n\t      return; // parse error\n\t    }\n\t\n\t    mode = transition[0];\n\t    action = actions[transition[1]];\n\t    if (action) {\n\t      newChar = transition[2];\n\t      newChar = newChar === undefined ? c : newChar;\n\t      if (action() === false) {\n\t        return;\n\t      }\n\t    }\n\t\n\t    if (mode === AFTER_PATH) {\n\t      keys.raw = path;\n\t      return keys;\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * External parse that check for a cache hit first\n\t *\n\t * @param {String} path\n\t * @return {Array|undefined}\n\t */\n\t\n\tfunction parsePath(path) {\n\t  var hit = pathCache.get(path);\n\t  if (!hit) {\n\t    hit = parse(path);\n\t    if (hit) {\n\t      pathCache.put(path, hit);\n\t    }\n\t  }\n\t  return hit;\n\t}\n\t\n\t/**\n\t * Get from an object from a path string\n\t *\n\t * @param {Object} obj\n\t * @param {String} path\n\t */\n\t\n\tfunction getPath(obj, path) {\n\t  return parseExpression(path).get(obj);\n\t}\n\t\n\t/**\n\t * Warn against setting non-existent root path on a vm.\n\t */\n\t\n\tvar warnNonExistent;\n\tif (false) {\n\t  warnNonExistent = function (path) {\n\t    warn('You are setting a non-existent path \"' + path.raw + '\" ' + 'on a vm instance. Consider pre-initializing the property ' + 'with the \"data\" option for more reliable reactivity ' + 'and better performance.');\n\t  };\n\t}\n\t\n\t/**\n\t * Set on an object from a path\n\t *\n\t * @param {Object} obj\n\t * @param {String | Array} path\n\t * @param {*} val\n\t */\n\t\n\tfunction setPath(obj, path, val) {\n\t  var original = obj;\n\t  if (typeof path === 'string') {\n\t    path = parse(path);\n\t  }\n\t  if (!path || !isObject(obj)) {\n\t    return false;\n\t  }\n\t  var last, key;\n\t  for (var i = 0, l = path.length; i < l; i++) {\n\t    last = obj;\n\t    key = path[i];\n\t    if (key.charAt(0) === '*') {\n\t      key = parseExpression(key.slice(1)).get.call(original, original);\n\t    }\n\t    if (i < l - 1) {\n\t      obj = obj[key];\n\t      if (!isObject(obj)) {\n\t        obj = {};\n\t        if (false) {\n\t          warnNonExistent(path);\n\t        }\n\t        set(last, key, obj);\n\t      }\n\t    } else {\n\t      if (isArray(obj)) {\n\t        obj.$set(key, val);\n\t      } else if (key in obj) {\n\t        obj[key] = val;\n\t      } else {\n\t        if (false) {\n\t          warnNonExistent(path);\n\t        }\n\t        set(obj, key, val);\n\t      }\n\t    }\n\t  }\n\t  return true;\n\t}\n\t\n\tvar path = Object.freeze({\n\t  parsePath: parsePath,\n\t  getPath: getPath,\n\t  setPath: setPath\n\t});\n\t\n\tvar expressionCache = new Cache(1000);\n\t\n\tvar allowedKeywords = 'Math,Date,this,true,false,null,undefined,Infinity,NaN,' + 'isNaN,isFinite,decodeURI,decodeURIComponent,encodeURI,' + 'encodeURIComponent,parseInt,parseFloat';\n\tvar allowedKeywordsRE = new RegExp('^(' + allowedKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\t\n\t// keywords that don't make sense inside expressions\n\tvar improperKeywords = 'break,case,class,catch,const,continue,debugger,default,' + 'delete,do,else,export,extends,finally,for,function,if,' + 'import,in,instanceof,let,return,super,switch,throw,try,' + 'var,while,with,yield,enum,await,implements,package,' + 'proctected,static,interface,private,public';\n\tvar improperKeywordsRE = new RegExp('^(' + improperKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\t\n\tvar wsRE = /\\s/g;\n\tvar newlineRE = /\\n/g;\n\tvar saveRE = /[\\{,]\\s*[\\w\\$_]+\\s*:|('(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\")|new |typeof |void /g;\n\tvar restoreRE = /\"(\\d+)\"/g;\n\tvar pathTestRE = /^[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['.*?'\\]|\\[\".*?\"\\]|\\[\\d+\\]|\\[[A-Za-z_$][\\w$]*\\])*$/;\n\tvar identRE = /[^\\w$\\.](?:[A-Za-z_$][\\w$]*)/g;\n\tvar booleanLiteralRE = /^(?:true|false)$/;\n\t\n\t/**\n\t * Save / Rewrite / Restore\n\t *\n\t * When rewriting paths found in an expression, it is\n\t * possible for the same letter sequences to be found in\n\t * strings and Object literal property keys. Therefore we\n\t * remove and store these parts in a temporary array, and\n\t * restore them after the path rewrite.\n\t */\n\t\n\tvar saved = [];\n\t\n\t/**\n\t * Save replacer\n\t *\n\t * The save regex can match two possible cases:\n\t * 1. An opening object literal\n\t * 2. A string\n\t * If matched as a plain string, we need to escape its\n\t * newlines, since the string needs to be preserved when\n\t * generating the function body.\n\t *\n\t * @param {String} str\n\t * @param {String} isString - str if matched as a string\n\t * @return {String} - placeholder with index\n\t */\n\t\n\tfunction save(str, isString) {\n\t  var i = saved.length;\n\t  saved[i] = isString ? str.replace(newlineRE, '\\\\n') : str;\n\t  return '\"' + i + '\"';\n\t}\n\t\n\t/**\n\t * Path rewrite replacer\n\t *\n\t * @param {String} raw\n\t * @return {String}\n\t */\n\t\n\tfunction rewrite(raw) {\n\t  var c = raw.charAt(0);\n\t  var path = raw.slice(1);\n\t  if (allowedKeywordsRE.test(path)) {\n\t    return raw;\n\t  } else {\n\t    path = path.indexOf('\"') > -1 ? path.replace(restoreRE, restore) : path;\n\t    return c + 'scope.' + path;\n\t  }\n\t}\n\t\n\t/**\n\t * Restore replacer\n\t *\n\t * @param {String} str\n\t * @param {String} i - matched save index\n\t * @return {String}\n\t */\n\t\n\tfunction restore(str, i) {\n\t  return saved[i];\n\t}\n\t\n\t/**\n\t * Rewrite an expression, prefixing all path accessors with\n\t * `scope.` and generate getter/setter functions.\n\t *\n\t * @param {String} exp\n\t * @return {Function}\n\t */\n\t\n\tfunction compileGetter(exp) {\n\t  if (improperKeywordsRE.test(exp)) {\n\t    (\"production\") !== 'production' && warn('Avoid using reserved keywords in expression: ' + exp);\n\t  }\n\t  // reset state\n\t  saved.length = 0;\n\t  // save strings and object literal keys\n\t  var body = exp.replace(saveRE, save).replace(wsRE, '');\n\t  // rewrite all paths\n\t  // pad 1 space here becaue the regex matches 1 extra char\n\t  body = (' ' + body).replace(identRE, rewrite).replace(restoreRE, restore);\n\t  return makeGetterFn(body);\n\t}\n\t\n\t/**\n\t * Build a getter function. Requires eval.\n\t *\n\t * We isolate the try/catch so it doesn't affect the\n\t * optimization of the parse function when it is not called.\n\t *\n\t * @param {String} body\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction makeGetterFn(body) {\n\t  try {\n\t    return new Function('scope', 'return ' + body + ';');\n\t  } catch (e) {\n\t    (\"production\") !== 'production' && warn('Invalid expression. ' + 'Generated function body: ' + body);\n\t  }\n\t}\n\t\n\t/**\n\t * Compile a setter function for the expression.\n\t *\n\t * @param {String} exp\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction compileSetter(exp) {\n\t  var path = parsePath(exp);\n\t  if (path) {\n\t    return function (scope, val) {\n\t      setPath(scope, path, val);\n\t    };\n\t  } else {\n\t    (\"production\") !== 'production' && warn('Invalid setter expression: ' + exp);\n\t  }\n\t}\n\t\n\t/**\n\t * Parse an expression into re-written getter/setters.\n\t *\n\t * @param {String} exp\n\t * @param {Boolean} needSet\n\t * @return {Function}\n\t */\n\t\n\tfunction parseExpression(exp, needSet) {\n\t  exp = exp.trim();\n\t  // try cache\n\t  var hit = expressionCache.get(exp);\n\t  if (hit) {\n\t    if (needSet && !hit.set) {\n\t      hit.set = compileSetter(hit.exp);\n\t    }\n\t    return hit;\n\t  }\n\t  var res = { exp: exp };\n\t  res.get = isSimplePath(exp) && exp.indexOf('[') < 0\n\t  // optimized super simple getter\n\t  ? makeGetterFn('scope.' + exp)\n\t  // dynamic getter\n\t  : compileGetter(exp);\n\t  if (needSet) {\n\t    res.set = compileSetter(exp);\n\t  }\n\t  expressionCache.put(exp, res);\n\t  return res;\n\t}\n\t\n\t/**\n\t * Check if an expression is a simple path.\n\t *\n\t * @param {String} exp\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isSimplePath(exp) {\n\t  return pathTestRE.test(exp) &&\n\t  // don't treat true/false as paths\n\t  !booleanLiteralRE.test(exp) &&\n\t  // Math constants e.g. Math.PI, Math.E etc.\n\t  exp.slice(0, 5) !== 'Math.';\n\t}\n\t\n\tvar expression = Object.freeze({\n\t  parseExpression: parseExpression,\n\t  isSimplePath: isSimplePath\n\t});\n\t\n\t// we have two separate queues: one for directive updates\n\t// and one for user watcher registered via $watch().\n\t// we want to guarantee directive updates to be called\n\t// before user watchers so that when user watchers are\n\t// triggered, the DOM would have already been in updated\n\t// state.\n\tvar queue = [];\n\tvar userQueue = [];\n\tvar has = {};\n\tvar circular = {};\n\tvar waiting = false;\n\tvar internalQueueDepleted = false;\n\t\n\t/**\n\t * Reset the batcher's state.\n\t */\n\t\n\tfunction resetBatcherState() {\n\t  queue = [];\n\t  userQueue = [];\n\t  has = {};\n\t  circular = {};\n\t  waiting = internalQueueDepleted = false;\n\t}\n\t\n\t/**\n\t * Flush both queues and run the watchers.\n\t */\n\t\n\tfunction flushBatcherQueue() {\n\t  runBatcherQueue(queue);\n\t  internalQueueDepleted = true;\n\t  runBatcherQueue(userQueue);\n\t  // dev tool hook\n\t  /* istanbul ignore if */\n\t  if (false) {\n\t    if (inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__) {\n\t      window.__VUE_DEVTOOLS_GLOBAL_HOOK__.emit('flush');\n\t    }\n\t  }\n\t  resetBatcherState();\n\t}\n\t\n\t/**\n\t * Run the watchers in a single queue.\n\t *\n\t * @param {Array} queue\n\t */\n\t\n\tfunction runBatcherQueue(queue) {\n\t  // do not cache length because more watchers might be pushed\n\t  // as we run existing watchers\n\t  for (var i = 0; i < queue.length; i++) {\n\t    var watcher = queue[i];\n\t    var id = watcher.id;\n\t    has[id] = null;\n\t    watcher.run();\n\t    // in dev build, check and stop circular updates.\n\t    if (false) {\n\t      circular[id] = (circular[id] || 0) + 1;\n\t      if (circular[id] > config._maxUpdateCount) {\n\t        queue.splice(has[id], 1);\n\t        warn('You may have an infinite update loop for watcher ' + 'with expression: ' + watcher.expression);\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Push a watcher into the watcher queue.\n\t * Jobs with duplicate IDs will be skipped unless it's\n\t * pushed when the queue is being flushed.\n\t *\n\t * @param {Watcher} watcher\n\t *   properties:\n\t *   - {Number} id\n\t *   - {Function} run\n\t */\n\t\n\tfunction pushWatcher(watcher) {\n\t  var id = watcher.id;\n\t  if (has[id] == null) {\n\t    // if an internal watcher is pushed, but the internal\n\t    // queue is already depleted, we run it immediately.\n\t    if (internalQueueDepleted && !watcher.user) {\n\t      watcher.run();\n\t      return;\n\t    }\n\t    // push watcher into appropriate queue\n\t    var q = watcher.user ? userQueue : queue;\n\t    has[id] = q.length;\n\t    q.push(watcher);\n\t    // queue the flush\n\t    if (!waiting) {\n\t      waiting = true;\n\t      nextTick(flushBatcherQueue);\n\t    }\n\t  }\n\t}\n\t\n\tvar uid$2 = 0;\n\t\n\t/**\n\t * A watcher parses an expression, collects dependencies,\n\t * and fires callback when the expression value changes.\n\t * This is used for both the $watch() api and directives.\n\t *\n\t * @param {Vue} vm\n\t * @param {String} expression\n\t * @param {Function} cb\n\t * @param {Object} options\n\t *                 - {Array} filters\n\t *                 - {Boolean} twoWay\n\t *                 - {Boolean} deep\n\t *                 - {Boolean} user\n\t *                 - {Boolean} sync\n\t *                 - {Boolean} lazy\n\t *                 - {Function} [preProcess]\n\t *                 - {Function} [postProcess]\n\t * @constructor\n\t */\n\tfunction Watcher(vm, expOrFn, cb, options) {\n\t  // mix in options\n\t  if (options) {\n\t    extend(this, options);\n\t  }\n\t  var isFn = typeof expOrFn === 'function';\n\t  this.vm = vm;\n\t  vm._watchers.push(this);\n\t  this.expression = isFn ? expOrFn.toString() : expOrFn;\n\t  this.cb = cb;\n\t  this.id = ++uid$2; // uid for batching\n\t  this.active = true;\n\t  this.dirty = this.lazy; // for lazy watchers\n\t  this.deps = Object.create(null);\n\t  this.newDeps = null;\n\t  this.prevError = null; // for async error stacks\n\t  // parse expression for getter/setter\n\t  if (isFn) {\n\t    this.getter = expOrFn;\n\t    this.setter = undefined;\n\t  } else {\n\t    var res = parseExpression(expOrFn, this.twoWay);\n\t    this.getter = res.get;\n\t    this.setter = res.set;\n\t  }\n\t  this.value = this.lazy ? undefined : this.get();\n\t  // state for avoiding false triggers for deep and Array\n\t  // watchers during vm._digest()\n\t  this.queued = this.shallow = false;\n\t}\n\t\n\t/**\n\t * Add a dependency to this directive.\n\t *\n\t * @param {Dep} dep\n\t */\n\t\n\tWatcher.prototype.addDep = function (dep) {\n\t  var id = dep.id;\n\t  if (!this.newDeps[id]) {\n\t    this.newDeps[id] = dep;\n\t    if (!this.deps[id]) {\n\t      this.deps[id] = dep;\n\t      dep.addSub(this);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Evaluate the getter, and re-collect dependencies.\n\t */\n\t\n\tWatcher.prototype.get = function () {\n\t  this.beforeGet();\n\t  var scope = this.scope || this.vm;\n\t  var value;\n\t  try {\n\t    value = this.getter.call(scope, scope);\n\t  } catch (e) {\n\t    if (false) {\n\t      warn('Error when evaluating expression \"' + this.expression + '\". ' + (config.debug ? '' : 'Turn on debug mode to see stack trace.'), e);\n\t    }\n\t  }\n\t  // \"touch\" every property so they are all tracked as\n\t  // dependencies for deep watching\n\t  if (this.deep) {\n\t    traverse(value);\n\t  }\n\t  if (this.preProcess) {\n\t    value = this.preProcess(value);\n\t  }\n\t  if (this.filters) {\n\t    value = scope._applyFilters(value, null, this.filters, false);\n\t  }\n\t  if (this.postProcess) {\n\t    value = this.postProcess(value);\n\t  }\n\t  this.afterGet();\n\t  return value;\n\t};\n\t\n\t/**\n\t * Set the corresponding value with the setter.\n\t *\n\t * @param {*} value\n\t */\n\t\n\tWatcher.prototype.set = function (value) {\n\t  var scope = this.scope || this.vm;\n\t  if (this.filters) {\n\t    value = scope._applyFilters(value, this.value, this.filters, true);\n\t  }\n\t  try {\n\t    this.setter.call(scope, scope, value);\n\t  } catch (e) {\n\t    if (false) {\n\t      warn('Error when evaluating setter \"' + this.expression + '\"', e);\n\t    }\n\t  }\n\t  // two-way sync for v-for alias\n\t  var forContext = scope.$forContext;\n\t  if (forContext && forContext.alias === this.expression) {\n\t    if (forContext.filters) {\n\t      (\"production\") !== 'production' && warn('It seems you are using two-way binding on ' + 'a v-for alias (' + this.expression + '), and the ' + 'v-for has filters. This will not work properly. ' + 'Either remove the filters or use an array of ' + 'objects and bind to object properties instead.');\n\t      return;\n\t    }\n\t    forContext._withLock(function () {\n\t      if (scope.$key) {\n\t        // original is an object\n\t        forContext.rawValue[scope.$key] = value;\n\t      } else {\n\t        forContext.rawValue.$set(scope.$index, value);\n\t      }\n\t    });\n\t  }\n\t};\n\t\n\t/**\n\t * Prepare for dependency collection.\n\t */\n\t\n\tWatcher.prototype.beforeGet = function () {\n\t  Dep.target = this;\n\t  this.newDeps = Object.create(null);\n\t};\n\t\n\t/**\n\t * Clean up for dependency collection.\n\t */\n\t\n\tWatcher.prototype.afterGet = function () {\n\t  Dep.target = null;\n\t  var ids = Object.keys(this.deps);\n\t  var i = ids.length;\n\t  while (i--) {\n\t    var id = ids[i];\n\t    if (!this.newDeps[id]) {\n\t      this.deps[id].removeSub(this);\n\t    }\n\t  }\n\t  this.deps = this.newDeps;\n\t};\n\t\n\t/**\n\t * Subscriber interface.\n\t * Will be called when a dependency changes.\n\t *\n\t * @param {Boolean} shallow\n\t */\n\t\n\tWatcher.prototype.update = function (shallow) {\n\t  if (this.lazy) {\n\t    this.dirty = true;\n\t  } else if (this.sync || !config.async) {\n\t    this.run();\n\t  } else {\n\t    // if queued, only overwrite shallow with non-shallow,\n\t    // but not the other way around.\n\t    this.shallow = this.queued ? shallow ? this.shallow : false : !!shallow;\n\t    this.queued = true;\n\t    // record before-push error stack in debug mode\n\t    /* istanbul ignore if */\n\t    if (false) {\n\t      this.prevError = new Error('[vue] async stack trace');\n\t    }\n\t    pushWatcher(this);\n\t  }\n\t};\n\t\n\t/**\n\t * Batcher job interface.\n\t * Will be called by the batcher.\n\t */\n\t\n\tWatcher.prototype.run = function () {\n\t  if (this.active) {\n\t    var value = this.get();\n\t    if (value !== this.value ||\n\t    // Deep watchers and watchers on Object/Arrays should fire even\n\t    // when the value is the same, because the value may\n\t    // have mutated; but only do so if this is a\n\t    // non-shallow update (caused by a vm digest).\n\t    (isObject(value) || this.deep) && !this.shallow) {\n\t      // set new value\n\t      var oldValue = this.value;\n\t      this.value = value;\n\t      // in debug + async mode, when a watcher callbacks\n\t      // throws, we also throw the saved before-push error\n\t      // so the full cross-tick stack trace is available.\n\t      var prevError = this.prevError;\n\t      /* istanbul ignore if */\n\t      if (false) {\n\t        this.prevError = null;\n\t        try {\n\t          this.cb.call(this.vm, value, oldValue);\n\t        } catch (e) {\n\t          nextTick(function () {\n\t            throw prevError;\n\t          }, 0);\n\t          throw e;\n\t        }\n\t      } else {\n\t        this.cb.call(this.vm, value, oldValue);\n\t      }\n\t    }\n\t    this.queued = this.shallow = false;\n\t  }\n\t};\n\t\n\t/**\n\t * Evaluate the value of the watcher.\n\t * This only gets called for lazy watchers.\n\t */\n\t\n\tWatcher.prototype.evaluate = function () {\n\t  // avoid overwriting another watcher that is being\n\t  // collected.\n\t  var current = Dep.target;\n\t  this.value = this.get();\n\t  this.dirty = false;\n\t  Dep.target = current;\n\t};\n\t\n\t/**\n\t * Depend on all deps collected by this watcher.\n\t */\n\t\n\tWatcher.prototype.depend = function () {\n\t  var depIds = Object.keys(this.deps);\n\t  var i = depIds.length;\n\t  while (i--) {\n\t    this.deps[depIds[i]].depend();\n\t  }\n\t};\n\t\n\t/**\n\t * Remove self from all dependencies' subcriber list.\n\t */\n\t\n\tWatcher.prototype.teardown = function () {\n\t  if (this.active) {\n\t    // remove self from vm's watcher list\n\t    // we can skip this if the vm if being destroyed\n\t    // which can improve teardown performance.\n\t    if (!this.vm._isBeingDestroyed) {\n\t      this.vm._watchers.$remove(this);\n\t    }\n\t    var depIds = Object.keys(this.deps);\n\t    var i = depIds.length;\n\t    while (i--) {\n\t      this.deps[depIds[i]].removeSub(this);\n\t    }\n\t    this.active = false;\n\t    this.vm = this.cb = this.value = null;\n\t  }\n\t};\n\t\n\t/**\n\t * Recrusively traverse an object to evoke all converted\n\t * getters, so that every nested property inside the object\n\t * is collected as a \"deep\" dependency.\n\t *\n\t * @param {*} val\n\t */\n\t\n\tfunction traverse(val) {\n\t  var i, keys;\n\t  if (isArray(val)) {\n\t    i = val.length;\n\t    while (i--) traverse(val[i]);\n\t  } else if (isObject(val)) {\n\t    keys = Object.keys(val);\n\t    i = keys.length;\n\t    while (i--) traverse(val[keys[i]]);\n\t  }\n\t}\n\t\n\tvar cloak = {\n\t  bind: function bind() {\n\t    var el = this.el;\n\t    this.vm.$once('pre-hook:compiled', function () {\n\t      el.removeAttribute('v-cloak');\n\t    });\n\t  }\n\t};\n\t\n\tvar ref = {\n\t  bind: function bind() {\n\t    (\"production\") !== 'production' && warn('v-ref:' + this.arg + ' must be used on a child ' + 'component. Found on <' + this.el.tagName.toLowerCase() + '>.');\n\t  }\n\t};\n\t\n\tvar ON = 700;\n\tvar MODEL = 800;\n\tvar BIND = 850;\n\tvar TRANSITION = 1100;\n\tvar EL = 1500;\n\tvar COMPONENT = 1500;\n\tvar PARTIAL = 1750;\n\tvar FOR = 2000;\n\tvar IF = 2000;\n\tvar SLOT = 2100;\n\t\n\tvar el = {\n\t\n\t  priority: EL,\n\t\n\t  bind: function bind() {\n\t    /* istanbul ignore if */\n\t    if (!this.arg) {\n\t      return;\n\t    }\n\t    var id = this.id = camelize(this.arg);\n\t    var refs = (this._scope || this.vm).$els;\n\t    if (hasOwn(refs, id)) {\n\t      refs[id] = this.el;\n\t    } else {\n\t      defineReactive(refs, id, this.el);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    var refs = (this._scope || this.vm).$els;\n\t    if (refs[this.id] === this.el) {\n\t      refs[this.id] = null;\n\t    }\n\t  }\n\t};\n\t\n\tvar prefixes = ['-webkit-', '-moz-', '-ms-'];\n\tvar camelPrefixes = ['Webkit', 'Moz', 'ms'];\n\tvar importantRE = /!important;?$/;\n\tvar propCache = Object.create(null);\n\t\n\tvar testEl = null;\n\t\n\tvar style = {\n\t\n\t  deep: true,\n\t\n\t  update: function update(value) {\n\t    if (typeof value === 'string') {\n\t      this.el.style.cssText = value;\n\t    } else if (isArray(value)) {\n\t      this.handleObject(value.reduce(extend, {}));\n\t    } else {\n\t      this.handleObject(value || {});\n\t    }\n\t  },\n\t\n\t  handleObject: function handleObject(value) {\n\t    // cache object styles so that only changed props\n\t    // are actually updated.\n\t    var cache = this.cache || (this.cache = {});\n\t    var name, val;\n\t    for (name in cache) {\n\t      if (!(name in value)) {\n\t        this.handleSingle(name, null);\n\t        delete cache[name];\n\t      }\n\t    }\n\t    for (name in value) {\n\t      val = value[name];\n\t      if (val !== cache[name]) {\n\t        cache[name] = val;\n\t        this.handleSingle(name, val);\n\t      }\n\t    }\n\t  },\n\t\n\t  handleSingle: function handleSingle(prop, value) {\n\t    prop = normalize(prop);\n\t    if (!prop) return; // unsupported prop\n\t    // cast possible numbers/booleans into strings\n\t    if (value != null) value += '';\n\t    if (value) {\n\t      var isImportant = importantRE.test(value) ? 'important' : '';\n\t      if (isImportant) {\n\t        value = value.replace(importantRE, '').trim();\n\t      }\n\t      this.el.style.setProperty(prop, value, isImportant);\n\t    } else {\n\t      this.el.style.removeProperty(prop);\n\t    }\n\t  }\n\t\n\t};\n\t\n\t/**\n\t * Normalize a CSS property name.\n\t * - cache result\n\t * - auto prefix\n\t * - camelCase -> dash-case\n\t *\n\t * @param {String} prop\n\t * @return {String}\n\t */\n\t\n\tfunction normalize(prop) {\n\t  if (propCache[prop]) {\n\t    return propCache[prop];\n\t  }\n\t  var res = prefix(prop);\n\t  propCache[prop] = propCache[res] = res;\n\t  return res;\n\t}\n\t\n\t/**\n\t * Auto detect the appropriate prefix for a CSS property.\n\t * https://gist.github.com/paulirish/523692\n\t *\n\t * @param {String} prop\n\t * @return {String}\n\t */\n\t\n\tfunction prefix(prop) {\n\t  prop = hyphenate(prop);\n\t  var camel = camelize(prop);\n\t  var upper = camel.charAt(0).toUpperCase() + camel.slice(1);\n\t  if (!testEl) {\n\t    testEl = document.createElement('div');\n\t  }\n\t  if (camel in testEl.style) {\n\t    return prop;\n\t  }\n\t  var i = prefixes.length;\n\t  var prefixed;\n\t  while (i--) {\n\t    prefixed = camelPrefixes[i] + upper;\n\t    if (prefixed in testEl.style) {\n\t      return prefixes[i] + prop;\n\t    }\n\t  }\n\t}\n\t\n\t// xlink\n\tvar xlinkNS = 'http://www.w3.org/1999/xlink';\n\tvar xlinkRE = /^xlink:/;\n\t\n\t// check for attributes that prohibit interpolations\n\tvar disallowedInterpAttrRE = /^v-|^:|^@|^(?:is|transition|transition-mode|debounce|track-by|stagger|enter-stagger|leave-stagger)$/;\n\t// these attributes should also set their corresponding properties\n\t// because they only affect the initial state of the element\n\tvar attrWithPropsRE = /^(?:value|checked|selected|muted)$/;\n\t\n\t// these attributes should set a hidden property for\n\t// binding v-model to object values\n\tvar modelProps = {\n\t  value: '_value',\n\t  'true-value': '_trueValue',\n\t  'false-value': '_falseValue'\n\t};\n\t\n\tvar bind = {\n\t\n\t  priority: BIND,\n\t\n\t  bind: function bind() {\n\t    var attr = this.arg;\n\t    var tag = this.el.tagName;\n\t    // should be deep watch on object mode\n\t    if (!attr) {\n\t      this.deep = true;\n\t    }\n\t    // handle interpolation bindings\n\t    var descriptor = this.descriptor;\n\t    var tokens = descriptor.interp;\n\t    if (tokens) {\n\t      // handle interpolations with one-time tokens\n\t      if (descriptor.hasOneTime) {\n\t        this.expression = tokensToExp(tokens, this._scope || this.vm);\n\t      }\n\t\n\t      // only allow binding on native attributes\n\t      if (disallowedInterpAttrRE.test(attr) || attr === 'name' && (tag === 'PARTIAL' || tag === 'SLOT')) {\n\t        (\"production\") !== 'production' && warn(attr + '=\"' + descriptor.raw + '\": ' + 'attribute interpolation is not allowed in Vue.js ' + 'directives and special attributes.');\n\t        this.el.removeAttribute(attr);\n\t        this.invalid = true;\n\t      }\n\t\n\t      /* istanbul ignore if */\n\t      if (false) {\n\t        var raw = attr + '=\"' + descriptor.raw + '\": ';\n\t        // warn src\n\t        if (attr === 'src') {\n\t          warn(raw + 'interpolation in \"src\" attribute will cause ' + 'a 404 request. Use v-bind:src instead.');\n\t        }\n\t\n\t        // warn style\n\t        if (attr === 'style') {\n\t          warn(raw + 'interpolation in \"style\" attribute will cause ' + 'the attribute to be discarded in Internet Explorer. ' + 'Use v-bind:style instead.');\n\t        }\n\t      }\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    if (this.invalid) {\n\t      return;\n\t    }\n\t    var attr = this.arg;\n\t    if (this.arg) {\n\t      this.handleSingle(attr, value);\n\t    } else {\n\t      this.handleObject(value || {});\n\t    }\n\t  },\n\t\n\t  // share object handler with v-bind:class\n\t  handleObject: style.handleObject,\n\t\n\t  handleSingle: function handleSingle(attr, value) {\n\t    var el = this.el;\n\t    var interp = this.descriptor.interp;\n\t    if (!interp && attrWithPropsRE.test(attr) && attr in el) {\n\t      el[attr] = attr === 'value' ? value == null // IE9 will set input.value to \"null\" for null...\n\t      ? '' : value : value;\n\t    }\n\t    // set model props\n\t    var modelProp = modelProps[attr];\n\t    if (!interp && modelProp) {\n\t      el[modelProp] = value;\n\t      // update v-model if present\n\t      var model = el.__v_model;\n\t      if (model) {\n\t        model.listener();\n\t      }\n\t    }\n\t    // do not set value attribute for textarea\n\t    if (attr === 'value' && el.tagName === 'TEXTAREA') {\n\t      el.removeAttribute(attr);\n\t      return;\n\t    }\n\t    // update attribute\n\t    if (value != null && value !== false) {\n\t      if (attr === 'class') {\n\t        // handle edge case #1960:\n\t        // class interpolation should not overwrite Vue transition class\n\t        if (el.__v_trans) {\n\t          value += ' ' + el.__v_trans.id + '-transition';\n\t        }\n\t        setClass(el, value);\n\t      } else if (xlinkRE.test(attr)) {\n\t        el.setAttributeNS(xlinkNS, attr, value);\n\t      } else {\n\t        el.setAttribute(attr, value);\n\t      }\n\t    } else {\n\t      el.removeAttribute(attr);\n\t    }\n\t  }\n\t};\n\t\n\t// keyCode aliases\n\tvar keyCodes = {\n\t  esc: 27,\n\t  tab: 9,\n\t  enter: 13,\n\t  space: 32,\n\t  'delete': 46,\n\t  up: 38,\n\t  left: 37,\n\t  right: 39,\n\t  down: 40\n\t};\n\t\n\tfunction keyFilter(handler, keys) {\n\t  var codes = keys.map(function (key) {\n\t    var charCode = key.charCodeAt(0);\n\t    if (charCode > 47 && charCode < 58) {\n\t      return parseInt(key, 10);\n\t    }\n\t    if (key.length === 1) {\n\t      charCode = key.toUpperCase().charCodeAt(0);\n\t      if (charCode > 64 && charCode < 91) {\n\t        return charCode;\n\t      }\n\t    }\n\t    return keyCodes[key];\n\t  });\n\t  return function keyHandler(e) {\n\t    if (codes.indexOf(e.keyCode) > -1) {\n\t      return handler.call(this, e);\n\t    }\n\t  };\n\t}\n\t\n\tfunction stopFilter(handler) {\n\t  return function stopHandler(e) {\n\t    e.stopPropagation();\n\t    return handler.call(this, e);\n\t  };\n\t}\n\t\n\tfunction preventFilter(handler) {\n\t  return function preventHandler(e) {\n\t    e.preventDefault();\n\t    return handler.call(this, e);\n\t  };\n\t}\n\t\n\tvar on = {\n\t\n\t  acceptStatement: true,\n\t  priority: ON,\n\t\n\t  bind: function bind() {\n\t    // deal with iframes\n\t    if (this.el.tagName === 'IFRAME' && this.arg !== 'load') {\n\t      var self = this;\n\t      this.iframeBind = function () {\n\t        on$1(self.el.contentWindow, self.arg, self.handler);\n\t      };\n\t      this.on('load', this.iframeBind);\n\t    }\n\t  },\n\t\n\t  update: function update(handler) {\n\t    // stub a noop for v-on with no value,\n\t    // e.g. @mousedown.prevent\n\t    if (!this.descriptor.raw) {\n\t      handler = function () {};\n\t    }\n\t\n\t    if (typeof handler !== 'function') {\n\t      (\"production\") !== 'production' && warn('v-on:' + this.arg + '=\"' + this.expression + '\" expects a function value, ' + 'got ' + handler);\n\t      return;\n\t    }\n\t\n\t    // apply modifiers\n\t    if (this.modifiers.stop) {\n\t      handler = stopFilter(handler);\n\t    }\n\t    if (this.modifiers.prevent) {\n\t      handler = preventFilter(handler);\n\t    }\n\t    // key filter\n\t    var keys = Object.keys(this.modifiers).filter(function (key) {\n\t      return key !== 'stop' && key !== 'prevent';\n\t    });\n\t    if (keys.length) {\n\t      handler = keyFilter(handler, keys);\n\t    }\n\t\n\t    this.reset();\n\t    this.handler = handler;\n\t\n\t    if (this.iframeBind) {\n\t      this.iframeBind();\n\t    } else {\n\t      on$1(this.el, this.arg, this.handler);\n\t    }\n\t  },\n\t\n\t  reset: function reset() {\n\t    var el = this.iframeBind ? this.el.contentWindow : this.el;\n\t    if (this.handler) {\n\t      off(el, this.arg, this.handler);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    this.reset();\n\t  }\n\t};\n\t\n\tvar checkbox = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t\n\t    this.getValue = function () {\n\t      return el.hasOwnProperty('_value') ? el._value : self.params.number ? toNumber(el.value) : el.value;\n\t    };\n\t\n\t    function getBooleanValue() {\n\t      var val = el.checked;\n\t      if (val && el.hasOwnProperty('_trueValue')) {\n\t        return el._trueValue;\n\t      }\n\t      if (!val && el.hasOwnProperty('_falseValue')) {\n\t        return el._falseValue;\n\t      }\n\t      return val;\n\t    }\n\t\n\t    this.listener = function () {\n\t      var model = self._watcher.value;\n\t      if (isArray(model)) {\n\t        var val = self.getValue();\n\t        if (el.checked) {\n\t          if (indexOf(model, val) < 0) {\n\t            model.push(val);\n\t          }\n\t        } else {\n\t          model.$remove(val);\n\t        }\n\t      } else {\n\t        self.set(getBooleanValue());\n\t      }\n\t    };\n\t\n\t    this.on('change', this.listener);\n\t    if (el.hasAttribute('checked')) {\n\t      this.afterBind = this.listener;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    var el = this.el;\n\t    if (isArray(value)) {\n\t      el.checked = indexOf(value, this.getValue()) > -1;\n\t    } else {\n\t      if (el.hasOwnProperty('_trueValue')) {\n\t        el.checked = looseEqual(value, el._trueValue);\n\t      } else {\n\t        el.checked = !!value;\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\tvar select = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t\n\t    // method to force update DOM using latest value.\n\t    this.forceUpdate = function () {\n\t      if (self._watcher) {\n\t        self.update(self._watcher.get());\n\t      }\n\t    };\n\t\n\t    // check if this is a multiple select\n\t    var multiple = this.multiple = el.hasAttribute('multiple');\n\t\n\t    // attach listener\n\t    this.listener = function () {\n\t      var value = getValue(el, multiple);\n\t      value = self.params.number ? isArray(value) ? value.map(toNumber) : toNumber(value) : value;\n\t      self.set(value);\n\t    };\n\t    this.on('change', this.listener);\n\t\n\t    // if has initial value, set afterBind\n\t    var initValue = getValue(el, multiple, true);\n\t    if (multiple && initValue.length || !multiple && initValue !== null) {\n\t      this.afterBind = this.listener;\n\t    }\n\t\n\t    // All major browsers except Firefox resets\n\t    // selectedIndex with value -1 to 0 when the element\n\t    // is appended to a new parent, therefore we have to\n\t    // force a DOM update whenever that happens...\n\t    this.vm.$on('hook:attached', this.forceUpdate);\n\t  },\n\t\n\t  update: function update(value) {\n\t    var el = this.el;\n\t    el.selectedIndex = -1;\n\t    var multi = this.multiple && isArray(value);\n\t    var options = el.options;\n\t    var i = options.length;\n\t    var op, val;\n\t    while (i--) {\n\t      op = options[i];\n\t      val = op.hasOwnProperty('_value') ? op._value : op.value;\n\t      /* eslint-disable eqeqeq */\n\t      op.selected = multi ? indexOf$1(value, val) > -1 : looseEqual(value, val);\n\t      /* eslint-enable eqeqeq */\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    /* istanbul ignore next */\n\t    this.vm.$off('hook:attached', this.forceUpdate);\n\t  }\n\t};\n\t\n\t/**\n\t * Get select value\n\t *\n\t * @param {SelectElement} el\n\t * @param {Boolean} multi\n\t * @param {Boolean} init\n\t * @return {Array|*}\n\t */\n\t\n\tfunction getValue(el, multi, init) {\n\t  var res = multi ? [] : null;\n\t  var op, val, selected;\n\t  for (var i = 0, l = el.options.length; i < l; i++) {\n\t    op = el.options[i];\n\t    selected = init ? op.hasAttribute('selected') : op.selected;\n\t    if (selected) {\n\t      val = op.hasOwnProperty('_value') ? op._value : op.value;\n\t      if (multi) {\n\t        res.push(val);\n\t      } else {\n\t        return val;\n\t      }\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Native Array.indexOf uses strict equal, but in this\n\t * case we need to match string/numbers with custom equal.\n\t *\n\t * @param {Array} arr\n\t * @param {*} val\n\t */\n\t\n\tfunction indexOf$1(arr, val) {\n\t  var i = arr.length;\n\t  while (i--) {\n\t    if (looseEqual(arr[i], val)) {\n\t      return i;\n\t    }\n\t  }\n\t  return -1;\n\t}\n\t\n\tvar radio = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t\n\t    this.getValue = function () {\n\t      // value overwrite via v-bind:value\n\t      if (el.hasOwnProperty('_value')) {\n\t        return el._value;\n\t      }\n\t      var val = el.value;\n\t      if (self.params.number) {\n\t        val = toNumber(val);\n\t      }\n\t      return val;\n\t    };\n\t\n\t    this.listener = function () {\n\t      self.set(self.getValue());\n\t    };\n\t    this.on('change', this.listener);\n\t\n\t    if (el.hasAttribute('checked')) {\n\t      this.afterBind = this.listener;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.el.checked = looseEqual(value, this.getValue());\n\t  }\n\t};\n\t\n\tvar text$2 = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t    var isRange = el.type === 'range';\n\t    var lazy = this.params.lazy;\n\t    var number = this.params.number;\n\t    var debounce = this.params.debounce;\n\t\n\t    // handle composition events.\n\t    //   http://blog.evanyou.me/2014/01/03/composition-event/\n\t    // skip this for Android because it handles composition\n\t    // events quite differently. Android doesn't trigger\n\t    // composition events for language input methods e.g.\n\t    // Chinese, but instead triggers them for spelling\n\t    // suggestions... (see Discussion/#162)\n\t    var composing = false;\n\t    if (!isAndroid && !isRange) {\n\t      this.on('compositionstart', function () {\n\t        composing = true;\n\t      });\n\t      this.on('compositionend', function () {\n\t        composing = false;\n\t        // in IE11 the \"compositionend\" event fires AFTER\n\t        // the \"input\" event, so the input handler is blocked\n\t        // at the end... have to call it here.\n\t        //\n\t        // #1327: in lazy mode this is unecessary.\n\t        if (!lazy) {\n\t          self.listener();\n\t        }\n\t      });\n\t    }\n\t\n\t    // prevent messing with the input when user is typing,\n\t    // and force update on blur.\n\t    this.focused = false;\n\t    if (!isRange && !lazy) {\n\t      this.on('focus', function () {\n\t        self.focused = true;\n\t      });\n\t      this.on('blur', function () {\n\t        self.focused = false;\n\t        // do not sync value after fragment removal (#2017)\n\t        if (!self._frag || self._frag.inserted) {\n\t          self.rawListener();\n\t        }\n\t      });\n\t    }\n\t\n\t    // Now attach the main listener\n\t    this.listener = this.rawListener = function () {\n\t      if (composing || !self._bound) {\n\t        return;\n\t      }\n\t      var val = number || isRange ? toNumber(el.value) : el.value;\n\t      self.set(val);\n\t      // force update on next tick to avoid lock & same value\n\t      // also only update when user is not typing\n\t      nextTick(function () {\n\t        if (self._bound && !self.focused) {\n\t          self.update(self._watcher.value);\n\t        }\n\t      });\n\t    };\n\t\n\t    // apply debounce\n\t    if (debounce) {\n\t      this.listener = _debounce(this.listener, debounce);\n\t    }\n\t\n\t    // Support jQuery events, since jQuery.trigger() doesn't\n\t    // trigger native events in some cases and some plugins\n\t    // rely on $.trigger()\n\t    //\n\t    // We want to make sure if a listener is attached using\n\t    // jQuery, it is also removed with jQuery, that's why\n\t    // we do the check for each directive instance and\n\t    // store that check result on itself. This also allows\n\t    // easier test coverage control by unsetting the global\n\t    // jQuery variable in tests.\n\t    this.hasjQuery = typeof jQuery === 'function';\n\t    if (this.hasjQuery) {\n\t      jQuery(el).on('change', this.listener);\n\t      if (!lazy) {\n\t        jQuery(el).on('input', this.listener);\n\t      }\n\t    } else {\n\t      this.on('change', this.listener);\n\t      if (!lazy) {\n\t        this.on('input', this.listener);\n\t      }\n\t    }\n\t\n\t    // IE9 doesn't fire input event on backspace/del/cut\n\t    if (!lazy && isIE9) {\n\t      this.on('cut', function () {\n\t        nextTick(self.listener);\n\t      });\n\t      this.on('keyup', function (e) {\n\t        if (e.keyCode === 46 || e.keyCode === 8) {\n\t          self.listener();\n\t        }\n\t      });\n\t    }\n\t\n\t    // set initial value if present\n\t    if (el.hasAttribute('value') || el.tagName === 'TEXTAREA' && el.value.trim()) {\n\t      this.afterBind = this.listener;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.el.value = _toString(value);\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    var el = this.el;\n\t    if (this.hasjQuery) {\n\t      jQuery(el).off('change', this.listener);\n\t      jQuery(el).off('input', this.listener);\n\t    }\n\t  }\n\t};\n\t\n\tvar handlers = {\n\t  text: text$2,\n\t  radio: radio,\n\t  select: select,\n\t  checkbox: checkbox\n\t};\n\t\n\tvar model = {\n\t\n\t  priority: MODEL,\n\t  twoWay: true,\n\t  handlers: handlers,\n\t  params: ['lazy', 'number', 'debounce'],\n\t\n\t  /**\n\t   * Possible elements:\n\t   *   <select>\n\t   *   <textarea>\n\t   *   <input type=\"*\">\n\t   *     - text\n\t   *     - checkbox\n\t   *     - radio\n\t   *     - number\n\t   */\n\t\n\t  bind: function bind() {\n\t    // friendly warning...\n\t    this.checkFilters();\n\t    if (this.hasRead && !this.hasWrite) {\n\t      (\"production\") !== 'production' && warn('It seems you are using a read-only filter with ' + 'v-model. You might want to use a two-way filter ' + 'to ensure correct behavior.');\n\t    }\n\t    var el = this.el;\n\t    var tag = el.tagName;\n\t    var handler;\n\t    if (tag === 'INPUT') {\n\t      handler = handlers[el.type] || handlers.text;\n\t    } else if (tag === 'SELECT') {\n\t      handler = handlers.select;\n\t    } else if (tag === 'TEXTAREA') {\n\t      handler = handlers.text;\n\t    } else {\n\t      (\"production\") !== 'production' && warn('v-model does not support element type: ' + tag);\n\t      return;\n\t    }\n\t    el.__v_model = this;\n\t    handler.bind.call(this);\n\t    this.update = handler.update;\n\t    this._unbind = handler.unbind;\n\t  },\n\t\n\t  /**\n\t   * Check read/write filter stats.\n\t   */\n\t\n\t  checkFilters: function checkFilters() {\n\t    var filters = this.filters;\n\t    if (!filters) return;\n\t    var i = filters.length;\n\t    while (i--) {\n\t      var filter = resolveAsset(this.vm.$options, 'filters', filters[i].name);\n\t      if (typeof filter === 'function' || filter.read) {\n\t        this.hasRead = true;\n\t      }\n\t      if (filter.write) {\n\t        this.hasWrite = true;\n\t      }\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    this.el.__v_model = null;\n\t    this._unbind && this._unbind();\n\t  }\n\t};\n\t\n\tvar show = {\n\t\n\t  bind: function bind() {\n\t    // check else block\n\t    var next = this.el.nextElementSibling;\n\t    if (next && getAttr(next, 'v-else') !== null) {\n\t      this.elseEl = next;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.apply(this.el, value);\n\t    if (this.elseEl) {\n\t      this.apply(this.elseEl, !value);\n\t    }\n\t  },\n\t\n\t  apply: function apply(el, value) {\n\t    if (inDoc(el)) {\n\t      applyTransition(el, value ? 1 : -1, toggle, this.vm);\n\t    } else {\n\t      toggle();\n\t    }\n\t    function toggle() {\n\t      el.style.display = value ? '' : 'none';\n\t    }\n\t  }\n\t};\n\t\n\tvar templateCache = new Cache(1000);\n\tvar idSelectorCache = new Cache(1000);\n\t\n\tvar map = {\n\t  efault: [0, '', ''],\n\t  legend: [1, '<fieldset>', '</fieldset>'],\n\t  tr: [2, '<table><tbody>', '</tbody></table>'],\n\t  col: [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>']\n\t};\n\t\n\tmap.td = map.th = [3, '<table><tbody><tr>', '</tr></tbody></table>'];\n\t\n\tmap.option = map.optgroup = [1, '<select multiple=\"multiple\">', '</select>'];\n\t\n\tmap.thead = map.tbody = map.colgroup = map.caption = map.tfoot = [1, '<table>', '</table>'];\n\t\n\tmap.g = map.defs = map.symbol = map.use = map.image = map.text = map.circle = map.ellipse = map.line = map.path = map.polygon = map.polyline = map.rect = [1, '<svg ' + 'xmlns=\"http://www.w3.org/2000/svg\" ' + 'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ' + 'xmlns:ev=\"http://www.w3.org/2001/xml-events\"' + 'version=\"1.1\">', '</svg>'];\n\t\n\t/**\n\t * Check if a node is a supported template node with a\n\t * DocumentFragment content.\n\t *\n\t * @param {Node} node\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isRealTemplate(node) {\n\t  return isTemplate(node) && node.content instanceof DocumentFragment;\n\t}\n\t\n\tvar tagRE$1 = /<([\\w:]+)/;\n\tvar entityRE = /&#?\\w+?;/;\n\t\n\t/**\n\t * Convert a string template to a DocumentFragment.\n\t * Determines correct wrapping by tag types. Wrapping\n\t * strategy found in jQuery & component/domify.\n\t *\n\t * @param {String} templateString\n\t * @param {Boolean} raw\n\t * @return {DocumentFragment}\n\t */\n\t\n\tfunction stringToFragment(templateString, raw) {\n\t  // try a cache hit first\n\t  var hit = templateCache.get(templateString);\n\t  if (hit) {\n\t    return hit;\n\t  }\n\t\n\t  var frag = document.createDocumentFragment();\n\t  var tagMatch = templateString.match(tagRE$1);\n\t  var entityMatch = entityRE.test(templateString);\n\t\n\t  if (!tagMatch && !entityMatch) {\n\t    // text only, return a single text node.\n\t    frag.appendChild(document.createTextNode(templateString));\n\t  } else {\n\t\n\t    var tag = tagMatch && tagMatch[1];\n\t    var wrap = map[tag] || map.efault;\n\t    var depth = wrap[0];\n\t    var prefix = wrap[1];\n\t    var suffix = wrap[2];\n\t    var node = document.createElement('div');\n\t\n\t    var templateStringToUse = raw ? templateString : templateString.trim();\n\t    node.innerHTML = prefix + templateStringToUse + suffix;\n\t    while (depth--) {\n\t      node = node.lastChild;\n\t    }\n\t\n\t    var child;\n\t    /* eslint-disable no-cond-assign */\n\t    while (child = node.firstChild) {\n\t      /* eslint-enable no-cond-assign */\n\t      frag.appendChild(child);\n\t    }\n\t  }\n\t\n\t  templateCache.put(templateString, frag);\n\t  return frag;\n\t}\n\t\n\t/**\n\t * Convert a template node to a DocumentFragment.\n\t *\n\t * @param {Node} node\n\t * @return {DocumentFragment}\n\t */\n\t\n\tfunction nodeToFragment(node) {\n\t  // if its a template tag and the browser supports it,\n\t  // its content is already a document fragment.\n\t  if (isRealTemplate(node)) {\n\t    trimNode(node.content);\n\t    return node.content;\n\t  }\n\t  // script template\n\t  if (node.tagName === 'SCRIPT') {\n\t    return stringToFragment(node.textContent);\n\t  }\n\t  // normal node, clone it to avoid mutating the original\n\t  var clonedNode = cloneNode(node);\n\t  var frag = document.createDocumentFragment();\n\t  var child;\n\t  /* eslint-disable no-cond-assign */\n\t  while (child = clonedNode.firstChild) {\n\t    /* eslint-enable no-cond-assign */\n\t    frag.appendChild(child);\n\t  }\n\t  trimNode(frag);\n\t  return frag;\n\t}\n\t\n\t// Test for the presence of the Safari template cloning bug\n\t// https://bugs.webkit.org/showug.cgi?id=137755\n\tvar hasBrokenTemplate = (function () {\n\t  /* istanbul ignore else */\n\t  if (inBrowser) {\n\t    var a = document.createElement('div');\n\t    a.innerHTML = '<template>1</template>';\n\t    return !a.cloneNode(true).firstChild.innerHTML;\n\t  } else {\n\t    return false;\n\t  }\n\t})();\n\t\n\t// Test for IE10/11 textarea placeholder clone bug\n\tvar hasTextareaCloneBug = (function () {\n\t  /* istanbul ignore else */\n\t  if (inBrowser) {\n\t    var t = document.createElement('textarea');\n\t    t.placeholder = 't';\n\t    return t.cloneNode(true).value === 't';\n\t  } else {\n\t    return false;\n\t  }\n\t})();\n\t\n\t/**\n\t * 1. Deal with Safari cloning nested <template> bug by\n\t *    manually cloning all template instances.\n\t * 2. Deal with IE10/11 textarea placeholder bug by setting\n\t *    the correct value after cloning.\n\t *\n\t * @param {Element|DocumentFragment} node\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction cloneNode(node) {\n\t  if (!node.querySelectorAll) {\n\t    return node.cloneNode();\n\t  }\n\t  var res = node.cloneNode(true);\n\t  var i, original, cloned;\n\t  /* istanbul ignore if */\n\t  if (hasBrokenTemplate) {\n\t    var tempClone = res;\n\t    if (isRealTemplate(node)) {\n\t      node = node.content;\n\t      tempClone = res.content;\n\t    }\n\t    original = node.querySelectorAll('template');\n\t    if (original.length) {\n\t      cloned = tempClone.querySelectorAll('template');\n\t      i = cloned.length;\n\t      while (i--) {\n\t        cloned[i].parentNode.replaceChild(cloneNode(original[i]), cloned[i]);\n\t      }\n\t    }\n\t  }\n\t  /* istanbul ignore if */\n\t  if (hasTextareaCloneBug) {\n\t    if (node.tagName === 'TEXTAREA') {\n\t      res.value = node.value;\n\t    } else {\n\t      original = node.querySelectorAll('textarea');\n\t      if (original.length) {\n\t        cloned = res.querySelectorAll('textarea');\n\t        i = cloned.length;\n\t        while (i--) {\n\t          cloned[i].value = original[i].value;\n\t        }\n\t      }\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Process the template option and normalizes it into a\n\t * a DocumentFragment that can be used as a partial or a\n\t * instance template.\n\t *\n\t * @param {*} template\n\t *        Possible values include:\n\t *        - DocumentFragment object\n\t *        - Node object of type Template\n\t *        - id selector: '#some-template-id'\n\t *        - template string: '<div><span>{{msg}}</span></div>'\n\t * @param {Boolean} shouldClone\n\t * @param {Boolean} raw\n\t *        inline HTML interpolation. Do not check for id\n\t *        selector and keep whitespace in the string.\n\t * @return {DocumentFragment|undefined}\n\t */\n\t\n\tfunction parseTemplate(template, shouldClone, raw) {\n\t  var node, frag;\n\t\n\t  // if the template is already a document fragment,\n\t  // do nothing\n\t  if (template instanceof DocumentFragment) {\n\t    trimNode(template);\n\t    return shouldClone ? cloneNode(template) : template;\n\t  }\n\t\n\t  if (typeof template === 'string') {\n\t    // id selector\n\t    if (!raw && template.charAt(0) === '#') {\n\t      // id selector can be cached too\n\t      frag = idSelectorCache.get(template);\n\t      if (!frag) {\n\t        node = document.getElementById(template.slice(1));\n\t        if (node) {\n\t          frag = nodeToFragment(node);\n\t          // save selector to cache\n\t          idSelectorCache.put(template, frag);\n\t        }\n\t      }\n\t    } else {\n\t      // normal string template\n\t      frag = stringToFragment(template, raw);\n\t    }\n\t  } else if (template.nodeType) {\n\t    // a direct node\n\t    frag = nodeToFragment(template);\n\t  }\n\t\n\t  return frag && shouldClone ? cloneNode(frag) : frag;\n\t}\n\t\n\tvar template = Object.freeze({\n\t  cloneNode: cloneNode,\n\t  parseTemplate: parseTemplate\n\t});\n\t\n\t/**\n\t * Abstraction for a partially-compiled fragment.\n\t * Can optionally compile content with a child scope.\n\t *\n\t * @param {Function} linker\n\t * @param {Vue} vm\n\t * @param {DocumentFragment} frag\n\t * @param {Vue} [host]\n\t * @param {Object} [scope]\n\t */\n\tfunction Fragment(linker, vm, frag, host, scope, parentFrag) {\n\t  this.children = [];\n\t  this.childFrags = [];\n\t  this.vm = vm;\n\t  this.scope = scope;\n\t  this.inserted = false;\n\t  this.parentFrag = parentFrag;\n\t  if (parentFrag) {\n\t    parentFrag.childFrags.push(this);\n\t  }\n\t  this.unlink = linker(vm, frag, host, scope, this);\n\t  var single = this.single = frag.childNodes.length === 1 &&\n\t  // do not go single mode if the only node is an anchor\n\t  !frag.childNodes[0].__vue_anchor;\n\t  if (single) {\n\t    this.node = frag.childNodes[0];\n\t    this.before = singleBefore;\n\t    this.remove = singleRemove;\n\t  } else {\n\t    this.node = createAnchor('fragment-start');\n\t    this.end = createAnchor('fragment-end');\n\t    this.frag = frag;\n\t    prepend(this.node, frag);\n\t    frag.appendChild(this.end);\n\t    this.before = multiBefore;\n\t    this.remove = multiRemove;\n\t  }\n\t  this.node.__vfrag__ = this;\n\t}\n\t\n\t/**\n\t * Call attach/detach for all components contained within\n\t * this fragment. Also do so recursively for all child\n\t * fragments.\n\t *\n\t * @param {Function} hook\n\t */\n\t\n\tFragment.prototype.callHook = function (hook) {\n\t  var i, l;\n\t  for (i = 0, l = this.childFrags.length; i < l; i++) {\n\t    this.childFrags[i].callHook(hook);\n\t  }\n\t  for (i = 0, l = this.children.length; i < l; i++) {\n\t    hook(this.children[i]);\n\t  }\n\t};\n\t\n\t/**\n\t * Insert fragment before target, single node version\n\t *\n\t * @param {Node} target\n\t * @param {Boolean} withTransition\n\t */\n\t\n\tfunction singleBefore(target, withTransition) {\n\t  this.inserted = true;\n\t  var method = withTransition !== false ? beforeWithTransition : before;\n\t  method(this.node, target, this.vm);\n\t  if (inDoc(this.node)) {\n\t    this.callHook(attach);\n\t  }\n\t}\n\t\n\t/**\n\t * Remove fragment, single node version\n\t */\n\t\n\tfunction singleRemove() {\n\t  this.inserted = false;\n\t  var shouldCallRemove = inDoc(this.node);\n\t  var self = this;\n\t  this.beforeRemove();\n\t  removeWithTransition(this.node, this.vm, function () {\n\t    if (shouldCallRemove) {\n\t      self.callHook(detach);\n\t    }\n\t    self.destroy();\n\t  });\n\t}\n\t\n\t/**\n\t * Insert fragment before target, multi-nodes version\n\t *\n\t * @param {Node} target\n\t * @param {Boolean} withTransition\n\t */\n\t\n\tfunction multiBefore(target, withTransition) {\n\t  this.inserted = true;\n\t  var vm = this.vm;\n\t  var method = withTransition !== false ? beforeWithTransition : before;\n\t  mapNodeRange(this.node, this.end, function (node) {\n\t    method(node, target, vm);\n\t  });\n\t  if (inDoc(this.node)) {\n\t    this.callHook(attach);\n\t  }\n\t}\n\t\n\t/**\n\t * Remove fragment, multi-nodes version\n\t */\n\t\n\tfunction multiRemove() {\n\t  this.inserted = false;\n\t  var self = this;\n\t  var shouldCallRemove = inDoc(this.node);\n\t  this.beforeRemove();\n\t  removeNodeRange(this.node, this.end, this.vm, this.frag, function () {\n\t    if (shouldCallRemove) {\n\t      self.callHook(detach);\n\t    }\n\t    self.destroy();\n\t  });\n\t}\n\t\n\t/**\n\t * Prepare the fragment for removal.\n\t */\n\t\n\tFragment.prototype.beforeRemove = function () {\n\t  var i, l;\n\t  for (i = 0, l = this.childFrags.length; i < l; i++) {\n\t    // call the same method recursively on child\n\t    // fragments, depth-first\n\t    this.childFrags[i].beforeRemove(false);\n\t  }\n\t  for (i = 0, l = this.children.length; i < l; i++) {\n\t    // Call destroy for all contained instances,\n\t    // with remove:false and defer:true.\n\t    // Defer is necessary because we need to\n\t    // keep the children to call detach hooks\n\t    // on them.\n\t    this.children[i].$destroy(false, true);\n\t  }\n\t  var dirs = this.unlink.dirs;\n\t  for (i = 0, l = dirs.length; i < l; i++) {\n\t    // disable the watchers on all the directives\n\t    // so that the rendered content stays the same\n\t    // during removal.\n\t    dirs[i]._watcher && dirs[i]._watcher.teardown();\n\t  }\n\t};\n\t\n\t/**\n\t * Destroy the fragment.\n\t */\n\t\n\tFragment.prototype.destroy = function () {\n\t  if (this.parentFrag) {\n\t    this.parentFrag.childFrags.$remove(this);\n\t  }\n\t  this.node.__vfrag__ = null;\n\t  this.unlink();\n\t};\n\t\n\t/**\n\t * Call attach hook for a Vue instance.\n\t *\n\t * @param {Vue} child\n\t */\n\t\n\tfunction attach(child) {\n\t  if (!child._isAttached) {\n\t    child._callHook('attached');\n\t  }\n\t}\n\t\n\t/**\n\t * Call detach hook for a Vue instance.\n\t *\n\t * @param {Vue} child\n\t */\n\t\n\tfunction detach(child) {\n\t  if (child._isAttached) {\n\t    child._callHook('detached');\n\t  }\n\t}\n\t\n\tvar linkerCache = new Cache(5000);\n\t\n\t/**\n\t * A factory that can be used to create instances of a\n\t * fragment. Caches the compiled linker if possible.\n\t *\n\t * @param {Vue} vm\n\t * @param {Element|String} el\n\t */\n\tfunction FragmentFactory(vm, el) {\n\t  this.vm = vm;\n\t  var template;\n\t  var isString = typeof el === 'string';\n\t  if (isString || isTemplate(el)) {\n\t    template = parseTemplate(el, true);\n\t  } else {\n\t    template = document.createDocumentFragment();\n\t    template.appendChild(el);\n\t  }\n\t  this.template = template;\n\t  // linker can be cached, but only for components\n\t  var linker;\n\t  var cid = vm.constructor.cid;\n\t  if (cid > 0) {\n\t    var cacheId = cid + (isString ? el : el.outerHTML);\n\t    linker = linkerCache.get(cacheId);\n\t    if (!linker) {\n\t      linker = compile(template, vm.$options, true);\n\t      linkerCache.put(cacheId, linker);\n\t    }\n\t  } else {\n\t    linker = compile(template, vm.$options, true);\n\t  }\n\t  this.linker = linker;\n\t}\n\t\n\t/**\n\t * Create a fragment instance with given host and scope.\n\t *\n\t * @param {Vue} host\n\t * @param {Object} scope\n\t * @param {Fragment} parentFrag\n\t */\n\t\n\tFragmentFactory.prototype.create = function (host, scope, parentFrag) {\n\t  var frag = cloneNode(this.template);\n\t  return new Fragment(this.linker, this.vm, frag, host, scope, parentFrag);\n\t};\n\t\n\tvar vIf = {\n\t\n\t  priority: IF,\n\t\n\t  bind: function bind() {\n\t    var el = this.el;\n\t    if (!el.__vue__) {\n\t      // check else block\n\t      var next = el.nextElementSibling;\n\t      if (next && getAttr(next, 'v-else') !== null) {\n\t        remove(next);\n\t        this.elseFactory = new FragmentFactory(this.vm, next);\n\t      }\n\t      // check main block\n\t      this.anchor = createAnchor('v-if');\n\t      replace(el, this.anchor);\n\t      this.factory = new FragmentFactory(this.vm, el);\n\t    } else {\n\t      (\"production\") !== 'production' && warn('v-if=\"' + this.expression + '\" cannot be ' + 'used on an instance root element.');\n\t      this.invalid = true;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    if (this.invalid) return;\n\t    if (value) {\n\t      if (!this.frag) {\n\t        this.insert();\n\t      }\n\t    } else {\n\t      this.remove();\n\t    }\n\t  },\n\t\n\t  insert: function insert() {\n\t    if (this.elseFrag) {\n\t      this.elseFrag.remove();\n\t      this.elseFrag = null;\n\t    }\n\t    this.frag = this.factory.create(this._host, this._scope, this._frag);\n\t    this.frag.before(this.anchor);\n\t  },\n\t\n\t  remove: function remove() {\n\t    if (this.frag) {\n\t      this.frag.remove();\n\t      this.frag = null;\n\t    }\n\t    if (this.elseFactory && !this.elseFrag) {\n\t      this.elseFrag = this.elseFactory.create(this._host, this._scope, this._frag);\n\t      this.elseFrag.before(this.anchor);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.frag) {\n\t      this.frag.destroy();\n\t    }\n\t  }\n\t};\n\t\n\tvar uid$1 = 0;\n\t\n\tvar vFor = {\n\t\n\t  priority: FOR,\n\t\n\t  params: ['track-by', 'stagger', 'enter-stagger', 'leave-stagger'],\n\t\n\t  bind: function bind() {\n\t    // support \"item in items\" syntax\n\t    var inMatch = this.expression.match(/(.*) in (.*)/);\n\t    if (inMatch) {\n\t      var itMatch = inMatch[1].match(/\\((.*),(.*)\\)/);\n\t      if (itMatch) {\n\t        this.iterator = itMatch[1].trim();\n\t        this.alias = itMatch[2].trim();\n\t      } else {\n\t        this.alias = inMatch[1].trim();\n\t      }\n\t      this.expression = inMatch[2];\n\t    }\n\t\n\t    if (!this.alias) {\n\t      (\"production\") !== 'production' && warn('Alias is required in v-for.');\n\t      return;\n\t    }\n\t\n\t    // uid as a cache identifier\n\t    this.id = '__v-for__' + ++uid$1;\n\t\n\t    // check if this is an option list,\n\t    // so that we know if we need to update the <select>'s\n\t    // v-model when the option list has changed.\n\t    // because v-model has a lower priority than v-for,\n\t    // the v-model is not bound here yet, so we have to\n\t    // retrive it in the actual updateModel() function.\n\t    var tag = this.el.tagName;\n\t    this.isOption = (tag === 'OPTION' || tag === 'OPTGROUP') && this.el.parentNode.tagName === 'SELECT';\n\t\n\t    // setup anchor nodes\n\t    this.start = createAnchor('v-for-start');\n\t    this.end = createAnchor('v-for-end');\n\t    replace(this.el, this.end);\n\t    before(this.start, this.end);\n\t\n\t    // cache\n\t    this.cache = Object.create(null);\n\t\n\t    // fragment factory\n\t    this.factory = new FragmentFactory(this.vm, this.el);\n\t  },\n\t\n\t  update: function update(data) {\n\t    this.diff(data);\n\t    this.updateRef();\n\t    this.updateModel();\n\t  },\n\t\n\t  /**\n\t   * Diff, based on new data and old data, determine the\n\t   * minimum amount of DOM manipulations needed to make the\n\t   * DOM reflect the new data Array.\n\t   *\n\t   * The algorithm diffs the new data Array by storing a\n\t   * hidden reference to an owner vm instance on previously\n\t   * seen data. This allows us to achieve O(n) which is\n\t   * better than a levenshtein distance based algorithm,\n\t   * which is O(m * n).\n\t   *\n\t   * @param {Array} data\n\t   */\n\t\n\t  diff: function diff(data) {\n\t    // check if the Array was converted from an Object\n\t    var item = data[0];\n\t    var convertedFromObject = this.fromObject = isObject(item) && hasOwn(item, '$key') && hasOwn(item, '$value');\n\t\n\t    var trackByKey = this.params.trackBy;\n\t    var oldFrags = this.frags;\n\t    var frags = this.frags = new Array(data.length);\n\t    var alias = this.alias;\n\t    var iterator = this.iterator;\n\t    var start = this.start;\n\t    var end = this.end;\n\t    var inDocument = inDoc(start);\n\t    var init = !oldFrags;\n\t    var i, l, frag, key, value, primitive;\n\t\n\t    // First pass, go through the new Array and fill up\n\t    // the new frags array. If a piece of data has a cached\n\t    // instance for it, we reuse it. Otherwise build a new\n\t    // instance.\n\t    for (i = 0, l = data.length; i < l; i++) {\n\t      item = data[i];\n\t      key = convertedFromObject ? item.$key : null;\n\t      value = convertedFromObject ? item.$value : item;\n\t      primitive = !isObject(value);\n\t      frag = !init && this.getCachedFrag(value, i, key);\n\t      if (frag) {\n\t        // reusable fragment\n\t        frag.reused = true;\n\t        // update $index\n\t        frag.scope.$index = i;\n\t        // update $key\n\t        if (key) {\n\t          frag.scope.$key = key;\n\t        }\n\t        // update iterator\n\t        if (iterator) {\n\t          frag.scope[iterator] = key !== null ? key : i;\n\t        }\n\t        // update data for track-by, object repeat &\n\t        // primitive values.\n\t        if (trackByKey || convertedFromObject || primitive) {\n\t          frag.scope[alias] = value;\n\t        }\n\t      } else {\n\t        // new isntance\n\t        frag = this.create(value, alias, i, key);\n\t        frag.fresh = !init;\n\t      }\n\t      frags[i] = frag;\n\t      if (init) {\n\t        frag.before(end);\n\t      }\n\t    }\n\t\n\t    // we're done for the initial render.\n\t    if (init) {\n\t      return;\n\t    }\n\t\n\t    // Second pass, go through the old fragments and\n\t    // destroy those who are not reused (and remove them\n\t    // from cache)\n\t    var removalIndex = 0;\n\t    var totalRemoved = oldFrags.length - frags.length;\n\t    for (i = 0, l = oldFrags.length; i < l; i++) {\n\t      frag = oldFrags[i];\n\t      if (!frag.reused) {\n\t        this.deleteCachedFrag(frag);\n\t        this.remove(frag, removalIndex++, totalRemoved, inDocument);\n\t      }\n\t    }\n\t\n\t    // Final pass, move/insert new fragments into the\n\t    // right place.\n\t    var targetPrev, prevEl, currentPrev;\n\t    var insertionIndex = 0;\n\t    for (i = 0, l = frags.length; i < l; i++) {\n\t      frag = frags[i];\n\t      // this is the frag that we should be after\n\t      targetPrev = frags[i - 1];\n\t      prevEl = targetPrev ? targetPrev.staggerCb ? targetPrev.staggerAnchor : targetPrev.end || targetPrev.node : start;\n\t      if (frag.reused && !frag.staggerCb) {\n\t        currentPrev = findPrevFrag(frag, start, this.id);\n\t        if (currentPrev !== targetPrev && (!currentPrev ||\n\t        // optimization for moving a single item.\n\t        // thanks to suggestions by @livoras in #1807\n\t        findPrevFrag(currentPrev, start, this.id) !== targetPrev)) {\n\t          this.move(frag, prevEl);\n\t        }\n\t      } else {\n\t        // new instance, or still in stagger.\n\t        // insert with updated stagger index.\n\t        this.insert(frag, insertionIndex++, prevEl, inDocument);\n\t      }\n\t      frag.reused = frag.fresh = false;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Create a new fragment instance.\n\t   *\n\t   * @param {*} value\n\t   * @param {String} alias\n\t   * @param {Number} index\n\t   * @param {String} [key]\n\t   * @return {Fragment}\n\t   */\n\t\n\t  create: function create(value, alias, index, key) {\n\t    var host = this._host;\n\t    // create iteration scope\n\t    var parentScope = this._scope || this.vm;\n\t    var scope = Object.create(parentScope);\n\t    // ref holder for the scope\n\t    scope.$refs = Object.create(parentScope.$refs);\n\t    scope.$els = Object.create(parentScope.$els);\n\t    // make sure point $parent to parent scope\n\t    scope.$parent = parentScope;\n\t    // for two-way binding on alias\n\t    scope.$forContext = this;\n\t    // define scope properties\n\t    defineReactive(scope, alias, value);\n\t    defineReactive(scope, '$index', index);\n\t    if (key) {\n\t      defineReactive(scope, '$key', key);\n\t    } else if (scope.$key) {\n\t      // avoid accidental fallback\n\t      def(scope, '$key', null);\n\t    }\n\t    if (this.iterator) {\n\t      defineReactive(scope, this.iterator, key !== null ? key : index);\n\t    }\n\t    var frag = this.factory.create(host, scope, this._frag);\n\t    frag.forId = this.id;\n\t    this.cacheFrag(value, frag, index, key);\n\t    return frag;\n\t  },\n\t\n\t  /**\n\t   * Update the v-ref on owner vm.\n\t   */\n\t\n\t  updateRef: function updateRef() {\n\t    var ref = this.descriptor.ref;\n\t    if (!ref) return;\n\t    var hash = (this._scope || this.vm).$refs;\n\t    var refs;\n\t    if (!this.fromObject) {\n\t      refs = this.frags.map(findVmFromFrag);\n\t    } else {\n\t      refs = {};\n\t      this.frags.forEach(function (frag) {\n\t        refs[frag.scope.$key] = findVmFromFrag(frag);\n\t      });\n\t    }\n\t    hash[ref] = refs;\n\t  },\n\t\n\t  /**\n\t   * For option lists, update the containing v-model on\n\t   * parent <select>.\n\t   */\n\t\n\t  updateModel: function updateModel() {\n\t    if (this.isOption) {\n\t      var parent = this.start.parentNode;\n\t      var model = parent && parent.__v_model;\n\t      if (model) {\n\t        model.forceUpdate();\n\t      }\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Insert a fragment. Handles staggering.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {Node} prevEl\n\t   * @param {Boolean} inDocument\n\t   */\n\t\n\t  insert: function insert(frag, index, prevEl, inDocument) {\n\t    if (frag.staggerCb) {\n\t      frag.staggerCb.cancel();\n\t      frag.staggerCb = null;\n\t    }\n\t    var staggerAmount = this.getStagger(frag, index, null, 'enter');\n\t    if (inDocument && staggerAmount) {\n\t      // create an anchor and insert it synchronously,\n\t      // so that we can resolve the correct order without\n\t      // worrying about some elements not inserted yet\n\t      var anchor = frag.staggerAnchor;\n\t      if (!anchor) {\n\t        anchor = frag.staggerAnchor = createAnchor('stagger-anchor');\n\t        anchor.__vfrag__ = frag;\n\t      }\n\t      after(anchor, prevEl);\n\t      var op = frag.staggerCb = cancellable(function () {\n\t        frag.staggerCb = null;\n\t        frag.before(anchor);\n\t        remove(anchor);\n\t      });\n\t      setTimeout(op, staggerAmount);\n\t    } else {\n\t      frag.before(prevEl.nextSibling);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Remove a fragment. Handles staggering.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {Number} total\n\t   * @param {Boolean} inDocument\n\t   */\n\t\n\t  remove: function remove(frag, index, total, inDocument) {\n\t    if (frag.staggerCb) {\n\t      frag.staggerCb.cancel();\n\t      frag.staggerCb = null;\n\t      // it's not possible for the same frag to be removed\n\t      // twice, so if we have a pending stagger callback,\n\t      // it means this frag is queued for enter but removed\n\t      // before its transition started. Since it is already\n\t      // destroyed, we can just leave it in detached state.\n\t      return;\n\t    }\n\t    var staggerAmount = this.getStagger(frag, index, total, 'leave');\n\t    if (inDocument && staggerAmount) {\n\t      var op = frag.staggerCb = cancellable(function () {\n\t        frag.staggerCb = null;\n\t        frag.remove();\n\t      });\n\t      setTimeout(op, staggerAmount);\n\t    } else {\n\t      frag.remove();\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Move a fragment to a new position.\n\t   * Force no transition.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Node} prevEl\n\t   */\n\t\n\t  move: function move(frag, prevEl) {\n\t    // fix a common issue with Sortable:\n\t    // if prevEl doesn't have nextSibling, this means it's\n\t    // been dragged after the end anchor. Just re-position\n\t    // the end anchor to the end of the container.\n\t    /* istanbul ignore if */\n\t    if (!prevEl.nextSibling) {\n\t      this.end.parentNode.appendChild(this.end);\n\t    }\n\t    frag.before(prevEl.nextSibling, false);\n\t  },\n\t\n\t  /**\n\t   * Cache a fragment using track-by or the object key.\n\t   *\n\t   * @param {*} value\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {String} [key]\n\t   */\n\t\n\t  cacheFrag: function cacheFrag(value, frag, index, key) {\n\t    var trackByKey = this.params.trackBy;\n\t    var cache = this.cache;\n\t    var primitive = !isObject(value);\n\t    var id;\n\t    if (key || trackByKey || primitive) {\n\t      id = trackByKey ? trackByKey === '$index' ? index : value[trackByKey] : key || value;\n\t      if (!cache[id]) {\n\t        cache[id] = frag;\n\t      } else if (trackByKey !== '$index') {\n\t        (\"production\") !== 'production' && this.warnDuplicate(value);\n\t      }\n\t    } else {\n\t      id = this.id;\n\t      if (hasOwn(value, id)) {\n\t        if (value[id] === null) {\n\t          value[id] = frag;\n\t        } else {\n\t          (\"production\") !== 'production' && this.warnDuplicate(value);\n\t        }\n\t      } else {\n\t        def(value, id, frag);\n\t      }\n\t    }\n\t    frag.raw = value;\n\t  },\n\t\n\t  /**\n\t   * Get a cached fragment from the value/index/key\n\t   *\n\t   * @param {*} value\n\t   * @param {Number} index\n\t   * @param {String} key\n\t   * @return {Fragment}\n\t   */\n\t\n\t  getCachedFrag: function getCachedFrag(value, index, key) {\n\t    var trackByKey = this.params.trackBy;\n\t    var primitive = !isObject(value);\n\t    var frag;\n\t    if (key || trackByKey || primitive) {\n\t      var id = trackByKey ? trackByKey === '$index' ? index : value[trackByKey] : key || value;\n\t      frag = this.cache[id];\n\t    } else {\n\t      frag = value[this.id];\n\t    }\n\t    if (frag && (frag.reused || frag.fresh)) {\n\t      (\"production\") !== 'production' && this.warnDuplicate(value);\n\t    }\n\t    return frag;\n\t  },\n\t\n\t  /**\n\t   * Delete a fragment from cache.\n\t   *\n\t   * @param {Fragment} frag\n\t   */\n\t\n\t  deleteCachedFrag: function deleteCachedFrag(frag) {\n\t    var value = frag.raw;\n\t    var trackByKey = this.params.trackBy;\n\t    var scope = frag.scope;\n\t    var index = scope.$index;\n\t    // fix #948: avoid accidentally fall through to\n\t    // a parent repeater which happens to have $key.\n\t    var key = hasOwn(scope, '$key') && scope.$key;\n\t    var primitive = !isObject(value);\n\t    if (trackByKey || key || primitive) {\n\t      var id = trackByKey ? trackByKey === '$index' ? index : value[trackByKey] : key || value;\n\t      this.cache[id] = null;\n\t    } else {\n\t      value[this.id] = null;\n\t      frag.raw = null;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Get the stagger amount for an insertion/removal.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {Number} total\n\t   * @param {String} type\n\t   */\n\t\n\t  getStagger: function getStagger(frag, index, total, type) {\n\t    type = type + 'Stagger';\n\t    var trans = frag.node.__v_trans;\n\t    var hooks = trans && trans.hooks;\n\t    var hook = hooks && (hooks[type] || hooks.stagger);\n\t    return hook ? hook.call(frag, index, total) : index * parseInt(this.params[type] || this.params.stagger, 10);\n\t  },\n\t\n\t  /**\n\t   * Pre-process the value before piping it through the\n\t   * filters. This is passed to and called by the watcher.\n\t   */\n\t\n\t  _preProcess: function _preProcess(value) {\n\t    // regardless of type, store the un-filtered raw value.\n\t    this.rawValue = value;\n\t    return value;\n\t  },\n\t\n\t  /**\n\t   * Post-process the value after it has been piped through\n\t   * the filters. This is passed to and called by the watcher.\n\t   *\n\t   * It is necessary for this to be called during the\n\t   * wathcer's dependency collection phase because we want\n\t   * the v-for to update when the source Object is mutated.\n\t   */\n\t\n\t  _postProcess: function _postProcess(value) {\n\t    if (isArray(value)) {\n\t      return value;\n\t    } else if (isPlainObject(value)) {\n\t      // convert plain object to array.\n\t      var keys = Object.keys(value);\n\t      var i = keys.length;\n\t      var res = new Array(i);\n\t      var key;\n\t      while (i--) {\n\t        key = keys[i];\n\t        res[i] = {\n\t          $key: key,\n\t          $value: value[key]\n\t        };\n\t      }\n\t      return res;\n\t    } else {\n\t      if (typeof value === 'number') {\n\t        value = range(value);\n\t      }\n\t      return value || [];\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.descriptor.ref) {\n\t      (this._scope || this.vm).$refs[this.descriptor.ref] = null;\n\t    }\n\t    if (this.frags) {\n\t      var i = this.frags.length;\n\t      var frag;\n\t      while (i--) {\n\t        frag = this.frags[i];\n\t        this.deleteCachedFrag(frag);\n\t        frag.destroy();\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Helper to find the previous element that is a fragment\n\t * anchor. This is necessary because a destroyed frag's\n\t * element could still be lingering in the DOM before its\n\t * leaving transition finishes, but its inserted flag\n\t * should have been set to false so we can skip them.\n\t *\n\t * If this is a block repeat, we want to make sure we only\n\t * return frag that is bound to this v-for. (see #929)\n\t *\n\t * @param {Fragment} frag\n\t * @param {Comment|Text} anchor\n\t * @param {String} id\n\t * @return {Fragment}\n\t */\n\t\n\tfunction findPrevFrag(frag, anchor, id) {\n\t  var el = frag.node.previousSibling;\n\t  /* istanbul ignore if */\n\t  if (!el) return;\n\t  frag = el.__vfrag__;\n\t  while ((!frag || frag.forId !== id || !frag.inserted) && el !== anchor) {\n\t    el = el.previousSibling;\n\t    /* istanbul ignore if */\n\t    if (!el) return;\n\t    frag = el.__vfrag__;\n\t  }\n\t  return frag;\n\t}\n\t\n\t/**\n\t * Find a vm from a fragment.\n\t *\n\t * @param {Fragment} frag\n\t * @return {Vue|undefined}\n\t */\n\t\n\tfunction findVmFromFrag(frag) {\n\t  var node = frag.node;\n\t  // handle multi-node frag\n\t  if (frag.end) {\n\t    while (!node.__vue__ && node !== frag.end && node.nextSibling) {\n\t      node = node.nextSibling;\n\t    }\n\t  }\n\t  return node.__vue__;\n\t}\n\t\n\t/**\n\t * Create a range array from given number.\n\t *\n\t * @param {Number} n\n\t * @return {Array}\n\t */\n\t\n\tfunction range(n) {\n\t  var i = -1;\n\t  var ret = new Array(n);\n\t  while (++i < n) {\n\t    ret[i] = i;\n\t  }\n\t  return ret;\n\t}\n\t\n\tif (false) {\n\t  vFor.warnDuplicate = function (value) {\n\t    warn('Duplicate value found in v-for=\"' + this.descriptor.raw + '\": ' + JSON.stringify(value) + '. Use track-by=\"$index\" if ' + 'you are expecting duplicate values.');\n\t  };\n\t}\n\t\n\tvar html = {\n\t\n\t  bind: function bind() {\n\t    // a comment node means this is a binding for\n\t    // {{{ inline unescaped html }}}\n\t    if (this.el.nodeType === 8) {\n\t      // hold nodes\n\t      this.nodes = [];\n\t      // replace the placeholder with proper anchor\n\t      this.anchor = createAnchor('v-html');\n\t      replace(this.el, this.anchor);\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    value = _toString(value);\n\t    if (this.nodes) {\n\t      this.swap(value);\n\t    } else {\n\t      this.el.innerHTML = value;\n\t    }\n\t  },\n\t\n\t  swap: function swap(value) {\n\t    // remove old nodes\n\t    var i = this.nodes.length;\n\t    while (i--) {\n\t      remove(this.nodes[i]);\n\t    }\n\t    // convert new value to a fragment\n\t    // do not attempt to retrieve from id selector\n\t    var frag = parseTemplate(value, true, true);\n\t    // save a reference to these nodes so we can remove later\n\t    this.nodes = toArray(frag.childNodes);\n\t    before(frag, this.anchor);\n\t  }\n\t};\n\t\n\tvar text = {\n\t\n\t  bind: function bind() {\n\t    this.attr = this.el.nodeType === 3 ? 'data' : 'textContent';\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.el[this.attr] = _toString(value);\n\t  }\n\t};\n\t\n\t// must export plain object\n\tvar publicDirectives = {\n\t  text: text,\n\t  html: html,\n\t  'for': vFor,\n\t  'if': vIf,\n\t  show: show,\n\t  model: model,\n\t  on: on,\n\t  bind: bind,\n\t  el: el,\n\t  ref: ref,\n\t  cloak: cloak\n\t};\n\t\n\tvar queue$1 = [];\n\tvar queued = false;\n\t\n\t/**\n\t * Push a job into the queue.\n\t *\n\t * @param {Function} job\n\t */\n\t\n\tfunction pushJob(job) {\n\t  queue$1.push(job);\n\t  if (!queued) {\n\t    queued = true;\n\t    nextTick(flush);\n\t  }\n\t}\n\t\n\t/**\n\t * Flush the queue, and do one forced reflow before\n\t * triggering transitions.\n\t */\n\t\n\tfunction flush() {\n\t  // Force layout\n\t  var f = document.documentElement.offsetHeight;\n\t  for (var i = 0; i < queue$1.length; i++) {\n\t    queue$1[i]();\n\t  }\n\t  queue$1 = [];\n\t  queued = false;\n\t  // dummy return, so js linters don't complain about\n\t  // unused variable f\n\t  return f;\n\t}\n\t\n\tvar TYPE_TRANSITION = 'transition';\n\tvar TYPE_ANIMATION = 'animation';\n\tvar transDurationProp = transitionProp + 'Duration';\n\tvar animDurationProp = animationProp + 'Duration';\n\t\n\t/**\n\t * A Transition object that encapsulates the state and logic\n\t * of the transition.\n\t *\n\t * @param {Element} el\n\t * @param {String} id\n\t * @param {Object} hooks\n\t * @param {Vue} vm\n\t */\n\tfunction Transition(el, id, hooks, vm) {\n\t  this.id = id;\n\t  this.el = el;\n\t  this.enterClass = hooks && hooks.enterClass || id + '-enter';\n\t  this.leaveClass = hooks && hooks.leaveClass || id + '-leave';\n\t  this.hooks = hooks;\n\t  this.vm = vm;\n\t  // async state\n\t  this.pendingCssEvent = this.pendingCssCb = this.cancel = this.pendingJsCb = this.op = this.cb = null;\n\t  this.justEntered = false;\n\t  this.entered = this.left = false;\n\t  this.typeCache = {};\n\t  // check css transition type\n\t  this.type = hooks && hooks.type;\n\t  /* istanbul ignore if */\n\t  if (false) {\n\t    if (this.type && this.type !== TYPE_TRANSITION && this.type !== TYPE_ANIMATION) {\n\t      warn('invalid CSS transition type for transition=\"' + this.id + '\": ' + this.type);\n\t    }\n\t  }\n\t  // bind\n\t  var self = this;['enterNextTick', 'enterDone', 'leaveNextTick', 'leaveDone'].forEach(function (m) {\n\t    self[m] = bind$1(self[m], self);\n\t  });\n\t}\n\t\n\tvar p$1 = Transition.prototype;\n\t\n\t/**\n\t * Start an entering transition.\n\t *\n\t * 1. enter transition triggered\n\t * 2. call beforeEnter hook\n\t * 3. add enter class\n\t * 4. insert/show element\n\t * 5. call enter hook (with possible explicit js callback)\n\t * 6. reflow\n\t * 7. based on transition type:\n\t *    - transition:\n\t *        remove class now, wait for transitionend,\n\t *        then done if there's no explicit js callback.\n\t *    - animation:\n\t *        wait for animationend, remove class,\n\t *        then done if there's no explicit js callback.\n\t *    - no css transition:\n\t *        done now if there's no explicit js callback.\n\t * 8. wait for either done or js callback, then call\n\t *    afterEnter hook.\n\t *\n\t * @param {Function} op - insert/show the element\n\t * @param {Function} [cb]\n\t */\n\t\n\tp$1.enter = function (op, cb) {\n\t  this.cancelPending();\n\t  this.callHook('beforeEnter');\n\t  this.cb = cb;\n\t  addClass(this.el, this.enterClass);\n\t  op();\n\t  this.entered = false;\n\t  this.callHookWithCb('enter');\n\t  if (this.entered) {\n\t    return; // user called done synchronously.\n\t  }\n\t  this.cancel = this.hooks && this.hooks.enterCancelled;\n\t  pushJob(this.enterNextTick);\n\t};\n\t\n\t/**\n\t * The \"nextTick\" phase of an entering transition, which is\n\t * to be pushed into a queue and executed after a reflow so\n\t * that removing the class can trigger a CSS transition.\n\t */\n\t\n\tp$1.enterNextTick = function () {\n\t\n\t  // Important hack:\n\t  // in Chrome, if a just-entered element is applied the\n\t  // leave class while its interpolated property still has\n\t  // a very small value (within one frame), Chrome will\n\t  // skip the leave transition entirely and not firing the\n\t  // transtionend event. Therefore we need to protected\n\t  // against such cases using a one-frame timeout.\n\t  this.justEntered = true;\n\t  var self = this;\n\t  setTimeout(function () {\n\t    self.justEntered = false;\n\t  }, 17);\n\t\n\t  var enterDone = this.enterDone;\n\t  var type = this.getCssTransitionType(this.enterClass);\n\t  if (!this.pendingJsCb) {\n\t    if (type === TYPE_TRANSITION) {\n\t      // trigger transition by removing enter class now\n\t      removeClass(this.el, this.enterClass);\n\t      this.setupCssCb(transitionEndEvent, enterDone);\n\t    } else if (type === TYPE_ANIMATION) {\n\t      this.setupCssCb(animationEndEvent, enterDone);\n\t    } else {\n\t      enterDone();\n\t    }\n\t  } else if (type === TYPE_TRANSITION) {\n\t    removeClass(this.el, this.enterClass);\n\t  }\n\t};\n\t\n\t/**\n\t * The \"cleanup\" phase of an entering transition.\n\t */\n\t\n\tp$1.enterDone = function () {\n\t  this.entered = true;\n\t  this.cancel = this.pendingJsCb = null;\n\t  removeClass(this.el, this.enterClass);\n\t  this.callHook('afterEnter');\n\t  if (this.cb) this.cb();\n\t};\n\t\n\t/**\n\t * Start a leaving transition.\n\t *\n\t * 1. leave transition triggered.\n\t * 2. call beforeLeave hook\n\t * 3. add leave class (trigger css transition)\n\t * 4. call leave hook (with possible explicit js callback)\n\t * 5. reflow if no explicit js callback is provided\n\t * 6. based on transition type:\n\t *    - transition or animation:\n\t *        wait for end event, remove class, then done if\n\t *        there's no explicit js callback.\n\t *    - no css transition:\n\t *        done if there's no explicit js callback.\n\t * 7. wait for either done or js callback, then call\n\t *    afterLeave hook.\n\t *\n\t * @param {Function} op - remove/hide the element\n\t * @param {Function} [cb]\n\t */\n\t\n\tp$1.leave = function (op, cb) {\n\t  this.cancelPending();\n\t  this.callHook('beforeLeave');\n\t  this.op = op;\n\t  this.cb = cb;\n\t  addClass(this.el, this.leaveClass);\n\t  this.left = false;\n\t  this.callHookWithCb('leave');\n\t  if (this.left) {\n\t    return; // user called done synchronously.\n\t  }\n\t  this.cancel = this.hooks && this.hooks.leaveCancelled;\n\t  // only need to handle leaveDone if\n\t  // 1. the transition is already done (synchronously called\n\t  //    by the user, which causes this.op set to null)\n\t  // 2. there's no explicit js callback\n\t  if (this.op && !this.pendingJsCb) {\n\t    // if a CSS transition leaves immediately after enter,\n\t    // the transitionend event never fires. therefore we\n\t    // detect such cases and end the leave immediately.\n\t    if (this.justEntered) {\n\t      this.leaveDone();\n\t    } else {\n\t      pushJob(this.leaveNextTick);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * The \"nextTick\" phase of a leaving transition.\n\t */\n\t\n\tp$1.leaveNextTick = function () {\n\t  var type = this.getCssTransitionType(this.leaveClass);\n\t  if (type) {\n\t    var event = type === TYPE_TRANSITION ? transitionEndEvent : animationEndEvent;\n\t    this.setupCssCb(event, this.leaveDone);\n\t  } else {\n\t    this.leaveDone();\n\t  }\n\t};\n\t\n\t/**\n\t * The \"cleanup\" phase of a leaving transition.\n\t */\n\t\n\tp$1.leaveDone = function () {\n\t  this.left = true;\n\t  this.cancel = this.pendingJsCb = null;\n\t  this.op();\n\t  removeClass(this.el, this.leaveClass);\n\t  this.callHook('afterLeave');\n\t  if (this.cb) this.cb();\n\t  this.op = null;\n\t};\n\t\n\t/**\n\t * Cancel any pending callbacks from a previously running\n\t * but not finished transition.\n\t */\n\t\n\tp$1.cancelPending = function () {\n\t  this.op = this.cb = null;\n\t  var hasPending = false;\n\t  if (this.pendingCssCb) {\n\t    hasPending = true;\n\t    off(this.el, this.pendingCssEvent, this.pendingCssCb);\n\t    this.pendingCssEvent = this.pendingCssCb = null;\n\t  }\n\t  if (this.pendingJsCb) {\n\t    hasPending = true;\n\t    this.pendingJsCb.cancel();\n\t    this.pendingJsCb = null;\n\t  }\n\t  if (hasPending) {\n\t    removeClass(this.el, this.enterClass);\n\t    removeClass(this.el, this.leaveClass);\n\t  }\n\t  if (this.cancel) {\n\t    this.cancel.call(this.vm, this.el);\n\t    this.cancel = null;\n\t  }\n\t};\n\t\n\t/**\n\t * Call a user-provided synchronous hook function.\n\t *\n\t * @param {String} type\n\t */\n\t\n\tp$1.callHook = function (type) {\n\t  if (this.hooks && this.hooks[type]) {\n\t    this.hooks[type].call(this.vm, this.el);\n\t  }\n\t};\n\t\n\t/**\n\t * Call a user-provided, potentially-async hook function.\n\t * We check for the length of arguments to see if the hook\n\t * expects a `done` callback. If true, the transition's end\n\t * will be determined by when the user calls that callback;\n\t * otherwise, the end is determined by the CSS transition or\n\t * animation.\n\t *\n\t * @param {String} type\n\t */\n\t\n\tp$1.callHookWithCb = function (type) {\n\t  var hook = this.hooks && this.hooks[type];\n\t  if (hook) {\n\t    if (hook.length > 1) {\n\t      this.pendingJsCb = cancellable(this[type + 'Done']);\n\t    }\n\t    hook.call(this.vm, this.el, this.pendingJsCb);\n\t  }\n\t};\n\t\n\t/**\n\t * Get an element's transition type based on the\n\t * calculated styles.\n\t *\n\t * @param {String} className\n\t * @return {Number}\n\t */\n\t\n\tp$1.getCssTransitionType = function (className) {\n\t  /* istanbul ignore if */\n\t  if (!transitionEndEvent ||\n\t  // skip CSS transitions if page is not visible -\n\t  // this solves the issue of transitionend events not\n\t  // firing until the page is visible again.\n\t  // pageVisibility API is supported in IE10+, same as\n\t  // CSS transitions.\n\t  document.hidden ||\n\t  // explicit js-only transition\n\t  this.hooks && this.hooks.css === false ||\n\t  // element is hidden\n\t  isHidden(this.el)) {\n\t    return;\n\t  }\n\t  var type = this.type || this.typeCache[className];\n\t  if (type) return type;\n\t  var inlineStyles = this.el.style;\n\t  var computedStyles = window.getComputedStyle(this.el);\n\t  var transDuration = inlineStyles[transDurationProp] || computedStyles[transDurationProp];\n\t  if (transDuration && transDuration !== '0s') {\n\t    type = TYPE_TRANSITION;\n\t  } else {\n\t    var animDuration = inlineStyles[animDurationProp] || computedStyles[animDurationProp];\n\t    if (animDuration && animDuration !== '0s') {\n\t      type = TYPE_ANIMATION;\n\t    }\n\t  }\n\t  if (type) {\n\t    this.typeCache[className] = type;\n\t  }\n\t  return type;\n\t};\n\t\n\t/**\n\t * Setup a CSS transitionend/animationend callback.\n\t *\n\t * @param {String} event\n\t * @param {Function} cb\n\t */\n\t\n\tp$1.setupCssCb = function (event, cb) {\n\t  this.pendingCssEvent = event;\n\t  var self = this;\n\t  var el = this.el;\n\t  var onEnd = this.pendingCssCb = function (e) {\n\t    if (e.target === el) {\n\t      off(el, event, onEnd);\n\t      self.pendingCssEvent = self.pendingCssCb = null;\n\t      if (!self.pendingJsCb && cb) {\n\t        cb();\n\t      }\n\t    }\n\t  };\n\t  on$1(el, event, onEnd);\n\t};\n\t\n\t/**\n\t * Check if an element is hidden - in that case we can just\n\t * skip the transition alltogether.\n\t *\n\t * @param {Element} el\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isHidden(el) {\n\t  return !(el.offsetWidth || el.offsetHeight || el.getClientRects().length);\n\t}\n\t\n\tvar transition = {\n\t\n\t  priority: TRANSITION,\n\t\n\t  update: function update(id, oldId) {\n\t    var el = this.el;\n\t    // resolve on owner vm\n\t    var hooks = resolveAsset(this.vm.$options, 'transitions', id);\n\t    id = id || 'v';\n\t    // apply on closest vm\n\t    el.__v_trans = new Transition(el, id, hooks, this.el.__vue__ || this.vm);\n\t    if (oldId) {\n\t      removeClass(el, oldId + '-transition');\n\t    }\n\t    addClass(el, id + '-transition');\n\t  }\n\t};\n\t\n\tvar bindingModes = config._propBindingModes;\n\t\n\tvar propDef = {\n\t\n\t  bind: function bind() {\n\t\n\t    var child = this.vm;\n\t    var parent = child._context;\n\t    // passed in from compiler directly\n\t    var prop = this.descriptor.prop;\n\t    var childKey = prop.path;\n\t    var parentKey = prop.parentPath;\n\t    var twoWay = prop.mode === bindingModes.TWO_WAY;\n\t\n\t    var parentWatcher = this.parentWatcher = new Watcher(parent, parentKey, function (val) {\n\t      val = coerceProp(prop, val);\n\t      if (assertProp(prop, val)) {\n\t        child[childKey] = val;\n\t      }\n\t    }, {\n\t      twoWay: twoWay,\n\t      filters: prop.filters,\n\t      // important: props need to be observed on the\n\t      // v-for scope if present\n\t      scope: this._scope\n\t    });\n\t\n\t    // set the child initial value.\n\t    initProp(child, prop, parentWatcher.value);\n\t\n\t    // setup two-way binding\n\t    if (twoWay) {\n\t      // important: defer the child watcher creation until\n\t      // the created hook (after data observation)\n\t      var self = this;\n\t      child.$once('pre-hook:created', function () {\n\t        self.childWatcher = new Watcher(child, childKey, function (val) {\n\t          parentWatcher.set(val);\n\t        }, {\n\t          // ensure sync upward before parent sync down.\n\t          // this is necessary in cases e.g. the child\n\t          // mutates a prop array, then replaces it. (#1683)\n\t          sync: true\n\t        });\n\t      });\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    this.parentWatcher.teardown();\n\t    if (this.childWatcher) {\n\t      this.childWatcher.teardown();\n\t    }\n\t  }\n\t};\n\t\n\tvar component = {\n\t\n\t  priority: COMPONENT,\n\t\n\t  params: ['keep-alive', 'transition-mode', 'inline-template'],\n\t\n\t  /**\n\t   * Setup. Two possible usages:\n\t   *\n\t   * - static:\n\t   *   <comp> or <div v-component=\"comp\">\n\t   *\n\t   * - dynamic:\n\t   *   <component :is=\"view\">\n\t   */\n\t\n\t  bind: function bind() {\n\t    if (!this.el.__vue__) {\n\t      // keep-alive cache\n\t      this.keepAlive = this.params.keepAlive;\n\t      if (this.keepAlive) {\n\t        this.cache = {};\n\t      }\n\t      // check inline-template\n\t      if (this.params.inlineTemplate) {\n\t        // extract inline template as a DocumentFragment\n\t        this.inlineTemplate = extractContent(this.el, true);\n\t      }\n\t      // component resolution related state\n\t      this.pendingComponentCb = this.Component = null;\n\t      // transition related state\n\t      this.pendingRemovals = 0;\n\t      this.pendingRemovalCb = null;\n\t      // create a ref anchor\n\t      this.anchor = createAnchor('v-component');\n\t      replace(this.el, this.anchor);\n\t      // remove is attribute.\n\t      // this is removed during compilation, but because compilation is\n\t      // cached, when the component is used elsewhere this attribute\n\t      // will remain at link time.\n\t      this.el.removeAttribute('is');\n\t      // remove ref, same as above\n\t      if (this.descriptor.ref) {\n\t        this.el.removeAttribute('v-ref:' + hyphenate(this.descriptor.ref));\n\t      }\n\t      // if static, build right now.\n\t      if (this.literal) {\n\t        this.setComponent(this.expression);\n\t      }\n\t    } else {\n\t      (\"production\") !== 'production' && warn('cannot mount component \"' + this.expression + '\" ' + 'on already mounted element: ' + this.el);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Public update, called by the watcher in the dynamic\n\t   * literal scenario, e.g. <component :is=\"view\">\n\t   */\n\t\n\t  update: function update(value) {\n\t    if (!this.literal) {\n\t      this.setComponent(value);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Switch dynamic components. May resolve the component\n\t   * asynchronously, and perform transition based on\n\t   * specified transition mode. Accepts a few additional\n\t   * arguments specifically for vue-router.\n\t   *\n\t   * The callback is called when the full transition is\n\t   * finished.\n\t   *\n\t   * @param {String} value\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  setComponent: function setComponent(value, cb) {\n\t    this.invalidatePending();\n\t    if (!value) {\n\t      // just remove current\n\t      this.unbuild(true);\n\t      this.remove(this.childVM, cb);\n\t      this.childVM = null;\n\t    } else {\n\t      var self = this;\n\t      this.resolveComponent(value, function () {\n\t        self.mountComponent(cb);\n\t      });\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Resolve the component constructor to use when creating\n\t   * the child vm.\n\t   */\n\t\n\t  resolveComponent: function resolveComponent(id, cb) {\n\t    var self = this;\n\t    this.pendingComponentCb = cancellable(function (Component) {\n\t      self.ComponentName = Component.options.name || id;\n\t      self.Component = Component;\n\t      cb();\n\t    });\n\t    this.vm._resolveComponent(id, this.pendingComponentCb);\n\t  },\n\t\n\t  /**\n\t   * Create a new instance using the current constructor and\n\t   * replace the existing instance. This method doesn't care\n\t   * whether the new component and the old one are actually\n\t   * the same.\n\t   *\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  mountComponent: function mountComponent(cb) {\n\t    // actual mount\n\t    this.unbuild(true);\n\t    var self = this;\n\t    var activateHook = this.Component.options.activate;\n\t    var cached = this.getCached();\n\t    var newComponent = this.build();\n\t    if (activateHook && !cached) {\n\t      this.waitingFor = newComponent;\n\t      activateHook.call(newComponent, function () {\n\t        if (self.waitingFor !== newComponent) {\n\t          return;\n\t        }\n\t        self.waitingFor = null;\n\t        self.transition(newComponent, cb);\n\t      });\n\t    } else {\n\t      // update ref for kept-alive component\n\t      if (cached) {\n\t        newComponent._updateRef();\n\t      }\n\t      this.transition(newComponent, cb);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * When the component changes or unbinds before an async\n\t   * constructor is resolved, we need to invalidate its\n\t   * pending callback.\n\t   */\n\t\n\t  invalidatePending: function invalidatePending() {\n\t    if (this.pendingComponentCb) {\n\t      this.pendingComponentCb.cancel();\n\t      this.pendingComponentCb = null;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Instantiate/insert a new child vm.\n\t   * If keep alive and has cached instance, insert that\n\t   * instance; otherwise build a new one and cache it.\n\t   *\n\t   * @param {Object} [extraOptions]\n\t   * @return {Vue} - the created instance\n\t   */\n\t\n\t  build: function build(extraOptions) {\n\t    var cached = this.getCached();\n\t    if (cached) {\n\t      return cached;\n\t    }\n\t    if (this.Component) {\n\t      // default options\n\t      var options = {\n\t        name: this.ComponentName,\n\t        el: cloneNode(this.el),\n\t        template: this.inlineTemplate,\n\t        // make sure to add the child with correct parent\n\t        // if this is a transcluded component, its parent\n\t        // should be the transclusion host.\n\t        parent: this._host || this.vm,\n\t        // if no inline-template, then the compiled\n\t        // linker can be cached for better performance.\n\t        _linkerCachable: !this.inlineTemplate,\n\t        _ref: this.descriptor.ref,\n\t        _asComponent: true,\n\t        _isRouterView: this._isRouterView,\n\t        // if this is a transcluded component, context\n\t        // will be the common parent vm of this instance\n\t        // and its host.\n\t        _context: this.vm,\n\t        // if this is inside an inline v-for, the scope\n\t        // will be the intermediate scope created for this\n\t        // repeat fragment. this is used for linking props\n\t        // and container directives.\n\t        _scope: this._scope,\n\t        // pass in the owner fragment of this component.\n\t        // this is necessary so that the fragment can keep\n\t        // track of its contained components in order to\n\t        // call attach/detach hooks for them.\n\t        _frag: this._frag\n\t      };\n\t      // extra options\n\t      // in 1.0.0 this is used by vue-router only\n\t      /* istanbul ignore if */\n\t      if (extraOptions) {\n\t        extend(options, extraOptions);\n\t      }\n\t      var child = new this.Component(options);\n\t      if (this.keepAlive) {\n\t        this.cache[this.Component.cid] = child;\n\t      }\n\t      /* istanbul ignore if */\n\t      if (false) {\n\t        warn('Transitions will not work on a fragment instance. ' + 'Template: ' + child.$options.template);\n\t      }\n\t      return child;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Try to get a cached instance of the current component.\n\t   *\n\t   * @return {Vue|undefined}\n\t   */\n\t\n\t  getCached: function getCached() {\n\t    return this.keepAlive && this.cache[this.Component.cid];\n\t  },\n\t\n\t  /**\n\t   * Teardown the current child, but defers cleanup so\n\t   * that we can separate the destroy and removal steps.\n\t   *\n\t   * @param {Boolean} defer\n\t   */\n\t\n\t  unbuild: function unbuild(defer) {\n\t    if (this.waitingFor) {\n\t      this.waitingFor.$destroy();\n\t      this.waitingFor = null;\n\t    }\n\t    var child = this.childVM;\n\t    if (!child || this.keepAlive) {\n\t      if (child) {\n\t        // remove ref\n\t        child._updateRef(true);\n\t      }\n\t      return;\n\t    }\n\t    // the sole purpose of `deferCleanup` is so that we can\n\t    // \"deactivate\" the vm right now and perform DOM removal\n\t    // later.\n\t    child.$destroy(false, defer);\n\t  },\n\t\n\t  /**\n\t   * Remove current destroyed child and manually do\n\t   * the cleanup after removal.\n\t   *\n\t   * @param {Function} cb\n\t   */\n\t\n\t  remove: function remove(child, cb) {\n\t    var keepAlive = this.keepAlive;\n\t    if (child) {\n\t      // we may have a component switch when a previous\n\t      // component is still being transitioned out.\n\t      // we want to trigger only one lastest insertion cb\n\t      // when the existing transition finishes. (#1119)\n\t      this.pendingRemovals++;\n\t      this.pendingRemovalCb = cb;\n\t      var self = this;\n\t      child.$remove(function () {\n\t        self.pendingRemovals--;\n\t        if (!keepAlive) child._cleanup();\n\t        if (!self.pendingRemovals && self.pendingRemovalCb) {\n\t          self.pendingRemovalCb();\n\t          self.pendingRemovalCb = null;\n\t        }\n\t      });\n\t    } else if (cb) {\n\t      cb();\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Actually swap the components, depending on the\n\t   * transition mode. Defaults to simultaneous.\n\t   *\n\t   * @param {Vue} target\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  transition: function transition(target, cb) {\n\t    var self = this;\n\t    var current = this.childVM;\n\t    // for devtool inspection\n\t    if (false) {\n\t      if (current) current._inactive = true;\n\t      target._inactive = false;\n\t    }\n\t    this.childVM = target;\n\t    switch (self.params.transitionMode) {\n\t      case 'in-out':\n\t        target.$before(self.anchor, function () {\n\t          self.remove(current, cb);\n\t        });\n\t        break;\n\t      case 'out-in':\n\t        self.remove(current, function () {\n\t          target.$before(self.anchor, cb);\n\t        });\n\t        break;\n\t      default:\n\t        self.remove(current);\n\t        target.$before(self.anchor, cb);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Unbind.\n\t   */\n\t\n\t  unbind: function unbind() {\n\t    this.invalidatePending();\n\t    // Do not defer cleanup when unbinding\n\t    this.unbuild();\n\t    // destroy all keep-alive cached instances\n\t    if (this.cache) {\n\t      for (var key in this.cache) {\n\t        this.cache[key].$destroy();\n\t      }\n\t      this.cache = null;\n\t    }\n\t  }\n\t};\n\t\n\tvar vClass = {\n\t\n\t  deep: true,\n\t\n\t  update: function update(value) {\n\t    if (value && typeof value === 'string') {\n\t      this.handleObject(stringToObject(value));\n\t    } else if (isPlainObject(value)) {\n\t      this.handleObject(value);\n\t    } else if (isArray(value)) {\n\t      this.handleArray(value);\n\t    } else {\n\t      this.cleanup();\n\t    }\n\t  },\n\t\n\t  handleObject: function handleObject(value) {\n\t    this.cleanup(value);\n\t    var keys = this.prevKeys = Object.keys(value);\n\t    for (var i = 0, l = keys.length; i < l; i++) {\n\t      var key = keys[i];\n\t      if (value[key]) {\n\t        addClass(this.el, key);\n\t      } else {\n\t        removeClass(this.el, key);\n\t      }\n\t    }\n\t  },\n\t\n\t  handleArray: function handleArray(value) {\n\t    this.cleanup(value);\n\t    for (var i = 0, l = value.length; i < l; i++) {\n\t      if (value[i]) {\n\t        addClass(this.el, value[i]);\n\t      }\n\t    }\n\t    this.prevKeys = value.slice();\n\t  },\n\t\n\t  cleanup: function cleanup(value) {\n\t    if (this.prevKeys) {\n\t      var i = this.prevKeys.length;\n\t      while (i--) {\n\t        var key = this.prevKeys[i];\n\t        if (key && (!value || !contains$1(value, key))) {\n\t          removeClass(this.el, key);\n\t        }\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\tfunction stringToObject(value) {\n\t  var res = {};\n\t  var keys = value.trim().split(/\\s+/);\n\t  var i = keys.length;\n\t  while (i--) {\n\t    res[keys[i]] = true;\n\t  }\n\t  return res;\n\t}\n\t\n\tfunction contains$1(value, key) {\n\t  return isArray(value) ? value.indexOf(key) > -1 : hasOwn(value, key);\n\t}\n\t\n\tvar internalDirectives = {\n\t  style: style,\n\t  'class': vClass,\n\t  component: component,\n\t  prop: propDef,\n\t  transition: transition\n\t};\n\t\n\tvar propBindingModes = config._propBindingModes;\n\tvar empty = {};\n\t\n\t// regexes\n\tvar identRE$1 = /^[$_a-zA-Z]+[\\w$]*$/;\n\tvar settablePathRE = /^[A-Za-z_$][\\w$]*(\\.[A-Za-z_$][\\w$]*|\\[[^\\[\\]]+\\])*$/;\n\t\n\t/**\n\t * Compile props on a root element and return\n\t * a props link function.\n\t *\n\t * @param {Element|DocumentFragment} el\n\t * @param {Array} propOptions\n\t * @return {Function} propsLinkFn\n\t */\n\t\n\tfunction compileProps(el, propOptions) {\n\t  var props = [];\n\t  var names = Object.keys(propOptions);\n\t  var i = names.length;\n\t  var options, name, attr, value, path, parsed, prop;\n\t  while (i--) {\n\t    name = names[i];\n\t    options = propOptions[name] || empty;\n\t\n\t    if (false) {\n\t      warn('Do not use $data as prop.');\n\t      continue;\n\t    }\n\t\n\t    // props could contain dashes, which will be\n\t    // interpreted as minus calculations by the parser\n\t    // so we need to camelize the path here\n\t    path = camelize(name);\n\t    if (!identRE$1.test(path)) {\n\t      (\"production\") !== 'production' && warn('Invalid prop key: \"' + name + '\". Prop keys ' + 'must be valid identifiers.');\n\t      continue;\n\t    }\n\t\n\t    prop = {\n\t      name: name,\n\t      path: path,\n\t      options: options,\n\t      mode: propBindingModes.ONE_WAY,\n\t      raw: null\n\t    };\n\t\n\t    attr = hyphenate(name);\n\t    // first check dynamic version\n\t    if ((value = getBindAttr(el, attr)) === null) {\n\t      if ((value = getBindAttr(el, attr + '.sync')) !== null) {\n\t        prop.mode = propBindingModes.TWO_WAY;\n\t      } else if ((value = getBindAttr(el, attr + '.once')) !== null) {\n\t        prop.mode = propBindingModes.ONE_TIME;\n\t      }\n\t    }\n\t    if (value !== null) {\n\t      // has dynamic binding!\n\t      prop.raw = value;\n\t      parsed = parseDirective(value);\n\t      value = parsed.expression;\n\t      prop.filters = parsed.filters;\n\t      // check binding type\n\t      if (isLiteral(value) && !parsed.filters) {\n\t        // for expressions containing literal numbers and\n\t        // booleans, there's no need to setup a prop binding,\n\t        // so we can optimize them as a one-time set.\n\t        prop.optimizedLiteral = true;\n\t      } else {\n\t        prop.dynamic = true;\n\t        // check non-settable path for two-way bindings\n\t        if (false) {\n\t          prop.mode = propBindingModes.ONE_WAY;\n\t          warn('Cannot bind two-way prop with non-settable ' + 'parent path: ' + value);\n\t        }\n\t      }\n\t      prop.parentPath = value;\n\t\n\t      // warn required two-way\n\t      if (false) {\n\t        warn('Prop \"' + name + '\" expects a two-way binding type.');\n\t      }\n\t    } else if ((value = getAttr(el, attr)) !== null) {\n\t      // has literal binding!\n\t      prop.raw = value;\n\t    } else if (options.required) {\n\t      // warn missing required\n\t      (\"production\") !== 'production' && warn('Missing required prop: ' + name);\n\t    }\n\t    // push prop\n\t    props.push(prop);\n\t  }\n\t  return makePropsLinkFn(props);\n\t}\n\t\n\t/**\n\t * Build a function that applies props to a vm.\n\t *\n\t * @param {Array} props\n\t * @return {Function} propsLinkFn\n\t */\n\t\n\tfunction makePropsLinkFn(props) {\n\t  return function propsLinkFn(vm, scope) {\n\t    // store resolved props info\n\t    vm._props = {};\n\t    var i = props.length;\n\t    var prop, path, options, value, raw;\n\t    while (i--) {\n\t      prop = props[i];\n\t      raw = prop.raw;\n\t      path = prop.path;\n\t      options = prop.options;\n\t      vm._props[path] = prop;\n\t      if (raw === null) {\n\t        // initialize absent prop\n\t        initProp(vm, prop, getDefault(vm, options));\n\t      } else if (prop.dynamic) {\n\t        // dynamic prop\n\t        if (vm._context) {\n\t          if (prop.mode === propBindingModes.ONE_TIME) {\n\t            // one time binding\n\t            value = (scope || vm._context).$get(prop.parentPath);\n\t            initProp(vm, prop, value);\n\t          } else {\n\t            // dynamic binding\n\t            vm._bindDir({\n\t              name: 'prop',\n\t              def: propDef,\n\t              prop: prop\n\t            }, null, null, scope); // el, host, scope\n\t          }\n\t        } else {\n\t            (\"production\") !== 'production' && warn('Cannot bind dynamic prop on a root instance' + ' with no parent: ' + prop.name + '=\"' + raw + '\"');\n\t          }\n\t      } else if (prop.optimizedLiteral) {\n\t        // optimized literal, cast it and just set once\n\t        var stripped = stripQuotes(raw);\n\t        value = stripped === raw ? toBoolean(toNumber(raw)) : stripped;\n\t        initProp(vm, prop, value);\n\t      } else {\n\t        // string literal, but we need to cater for\n\t        // Boolean props with no value\n\t        value = options.type === Boolean && raw === '' ? true : raw;\n\t        initProp(vm, prop, value);\n\t      }\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Get the default value of a prop.\n\t *\n\t * @param {Vue} vm\n\t * @param {Object} options\n\t * @return {*}\n\t */\n\t\n\tfunction getDefault(vm, options) {\n\t  // no default, return undefined\n\t  if (!hasOwn(options, 'default')) {\n\t    // absent boolean value defaults to false\n\t    return options.type === Boolean ? false : undefined;\n\t  }\n\t  var def = options['default'];\n\t  // warn against non-factory defaults for Object & Array\n\t  if (isObject(def)) {\n\t    (\"production\") !== 'production' && warn('Object/Array as default prop values will be shared ' + 'across multiple instances. Use a factory function ' + 'to return the default value instead.');\n\t  }\n\t  // call factory function for non-Function types\n\t  return typeof def === 'function' && options.type !== Function ? def.call(vm) : def;\n\t}\n\t\n\t// special binding prefixes\n\tvar bindRE = /^v-bind:|^:/;\n\tvar onRE = /^v-on:|^@/;\n\tvar argRE = /:(.*)$/;\n\tvar modifierRE = /\\.[^\\.]+/g;\n\tvar transitionRE = /^(v-bind:|:)?transition$/;\n\t\n\t// terminal directives\n\tvar terminalDirectives = ['for', 'if'];\n\t\n\t// default directive priority\n\tvar DEFAULT_PRIORITY = 1000;\n\t\n\t/**\n\t * Compile a template and return a reusable composite link\n\t * function, which recursively contains more link functions\n\t * inside. This top level compile function would normally\n\t * be called on instance root nodes, but can also be used\n\t * for partial compilation if the partial argument is true.\n\t *\n\t * The returned composite link function, when called, will\n\t * return an unlink function that tearsdown all directives\n\t * created during the linking phase.\n\t *\n\t * @param {Element|DocumentFragment} el\n\t * @param {Object} options\n\t * @param {Boolean} partial\n\t * @return {Function}\n\t */\n\t\n\tfunction compile(el, options, partial) {\n\t  // link function for the node itself.\n\t  var nodeLinkFn = partial || !options._asComponent ? compileNode(el, options) : null;\n\t  // link function for the childNodes\n\t  var childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && el.tagName !== 'SCRIPT' && el.hasChildNodes() ? compileNodeList(el.childNodes, options) : null;\n\t\n\t  /**\n\t   * A composite linker function to be called on a already\n\t   * compiled piece of DOM, which instantiates all directive\n\t   * instances.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {Element|DocumentFragment} el\n\t   * @param {Vue} [host] - host vm of transcluded content\n\t   * @param {Object} [scope] - v-for scope\n\t   * @param {Fragment} [frag] - link context fragment\n\t   * @return {Function|undefined}\n\t   */\n\t\n\t  return function compositeLinkFn(vm, el, host, scope, frag) {\n\t    // cache childNodes before linking parent, fix #657\n\t    var childNodes = toArray(el.childNodes);\n\t    // link\n\t    var dirs = linkAndCapture(function compositeLinkCapturer() {\n\t      if (nodeLinkFn) nodeLinkFn(vm, el, host, scope, frag);\n\t      if (childLinkFn) childLinkFn(vm, childNodes, host, scope, frag);\n\t    }, vm);\n\t    return makeUnlinkFn(vm, dirs);\n\t  };\n\t}\n\t\n\t/**\n\t * Apply a linker to a vm/element pair and capture the\n\t * directives created during the process.\n\t *\n\t * @param {Function} linker\n\t * @param {Vue} vm\n\t */\n\t\n\tfunction linkAndCapture(linker, vm) {\n\t  var originalDirCount = vm._directives.length;\n\t  linker();\n\t  var dirs = vm._directives.slice(originalDirCount);\n\t  dirs.sort(directiveComparator);\n\t  for (var i = 0, l = dirs.length; i < l; i++) {\n\t    dirs[i]._bind();\n\t  }\n\t  return dirs;\n\t}\n\t\n\t/**\n\t * Directive priority sort comparator\n\t *\n\t * @param {Object} a\n\t * @param {Object} b\n\t */\n\t\n\tfunction directiveComparator(a, b) {\n\t  a = a.descriptor.def.priority || DEFAULT_PRIORITY;\n\t  b = b.descriptor.def.priority || DEFAULT_PRIORITY;\n\t  return a > b ? -1 : a === b ? 0 : 1;\n\t}\n\t\n\t/**\n\t * Linker functions return an unlink function that\n\t * tearsdown all directives instances generated during\n\t * the process.\n\t *\n\t * We create unlink functions with only the necessary\n\t * information to avoid retaining additional closures.\n\t *\n\t * @param {Vue} vm\n\t * @param {Array} dirs\n\t * @param {Vue} [context]\n\t * @param {Array} [contextDirs]\n\t * @return {Function}\n\t */\n\t\n\tfunction makeUnlinkFn(vm, dirs, context, contextDirs) {\n\t  function unlink(destroying) {\n\t    teardownDirs(vm, dirs, destroying);\n\t    if (context && contextDirs) {\n\t      teardownDirs(context, contextDirs);\n\t    }\n\t  }\n\t  // expose linked directives\n\t  unlink.dirs = dirs;\n\t  return unlink;\n\t}\n\t\n\t/**\n\t * Teardown partial linked directives.\n\t *\n\t * @param {Vue} vm\n\t * @param {Array} dirs\n\t * @param {Boolean} destroying\n\t */\n\t\n\tfunction teardownDirs(vm, dirs, destroying) {\n\t  var i = dirs.length;\n\t  while (i--) {\n\t    dirs[i]._teardown();\n\t    if (!destroying) {\n\t      vm._directives.$remove(dirs[i]);\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Compile link props on an instance.\n\t *\n\t * @param {Vue} vm\n\t * @param {Element} el\n\t * @param {Object} props\n\t * @param {Object} [scope]\n\t * @return {Function}\n\t */\n\t\n\tfunction compileAndLinkProps(vm, el, props, scope) {\n\t  var propsLinkFn = compileProps(el, props);\n\t  var propDirs = linkAndCapture(function () {\n\t    propsLinkFn(vm, scope);\n\t  }, vm);\n\t  return makeUnlinkFn(vm, propDirs);\n\t}\n\t\n\t/**\n\t * Compile the root element of an instance.\n\t *\n\t * 1. attrs on context container (context scope)\n\t * 2. attrs on the component template root node, if\n\t *    replace:true (child scope)\n\t *\n\t * If this is a fragment instance, we only need to compile 1.\n\t *\n\t * @param {Vue} vm\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @param {Object} contextOptions\n\t * @return {Function}\n\t */\n\t\n\tfunction compileRoot(el, options, contextOptions) {\n\t  var containerAttrs = options._containerAttrs;\n\t  var replacerAttrs = options._replacerAttrs;\n\t  var contextLinkFn, replacerLinkFn;\n\t\n\t  // only need to compile other attributes for\n\t  // non-fragment instances\n\t  if (el.nodeType !== 11) {\n\t    // for components, container and replacer need to be\n\t    // compiled separately and linked in different scopes.\n\t    if (options._asComponent) {\n\t      // 2. container attributes\n\t      if (containerAttrs && contextOptions) {\n\t        contextLinkFn = compileDirectives(containerAttrs, contextOptions);\n\t      }\n\t      if (replacerAttrs) {\n\t        // 3. replacer attributes\n\t        replacerLinkFn = compileDirectives(replacerAttrs, options);\n\t      }\n\t    } else {\n\t      // non-component, just compile as a normal element.\n\t      replacerLinkFn = compileDirectives(el.attributes, options);\n\t    }\n\t  } else if (false) {\n\t    // warn container directives for fragment instances\n\t    var names = containerAttrs.filter(function (attr) {\n\t      // allow vue-loader/vueify scoped css attributes\n\t      return attr.name.indexOf('_v-') < 0 &&\n\t      // allow event listeners\n\t      !onRE.test(attr.name) &&\n\t      // allow slots\n\t      attr.name !== 'slot';\n\t    }).map(function (attr) {\n\t      return '\"' + attr.name + '\"';\n\t    });\n\t    if (names.length) {\n\t      var plural = names.length > 1;\n\t      warn('Attribute' + (plural ? 's ' : ' ') + names.join(', ') + (plural ? ' are' : ' is') + ' ignored on component ' + '<' + options.el.tagName.toLowerCase() + '> because ' + 'the component is a fragment instance: ' + 'http://vuejs.org/guide/components.html#Fragment_Instance');\n\t    }\n\t  }\n\t\n\t  options._containerAttrs = options._replacerAttrs = null;\n\t  return function rootLinkFn(vm, el, scope) {\n\t    // link context scope dirs\n\t    var context = vm._context;\n\t    var contextDirs;\n\t    if (context && contextLinkFn) {\n\t      contextDirs = linkAndCapture(function () {\n\t        contextLinkFn(context, el, null, scope);\n\t      }, context);\n\t    }\n\t\n\t    // link self\n\t    var selfDirs = linkAndCapture(function () {\n\t      if (replacerLinkFn) replacerLinkFn(vm, el);\n\t    }, vm);\n\t\n\t    // return the unlink function that tearsdown context\n\t    // container directives.\n\t    return makeUnlinkFn(vm, selfDirs, context, contextDirs);\n\t  };\n\t}\n\t\n\t/**\n\t * Compile a node and return a nodeLinkFn based on the\n\t * node type.\n\t *\n\t * @param {Node} node\n\t * @param {Object} options\n\t * @return {Function|null}\n\t */\n\t\n\tfunction compileNode(node, options) {\n\t  var type = node.nodeType;\n\t  if (type === 1 && node.tagName !== 'SCRIPT') {\n\t    return compileElement(node, options);\n\t  } else if (type === 3 && node.data.trim()) {\n\t    return compileTextNode(node, options);\n\t  } else {\n\t    return null;\n\t  }\n\t}\n\t\n\t/**\n\t * Compile an element and return a nodeLinkFn.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Function|null}\n\t */\n\t\n\tfunction compileElement(el, options) {\n\t  // preprocess textareas.\n\t  // textarea treats its text content as the initial value.\n\t  // just bind it as an attr directive for value.\n\t  if (el.tagName === 'TEXTAREA') {\n\t    var tokens = parseText(el.value);\n\t    if (tokens) {\n\t      el.setAttribute(':value', tokensToExp(tokens));\n\t      el.value = '';\n\t    }\n\t  }\n\t  var linkFn;\n\t  var hasAttrs = el.hasAttributes();\n\t  // check terminal directives (for & if)\n\t  if (hasAttrs) {\n\t    linkFn = checkTerminalDirectives(el, options);\n\t  }\n\t  // check element directives\n\t  if (!linkFn) {\n\t    linkFn = checkElementDirectives(el, options);\n\t  }\n\t  // check component\n\t  if (!linkFn) {\n\t    linkFn = checkComponent(el, options);\n\t  }\n\t  // normal directives\n\t  if (!linkFn && hasAttrs) {\n\t    linkFn = compileDirectives(el.attributes, options);\n\t  }\n\t  return linkFn;\n\t}\n\t\n\t/**\n\t * Compile a textNode and return a nodeLinkFn.\n\t *\n\t * @param {TextNode} node\n\t * @param {Object} options\n\t * @return {Function|null} textNodeLinkFn\n\t */\n\t\n\tfunction compileTextNode(node, options) {\n\t  // skip marked text nodes\n\t  if (node._skip) {\n\t    return removeText;\n\t  }\n\t\n\t  var tokens = parseText(node.wholeText);\n\t  if (!tokens) {\n\t    return null;\n\t  }\n\t\n\t  // mark adjacent text nodes as skipped,\n\t  // because we are using node.wholeText to compile\n\t  // all adjacent text nodes together. This fixes\n\t  // issues in IE where sometimes it splits up a single\n\t  // text node into multiple ones.\n\t  var next = node.nextSibling;\n\t  while (next && next.nodeType === 3) {\n\t    next._skip = true;\n\t    next = next.nextSibling;\n\t  }\n\t\n\t  var frag = document.createDocumentFragment();\n\t  var el, token;\n\t  for (var i = 0, l = tokens.length; i < l; i++) {\n\t    token = tokens[i];\n\t    el = token.tag ? processTextToken(token, options) : document.createTextNode(token.value);\n\t    frag.appendChild(el);\n\t  }\n\t  return makeTextNodeLinkFn(tokens, frag, options);\n\t}\n\t\n\t/**\n\t * Linker for an skipped text node.\n\t *\n\t * @param {Vue} vm\n\t * @param {Text} node\n\t */\n\t\n\tfunction removeText(vm, node) {\n\t  remove(node);\n\t}\n\t\n\t/**\n\t * Process a single text token.\n\t *\n\t * @param {Object} token\n\t * @param {Object} options\n\t * @return {Node}\n\t */\n\t\n\tfunction processTextToken(token, options) {\n\t  var el;\n\t  if (token.oneTime) {\n\t    el = document.createTextNode(token.value);\n\t  } else {\n\t    if (token.html) {\n\t      el = document.createComment('v-html');\n\t      setTokenType('html');\n\t    } else {\n\t      // IE will clean up empty textNodes during\n\t      // frag.cloneNode(true), so we have to give it\n\t      // something here...\n\t      el = document.createTextNode(' ');\n\t      setTokenType('text');\n\t    }\n\t  }\n\t  function setTokenType(type) {\n\t    if (token.descriptor) return;\n\t    var parsed = parseDirective(token.value);\n\t    token.descriptor = {\n\t      name: type,\n\t      def: publicDirectives[type],\n\t      expression: parsed.expression,\n\t      filters: parsed.filters\n\t    };\n\t  }\n\t  return el;\n\t}\n\t\n\t/**\n\t * Build a function that processes a textNode.\n\t *\n\t * @param {Array<Object>} tokens\n\t * @param {DocumentFragment} frag\n\t */\n\t\n\tfunction makeTextNodeLinkFn(tokens, frag) {\n\t  return function textNodeLinkFn(vm, el, host, scope) {\n\t    var fragClone = frag.cloneNode(true);\n\t    var childNodes = toArray(fragClone.childNodes);\n\t    var token, value, node;\n\t    for (var i = 0, l = tokens.length; i < l; i++) {\n\t      token = tokens[i];\n\t      value = token.value;\n\t      if (token.tag) {\n\t        node = childNodes[i];\n\t        if (token.oneTime) {\n\t          value = (scope || vm).$eval(value);\n\t          if (token.html) {\n\t            replace(node, parseTemplate(value, true));\n\t          } else {\n\t            node.data = value;\n\t          }\n\t        } else {\n\t          vm._bindDir(token.descriptor, node, host, scope);\n\t        }\n\t      }\n\t    }\n\t    replace(el, fragClone);\n\t  };\n\t}\n\t\n\t/**\n\t * Compile a node list and return a childLinkFn.\n\t *\n\t * @param {NodeList} nodeList\n\t * @param {Object} options\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction compileNodeList(nodeList, options) {\n\t  var linkFns = [];\n\t  var nodeLinkFn, childLinkFn, node;\n\t  for (var i = 0, l = nodeList.length; i < l; i++) {\n\t    node = nodeList[i];\n\t    nodeLinkFn = compileNode(node, options);\n\t    childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && node.tagName !== 'SCRIPT' && node.hasChildNodes() ? compileNodeList(node.childNodes, options) : null;\n\t    linkFns.push(nodeLinkFn, childLinkFn);\n\t  }\n\t  return linkFns.length ? makeChildLinkFn(linkFns) : null;\n\t}\n\t\n\t/**\n\t * Make a child link function for a node's childNodes.\n\t *\n\t * @param {Array<Function>} linkFns\n\t * @return {Function} childLinkFn\n\t */\n\t\n\tfunction makeChildLinkFn(linkFns) {\n\t  return function childLinkFn(vm, nodes, host, scope, frag) {\n\t    var node, nodeLinkFn, childrenLinkFn;\n\t    for (var i = 0, n = 0, l = linkFns.length; i < l; n++) {\n\t      node = nodes[n];\n\t      nodeLinkFn = linkFns[i++];\n\t      childrenLinkFn = linkFns[i++];\n\t      // cache childNodes before linking parent, fix #657\n\t      var childNodes = toArray(node.childNodes);\n\t      if (nodeLinkFn) {\n\t        nodeLinkFn(vm, node, host, scope, frag);\n\t      }\n\t      if (childrenLinkFn) {\n\t        childrenLinkFn(vm, childNodes, host, scope, frag);\n\t      }\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Check for element directives (custom elements that should\n\t * be resovled as terminal directives).\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t */\n\t\n\tfunction checkElementDirectives(el, options) {\n\t  var tag = el.tagName.toLowerCase();\n\t  if (commonTagRE.test(tag)) return;\n\t  // special case: give named slot a higher priority\n\t  // than unnamed slots\n\t  if (tag === 'slot' && hasBindAttr(el, 'name')) {\n\t    tag = '_namedSlot';\n\t  }\n\t  var def = resolveAsset(options, 'elementDirectives', tag);\n\t  if (def) {\n\t    return makeTerminalNodeLinkFn(el, tag, '', options, def);\n\t  }\n\t}\n\t\n\t/**\n\t * Check if an element is a component. If yes, return\n\t * a component link function.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction checkComponent(el, options) {\n\t  var component = checkComponentAttr(el, options);\n\t  if (component) {\n\t    var ref = findRef(el);\n\t    var descriptor = {\n\t      name: 'component',\n\t      ref: ref,\n\t      expression: component.id,\n\t      def: internalDirectives.component,\n\t      modifiers: {\n\t        literal: !component.dynamic\n\t      }\n\t    };\n\t    var componentLinkFn = function componentLinkFn(vm, el, host, scope, frag) {\n\t      if (ref) {\n\t        defineReactive((scope || vm).$refs, ref, null);\n\t      }\n\t      vm._bindDir(descriptor, el, host, scope, frag);\n\t    };\n\t    componentLinkFn.terminal = true;\n\t    return componentLinkFn;\n\t  }\n\t}\n\t\n\t/**\n\t * Check an element for terminal directives in fixed order.\n\t * If it finds one, return a terminal link function.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Function} terminalLinkFn\n\t */\n\t\n\tfunction checkTerminalDirectives(el, options) {\n\t  // skip v-pre\n\t  if (getAttr(el, 'v-pre') !== null) {\n\t    return skip;\n\t  }\n\t  // skip v-else block, but only if following v-if\n\t  if (el.hasAttribute('v-else')) {\n\t    var prev = el.previousElementSibling;\n\t    if (prev && prev.hasAttribute('v-if')) {\n\t      return skip;\n\t    }\n\t  }\n\t  var value, dirName;\n\t  for (var i = 0, l = terminalDirectives.length; i < l; i++) {\n\t    dirName = terminalDirectives[i];\n\t    value = el.getAttribute('v-' + dirName);\n\t    if (value != null) {\n\t      return makeTerminalNodeLinkFn(el, dirName, value, options);\n\t    }\n\t  }\n\t}\n\t\n\tfunction skip() {}\n\tskip.terminal = true;\n\t\n\t/**\n\t * Build a node link function for a terminal directive.\n\t * A terminal link function terminates the current\n\t * compilation recursion and handles compilation of the\n\t * subtree in the directive.\n\t *\n\t * @param {Element} el\n\t * @param {String} dirName\n\t * @param {String} value\n\t * @param {Object} options\n\t * @param {Object} [def]\n\t * @return {Function} terminalLinkFn\n\t */\n\t\n\tfunction makeTerminalNodeLinkFn(el, dirName, value, options, def) {\n\t  var parsed = parseDirective(value);\n\t  var descriptor = {\n\t    name: dirName,\n\t    expression: parsed.expression,\n\t    filters: parsed.filters,\n\t    raw: value,\n\t    // either an element directive, or if/for\n\t    def: def || publicDirectives[dirName]\n\t  };\n\t  // check ref for v-for and router-view\n\t  if (dirName === 'for' || dirName === 'router-view') {\n\t    descriptor.ref = findRef(el);\n\t  }\n\t  var fn = function terminalNodeLinkFn(vm, el, host, scope, frag) {\n\t    if (descriptor.ref) {\n\t      defineReactive((scope || vm).$refs, descriptor.ref, null);\n\t    }\n\t    vm._bindDir(descriptor, el, host, scope, frag);\n\t  };\n\t  fn.terminal = true;\n\t  return fn;\n\t}\n\t\n\t/**\n\t * Compile the directives on an element and return a linker.\n\t *\n\t * @param {Array|NamedNodeMap} attrs\n\t * @param {Object} options\n\t * @return {Function}\n\t */\n\t\n\tfunction compileDirectives(attrs, options) {\n\t  var i = attrs.length;\n\t  var dirs = [];\n\t  var attr, name, value, rawName, rawValue, dirName, arg, modifiers, dirDef, tokens;\n\t  while (i--) {\n\t    attr = attrs[i];\n\t    name = rawName = attr.name;\n\t    value = rawValue = attr.value;\n\t    tokens = parseText(value);\n\t    // reset arg\n\t    arg = null;\n\t    // check modifiers\n\t    modifiers = parseModifiers(name);\n\t    name = name.replace(modifierRE, '');\n\t\n\t    // attribute interpolations\n\t    if (tokens) {\n\t      value = tokensToExp(tokens);\n\t      arg = name;\n\t      pushDir('bind', publicDirectives.bind, tokens);\n\t      // warn against mixing mustaches with v-bind\n\t      if (false) {\n\t        if (name === 'class' && Array.prototype.some.call(attrs, function (attr) {\n\t          return attr.name === ':class' || attr.name === 'v-bind:class';\n\t        })) {\n\t          warn('class=\"' + rawValue + '\": Do not mix mustache interpolation ' + 'and v-bind for \"class\" on the same element. Use one or the other.');\n\t        }\n\t      }\n\t    } else\n\t\n\t      // special attribute: transition\n\t      if (transitionRE.test(name)) {\n\t        modifiers.literal = !bindRE.test(name);\n\t        pushDir('transition', internalDirectives.transition);\n\t      } else\n\t\n\t        // event handlers\n\t        if (onRE.test(name)) {\n\t          arg = name.replace(onRE, '');\n\t          pushDir('on', publicDirectives.on);\n\t        } else\n\t\n\t          // attribute bindings\n\t          if (bindRE.test(name)) {\n\t            dirName = name.replace(bindRE, '');\n\t            if (dirName === 'style' || dirName === 'class') {\n\t              pushDir(dirName, internalDirectives[dirName]);\n\t            } else {\n\t              arg = dirName;\n\t              pushDir('bind', publicDirectives.bind);\n\t            }\n\t          } else\n\t\n\t            // normal directives\n\t            if (name.indexOf('v-') === 0) {\n\t              // check arg\n\t              arg = (arg = name.match(argRE)) && arg[1];\n\t              if (arg) {\n\t                name = name.replace(argRE, '');\n\t              }\n\t              // extract directive name\n\t              dirName = name.slice(2);\n\t\n\t              // skip v-else (when used with v-show)\n\t              if (dirName === 'else') {\n\t                continue;\n\t              }\n\t\n\t              dirDef = resolveAsset(options, 'directives', dirName);\n\t\n\t              if (false) {\n\t                assertAsset(dirDef, 'directive', dirName);\n\t              }\n\t\n\t              if (dirDef) {\n\t                pushDir(dirName, dirDef);\n\t              }\n\t            }\n\t  }\n\t\n\t  /**\n\t   * Push a directive.\n\t   *\n\t   * @param {String} dirName\n\t   * @param {Object|Function} def\n\t   * @param {Array} [interpTokens]\n\t   */\n\t\n\t  function pushDir(dirName, def, interpTokens) {\n\t    var hasOneTimeToken = interpTokens && hasOneTime(interpTokens);\n\t    var parsed = !hasOneTimeToken && parseDirective(value);\n\t    dirs.push({\n\t      name: dirName,\n\t      attr: rawName,\n\t      raw: rawValue,\n\t      def: def,\n\t      arg: arg,\n\t      modifiers: modifiers,\n\t      // conversion from interpolation strings with one-time token\n\t      // to expression is differed until directive bind time so that we\n\t      // have access to the actual vm context for one-time bindings.\n\t      expression: parsed && parsed.expression,\n\t      filters: parsed && parsed.filters,\n\t      interp: interpTokens,\n\t      hasOneTime: hasOneTimeToken\n\t    });\n\t  }\n\t\n\t  if (dirs.length) {\n\t    return makeNodeLinkFn(dirs);\n\t  }\n\t}\n\t\n\t/**\n\t * Parse modifiers from directive attribute name.\n\t *\n\t * @param {String} name\n\t * @return {Object}\n\t */\n\t\n\tfunction parseModifiers(name) {\n\t  var res = Object.create(null);\n\t  var match = name.match(modifierRE);\n\t  if (match) {\n\t    var i = match.length;\n\t    while (i--) {\n\t      res[match[i].slice(1)] = true;\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Build a link function for all directives on a single node.\n\t *\n\t * @param {Array} directives\n\t * @return {Function} directivesLinkFn\n\t */\n\t\n\tfunction makeNodeLinkFn(directives) {\n\t  return function nodeLinkFn(vm, el, host, scope, frag) {\n\t    // reverse apply because it's sorted low to high\n\t    var i = directives.length;\n\t    while (i--) {\n\t      vm._bindDir(directives[i], el, host, scope, frag);\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Check if an interpolation string contains one-time tokens.\n\t *\n\t * @param {Array} tokens\n\t * @return {Boolean}\n\t */\n\t\n\tfunction hasOneTime(tokens) {\n\t  var i = tokens.length;\n\t  while (i--) {\n\t    if (tokens[i].oneTime) return true;\n\t  }\n\t}\n\t\n\tvar specialCharRE = /[^\\w\\-:\\.]/;\n\t\n\t/**\n\t * Process an element or a DocumentFragment based on a\n\t * instance option object. This allows us to transclude\n\t * a template node/fragment before the instance is created,\n\t * so the processed fragment can then be cloned and reused\n\t * in v-for.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction transclude(el, options) {\n\t  // extract container attributes to pass them down\n\t  // to compiler, because they need to be compiled in\n\t  // parent scope. we are mutating the options object here\n\t  // assuming the same object will be used for compile\n\t  // right after this.\n\t  if (options) {\n\t    options._containerAttrs = extractAttrs(el);\n\t  }\n\t  // for template tags, what we want is its content as\n\t  // a documentFragment (for fragment instances)\n\t  if (isTemplate(el)) {\n\t    el = parseTemplate(el);\n\t  }\n\t  if (options) {\n\t    if (options._asComponent && !options.template) {\n\t      options.template = '<slot></slot>';\n\t    }\n\t    if (options.template) {\n\t      options._content = extractContent(el);\n\t      el = transcludeTemplate(el, options);\n\t    }\n\t  }\n\t  if (el instanceof DocumentFragment) {\n\t    // anchors for fragment instance\n\t    // passing in `persist: true` to avoid them being\n\t    // discarded by IE during template cloning\n\t    prepend(createAnchor('v-start', true), el);\n\t    el.appendChild(createAnchor('v-end', true));\n\t  }\n\t  return el;\n\t}\n\t\n\t/**\n\t * Process the template option.\n\t * If the replace option is true this will swap the $el.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction transcludeTemplate(el, options) {\n\t  var template = options.template;\n\t  var frag = parseTemplate(template, true);\n\t  if (frag) {\n\t    var replacer = frag.firstChild;\n\t    var tag = replacer.tagName && replacer.tagName.toLowerCase();\n\t    if (options.replace) {\n\t      /* istanbul ignore if */\n\t      if (el === document.body) {\n\t        (\"production\") !== 'production' && warn('You are mounting an instance with a template to ' + '<body>. This will replace <body> entirely. You ' + 'should probably use `replace: false` here.');\n\t      }\n\t      // there are many cases where the instance must\n\t      // become a fragment instance: basically anything that\n\t      // can create more than 1 root nodes.\n\t      if (\n\t      // multi-children template\n\t      frag.childNodes.length > 1 ||\n\t      // non-element template\n\t      replacer.nodeType !== 1 ||\n\t      // single nested component\n\t      tag === 'component' || resolveAsset(options, 'components', tag) || hasBindAttr(replacer, 'is') ||\n\t      // element directive\n\t      resolveAsset(options, 'elementDirectives', tag) ||\n\t      // for block\n\t      replacer.hasAttribute('v-for') ||\n\t      // if block\n\t      replacer.hasAttribute('v-if')) {\n\t        return frag;\n\t      } else {\n\t        options._replacerAttrs = extractAttrs(replacer);\n\t        mergeAttrs(el, replacer);\n\t        return replacer;\n\t      }\n\t    } else {\n\t      el.appendChild(frag);\n\t      return el;\n\t    }\n\t  } else {\n\t    (\"production\") !== 'production' && warn('Invalid template option: ' + template);\n\t  }\n\t}\n\t\n\t/**\n\t * Helper to extract a component container's attributes\n\t * into a plain object array.\n\t *\n\t * @param {Element} el\n\t * @return {Array}\n\t */\n\t\n\tfunction extractAttrs(el) {\n\t  if (el.nodeType === 1 && el.hasAttributes()) {\n\t    return toArray(el.attributes);\n\t  }\n\t}\n\t\n\t/**\n\t * Merge the attributes of two elements, and make sure\n\t * the class names are merged properly.\n\t *\n\t * @param {Element} from\n\t * @param {Element} to\n\t */\n\t\n\tfunction mergeAttrs(from, to) {\n\t  var attrs = from.attributes;\n\t  var i = attrs.length;\n\t  var name, value;\n\t  while (i--) {\n\t    name = attrs[i].name;\n\t    value = attrs[i].value;\n\t    if (!to.hasAttribute(name) && !specialCharRE.test(name)) {\n\t      to.setAttribute(name, value);\n\t    } else if (name === 'class' && !parseText(value)) {\n\t      value.split(/\\s+/).forEach(function (cls) {\n\t        addClass(to, cls);\n\t      });\n\t    }\n\t  }\n\t}\n\t\n\tvar compiler = Object.freeze({\n\t\tcompile: compile,\n\t\tcompileAndLinkProps: compileAndLinkProps,\n\t\tcompileRoot: compileRoot,\n\t\tterminalDirectives: terminalDirectives,\n\t\ttransclude: transclude\n\t});\n\t\n\tfunction stateMixin (Vue) {\n\t\n\t  /**\n\t   * Accessor for `$data` property, since setting $data\n\t   * requires observing the new object and updating\n\t   * proxied properties.\n\t   */\n\t\n\t  Object.defineProperty(Vue.prototype, '$data', {\n\t    get: function get() {\n\t      return this._data;\n\t    },\n\t    set: function set(newData) {\n\t      if (newData !== this._data) {\n\t        this._setData(newData);\n\t      }\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Setup the scope of an instance, which contains:\n\t   * - observed data\n\t   * - computed properties\n\t   * - user methods\n\t   * - meta properties\n\t   */\n\t\n\t  Vue.prototype._initState = function () {\n\t    this._initProps();\n\t    this._initMeta();\n\t    this._initMethods();\n\t    this._initData();\n\t    this._initComputed();\n\t  };\n\t\n\t  /**\n\t   * Initialize props.\n\t   */\n\t\n\t  Vue.prototype._initProps = function () {\n\t    var options = this.$options;\n\t    var el = options.el;\n\t    var props = options.props;\n\t    if (props && !el) {\n\t      (\"production\") !== 'production' && warn('Props will not be compiled if no `el` option is ' + 'provided at instantiation.');\n\t    }\n\t    // make sure to convert string selectors into element now\n\t    el = options.el = query(el);\n\t    this._propsUnlinkFn = el && el.nodeType === 1 && props\n\t    // props must be linked in proper scope if inside v-for\n\t    ? compileAndLinkProps(this, el, props, this._scope) : null;\n\t  };\n\t\n\t  /**\n\t   * Initialize the data.\n\t   */\n\t\n\t  Vue.prototype._initData = function () {\n\t    var propsData = this._data;\n\t    var optionsDataFn = this.$options.data;\n\t    var optionsData = optionsDataFn && optionsDataFn();\n\t    if (optionsData) {\n\t      this._data = optionsData;\n\t      for (var prop in propsData) {\n\t        if (false) {\n\t          warn('Data field \"' + prop + '\" is already defined ' + 'as a prop. Use prop default value instead.');\n\t        }\n\t        if (this._props[prop].raw !== null || !hasOwn(optionsData, prop)) {\n\t          set(optionsData, prop, propsData[prop]);\n\t        }\n\t      }\n\t    }\n\t    var data = this._data;\n\t    // proxy data on instance\n\t    var keys = Object.keys(data);\n\t    var i, key;\n\t    i = keys.length;\n\t    while (i--) {\n\t      key = keys[i];\n\t      this._proxy(key);\n\t    }\n\t    // observe data\n\t    observe(data, this);\n\t  };\n\t\n\t  /**\n\t   * Swap the instance's $data. Called in $data's setter.\n\t   *\n\t   * @param {Object} newData\n\t   */\n\t\n\t  Vue.prototype._setData = function (newData) {\n\t    newData = newData || {};\n\t    var oldData = this._data;\n\t    this._data = newData;\n\t    var keys, key, i;\n\t    // unproxy keys not present in new data\n\t    keys = Object.keys(oldData);\n\t    i = keys.length;\n\t    while (i--) {\n\t      key = keys[i];\n\t      if (!(key in newData)) {\n\t        this._unproxy(key);\n\t      }\n\t    }\n\t    // proxy keys not already proxied,\n\t    // and trigger change for changed values\n\t    keys = Object.keys(newData);\n\t    i = keys.length;\n\t    while (i--) {\n\t      key = keys[i];\n\t      if (!hasOwn(this, key)) {\n\t        // new property\n\t        this._proxy(key);\n\t      }\n\t    }\n\t    oldData.__ob__.removeVm(this);\n\t    observe(newData, this);\n\t    this._digest();\n\t  };\n\t\n\t  /**\n\t   * Proxy a property, so that\n\t   * vm.prop === vm._data.prop\n\t   *\n\t   * @param {String} key\n\t   */\n\t\n\t  Vue.prototype._proxy = function (key) {\n\t    if (!isReserved(key)) {\n\t      // need to store ref to self here\n\t      // because these getter/setters might\n\t      // be called by child scopes via\n\t      // prototype inheritance.\n\t      var self = this;\n\t      Object.defineProperty(self, key, {\n\t        configurable: true,\n\t        enumerable: true,\n\t        get: function proxyGetter() {\n\t          return self._data[key];\n\t        },\n\t        set: function proxySetter(val) {\n\t          self._data[key] = val;\n\t        }\n\t      });\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Unproxy a property.\n\t   *\n\t   * @param {String} key\n\t   */\n\t\n\t  Vue.prototype._unproxy = function (key) {\n\t    if (!isReserved(key)) {\n\t      delete this[key];\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Force update on every watcher in scope.\n\t   */\n\t\n\t  Vue.prototype._digest = function () {\n\t    for (var i = 0, l = this._watchers.length; i < l; i++) {\n\t      this._watchers[i].update(true); // shallow updates\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Setup computed properties. They are essentially\n\t   * special getter/setters\n\t   */\n\t\n\t  function noop() {}\n\t  Vue.prototype._initComputed = function () {\n\t    var computed = this.$options.computed;\n\t    if (computed) {\n\t      for (var key in computed) {\n\t        var userDef = computed[key];\n\t        var def = {\n\t          enumerable: true,\n\t          configurable: true\n\t        };\n\t        if (typeof userDef === 'function') {\n\t          def.get = makeComputedGetter(userDef, this);\n\t          def.set = noop;\n\t        } else {\n\t          def.get = userDef.get ? userDef.cache !== false ? makeComputedGetter(userDef.get, this) : bind$1(userDef.get, this) : noop;\n\t          def.set = userDef.set ? bind$1(userDef.set, this) : noop;\n\t        }\n\t        Object.defineProperty(this, key, def);\n\t      }\n\t    }\n\t  };\n\t\n\t  function makeComputedGetter(getter, owner) {\n\t    var watcher = new Watcher(owner, getter, null, {\n\t      lazy: true\n\t    });\n\t    return function computedGetter() {\n\t      if (watcher.dirty) {\n\t        watcher.evaluate();\n\t      }\n\t      if (Dep.target) {\n\t        watcher.depend();\n\t      }\n\t      return watcher.value;\n\t    };\n\t  }\n\t\n\t  /**\n\t   * Setup instance methods. Methods must be bound to the\n\t   * instance since they might be passed down as a prop to\n\t   * child components.\n\t   */\n\t\n\t  Vue.prototype._initMethods = function () {\n\t    var methods = this.$options.methods;\n\t    if (methods) {\n\t      for (var key in methods) {\n\t        this[key] = bind$1(methods[key], this);\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Initialize meta information like $index, $key & $value.\n\t   */\n\t\n\t  Vue.prototype._initMeta = function () {\n\t    var metas = this.$options._meta;\n\t    if (metas) {\n\t      for (var key in metas) {\n\t        defineReactive(this, key, metas[key]);\n\t      }\n\t    }\n\t  };\n\t}\n\t\n\tvar eventRE = /^v-on:|^@/;\n\t\n\tfunction eventsMixin (Vue) {\n\t\n\t  /**\n\t   * Setup the instance's option events & watchers.\n\t   * If the value is a string, we pull it from the\n\t   * instance's methods by name.\n\t   */\n\t\n\t  Vue.prototype._initEvents = function () {\n\t    var options = this.$options;\n\t    if (options._asComponent) {\n\t      registerComponentEvents(this, options.el);\n\t    }\n\t    registerCallbacks(this, '$on', options.events);\n\t    registerCallbacks(this, '$watch', options.watch);\n\t  };\n\t\n\t  /**\n\t   * Register v-on events on a child component\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {Element} el\n\t   */\n\t\n\t  function registerComponentEvents(vm, el) {\n\t    var attrs = el.attributes;\n\t    var name, handler;\n\t    for (var i = 0, l = attrs.length; i < l; i++) {\n\t      name = attrs[i].name;\n\t      if (eventRE.test(name)) {\n\t        name = name.replace(eventRE, '');\n\t        handler = (vm._scope || vm._context).$eval(attrs[i].value, true);\n\t        handler._fromParent = true;\n\t        vm.$on(name.replace(eventRE), handler);\n\t      }\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Register callbacks for option events and watchers.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {String} action\n\t   * @param {Object} hash\n\t   */\n\t\n\t  function registerCallbacks(vm, action, hash) {\n\t    if (!hash) return;\n\t    var handlers, key, i, j;\n\t    for (key in hash) {\n\t      handlers = hash[key];\n\t      if (isArray(handlers)) {\n\t        for (i = 0, j = handlers.length; i < j; i++) {\n\t          register(vm, action, key, handlers[i]);\n\t        }\n\t      } else {\n\t        register(vm, action, key, handlers);\n\t      }\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Helper to register an event/watch callback.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {String} action\n\t   * @param {String} key\n\t   * @param {Function|String|Object} handler\n\t   * @param {Object} [options]\n\t   */\n\t\n\t  function register(vm, action, key, handler, options) {\n\t    var type = typeof handler;\n\t    if (type === 'function') {\n\t      vm[action](key, handler, options);\n\t    } else if (type === 'string') {\n\t      var methods = vm.$options.methods;\n\t      var method = methods && methods[handler];\n\t      if (method) {\n\t        vm[action](key, method, options);\n\t      } else {\n\t        (\"production\") !== 'production' && warn('Unknown method: \"' + handler + '\" when ' + 'registering callback for ' + action + ': \"' + key + '\".');\n\t      }\n\t    } else if (handler && type === 'object') {\n\t      register(vm, action, key, handler.handler, handler);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Setup recursive attached/detached calls\n\t   */\n\t\n\t  Vue.prototype._initDOMHooks = function () {\n\t    this.$on('hook:attached', onAttached);\n\t    this.$on('hook:detached', onDetached);\n\t  };\n\t\n\t  /**\n\t   * Callback to recursively call attached hook on children\n\t   */\n\t\n\t  function onAttached() {\n\t    if (!this._isAttached) {\n\t      this._isAttached = true;\n\t      this.$children.forEach(callAttach);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Iterator to call attached hook\n\t   *\n\t   * @param {Vue} child\n\t   */\n\t\n\t  function callAttach(child) {\n\t    if (!child._isAttached && inDoc(child.$el)) {\n\t      child._callHook('attached');\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Callback to recursively call detached hook on children\n\t   */\n\t\n\t  function onDetached() {\n\t    if (this._isAttached) {\n\t      this._isAttached = false;\n\t      this.$children.forEach(callDetach);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Iterator to call detached hook\n\t   *\n\t   * @param {Vue} child\n\t   */\n\t\n\t  function callDetach(child) {\n\t    if (child._isAttached && !inDoc(child.$el)) {\n\t      child._callHook('detached');\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Trigger all handlers for a hook\n\t   *\n\t   * @param {String} hook\n\t   */\n\t\n\t  Vue.prototype._callHook = function (hook) {\n\t    this.$emit('pre-hook:' + hook);\n\t    var handlers = this.$options[hook];\n\t    if (handlers) {\n\t      for (var i = 0, j = handlers.length; i < j; i++) {\n\t        handlers[i].call(this);\n\t      }\n\t    }\n\t    this.$emit('hook:' + hook);\n\t  };\n\t}\n\t\n\tfunction noop() {}\n\t\n\t/**\n\t * A directive links a DOM element with a piece of data,\n\t * which is the result of evaluating an expression.\n\t * It registers a watcher with the expression and calls\n\t * the DOM update function when a change is triggered.\n\t *\n\t * @param {String} name\n\t * @param {Node} el\n\t * @param {Vue} vm\n\t * @param {Object} descriptor\n\t *                 - {String} name\n\t *                 - {Object} def\n\t *                 - {String} expression\n\t *                 - {Array<Object>} [filters]\n\t *                 - {Boolean} literal\n\t *                 - {String} attr\n\t *                 - {String} raw\n\t * @param {Object} def - directive definition object\n\t * @param {Vue} [host] - transclusion host component\n\t * @param {Object} [scope] - v-for scope\n\t * @param {Fragment} [frag] - owner fragment\n\t * @constructor\n\t */\n\tfunction Directive(descriptor, vm, el, host, scope, frag) {\n\t  this.vm = vm;\n\t  this.el = el;\n\t  // copy descriptor properties\n\t  this.descriptor = descriptor;\n\t  this.name = descriptor.name;\n\t  this.expression = descriptor.expression;\n\t  this.arg = descriptor.arg;\n\t  this.modifiers = descriptor.modifiers;\n\t  this.filters = descriptor.filters;\n\t  this.literal = this.modifiers && this.modifiers.literal;\n\t  // private\n\t  this._locked = false;\n\t  this._bound = false;\n\t  this._listeners = null;\n\t  // link context\n\t  this._host = host;\n\t  this._scope = scope;\n\t  this._frag = frag;\n\t  // store directives on node in dev mode\n\t  if (false) {\n\t    this.el._vue_directives = this.el._vue_directives || [];\n\t    this.el._vue_directives.push(this);\n\t  }\n\t}\n\t\n\t/**\n\t * Initialize the directive, mixin definition properties,\n\t * setup the watcher, call definition bind() and update()\n\t * if present.\n\t *\n\t * @param {Object} def\n\t */\n\t\n\tDirective.prototype._bind = function () {\n\t  var name = this.name;\n\t  var descriptor = this.descriptor;\n\t\n\t  // remove attribute\n\t  if ((name !== 'cloak' || this.vm._isCompiled) && this.el && this.el.removeAttribute) {\n\t    var attr = descriptor.attr || 'v-' + name;\n\t    this.el.removeAttribute(attr);\n\t  }\n\t\n\t  // copy def properties\n\t  var def = descriptor.def;\n\t  if (typeof def === 'function') {\n\t    this.update = def;\n\t  } else {\n\t    extend(this, def);\n\t  }\n\t\n\t  // setup directive params\n\t  this._setupParams();\n\t\n\t  // initial bind\n\t  if (this.bind) {\n\t    this.bind();\n\t  }\n\t  this._bound = true;\n\t\n\t  if (this.literal) {\n\t    this.update && this.update(descriptor.raw);\n\t  } else if ((this.expression || this.modifiers) && (this.update || this.twoWay) && !this._checkStatement()) {\n\t    // wrapped updater for context\n\t    var dir = this;\n\t    if (this.update) {\n\t      this._update = function (val, oldVal) {\n\t        if (!dir._locked) {\n\t          dir.update(val, oldVal);\n\t        }\n\t      };\n\t    } else {\n\t      this._update = noop;\n\t    }\n\t    var preProcess = this._preProcess ? bind$1(this._preProcess, this) : null;\n\t    var postProcess = this._postProcess ? bind$1(this._postProcess, this) : null;\n\t    var watcher = this._watcher = new Watcher(this.vm, this.expression, this._update, // callback\n\t    {\n\t      filters: this.filters,\n\t      twoWay: this.twoWay,\n\t      deep: this.deep,\n\t      preProcess: preProcess,\n\t      postProcess: postProcess,\n\t      scope: this._scope\n\t    });\n\t    // v-model with inital inline value need to sync back to\n\t    // model instead of update to DOM on init. They would\n\t    // set the afterBind hook to indicate that.\n\t    if (this.afterBind) {\n\t      this.afterBind();\n\t    } else if (this.update) {\n\t      this.update(watcher.value);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Setup all param attributes, e.g. track-by,\n\t * transition-mode, etc...\n\t */\n\t\n\tDirective.prototype._setupParams = function () {\n\t  if (!this.params) {\n\t    return;\n\t  }\n\t  var params = this.params;\n\t  // swap the params array with a fresh object.\n\t  this.params = Object.create(null);\n\t  var i = params.length;\n\t  var key, val, mappedKey;\n\t  while (i--) {\n\t    key = params[i];\n\t    mappedKey = camelize(key);\n\t    val = getBindAttr(this.el, key);\n\t    if (val != null) {\n\t      // dynamic\n\t      this._setupParamWatcher(mappedKey, val);\n\t    } else {\n\t      // static\n\t      val = getAttr(this.el, key);\n\t      if (val != null) {\n\t        this.params[mappedKey] = val === '' ? true : val;\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Setup a watcher for a dynamic param.\n\t *\n\t * @param {String} key\n\t * @param {String} expression\n\t */\n\t\n\tDirective.prototype._setupParamWatcher = function (key, expression) {\n\t  var self = this;\n\t  var called = false;\n\t  var unwatch = (this._scope || this.vm).$watch(expression, function (val, oldVal) {\n\t    self.params[key] = val;\n\t    // since we are in immediate mode,\n\t    // only call the param change callbacks if this is not the first update.\n\t    if (called) {\n\t      var cb = self.paramWatchers && self.paramWatchers[key];\n\t      if (cb) {\n\t        cb.call(self, val, oldVal);\n\t      }\n\t    } else {\n\t      called = true;\n\t    }\n\t  }, {\n\t    immediate: true,\n\t    user: false\n\t  });(this._paramUnwatchFns || (this._paramUnwatchFns = [])).push(unwatch);\n\t};\n\t\n\t/**\n\t * Check if the directive is a function caller\n\t * and if the expression is a callable one. If both true,\n\t * we wrap up the expression and use it as the event\n\t * handler.\n\t *\n\t * e.g. on-click=\"a++\"\n\t *\n\t * @return {Boolean}\n\t */\n\t\n\tDirective.prototype._checkStatement = function () {\n\t  var expression = this.expression;\n\t  if (expression && this.acceptStatement && !isSimplePath(expression)) {\n\t    var fn = parseExpression(expression).get;\n\t    var scope = this._scope || this.vm;\n\t    var handler = function handler(e) {\n\t      scope.$event = e;\n\t      fn.call(scope, scope);\n\t      scope.$event = null;\n\t    };\n\t    if (this.filters) {\n\t      handler = scope._applyFilters(handler, null, this.filters);\n\t    }\n\t    this.update(handler);\n\t    return true;\n\t  }\n\t};\n\t\n\t/**\n\t * Set the corresponding value with the setter.\n\t * This should only be used in two-way directives\n\t * e.g. v-model.\n\t *\n\t * @param {*} value\n\t * @public\n\t */\n\t\n\tDirective.prototype.set = function (value) {\n\t  /* istanbul ignore else */\n\t  if (this.twoWay) {\n\t    this._withLock(function () {\n\t      this._watcher.set(value);\n\t    });\n\t  } else if (false) {\n\t    warn('Directive.set() can only be used inside twoWay' + 'directives.');\n\t  }\n\t};\n\t\n\t/**\n\t * Execute a function while preventing that function from\n\t * triggering updates on this directive instance.\n\t *\n\t * @param {Function} fn\n\t */\n\t\n\tDirective.prototype._withLock = function (fn) {\n\t  var self = this;\n\t  self._locked = true;\n\t  fn.call(self);\n\t  nextTick(function () {\n\t    self._locked = false;\n\t  });\n\t};\n\t\n\t/**\n\t * Convenience method that attaches a DOM event listener\n\t * to the directive element and autometically tears it down\n\t * during unbind.\n\t *\n\t * @param {String} event\n\t * @param {Function} handler\n\t */\n\t\n\tDirective.prototype.on = function (event, handler) {\n\t  on$1(this.el, event, handler);(this._listeners || (this._listeners = [])).push([event, handler]);\n\t};\n\t\n\t/**\n\t * Teardown the watcher and call unbind.\n\t */\n\t\n\tDirective.prototype._teardown = function () {\n\t  if (this._bound) {\n\t    this._bound = false;\n\t    if (this.unbind) {\n\t      this.unbind();\n\t    }\n\t    if (this._watcher) {\n\t      this._watcher.teardown();\n\t    }\n\t    var listeners = this._listeners;\n\t    var i;\n\t    if (listeners) {\n\t      i = listeners.length;\n\t      while (i--) {\n\t        off(this.el, listeners[i][0], listeners[i][1]);\n\t      }\n\t    }\n\t    var unwatchFns = this._paramUnwatchFns;\n\t    if (unwatchFns) {\n\t      i = unwatchFns.length;\n\t      while (i--) {\n\t        unwatchFns[i]();\n\t      }\n\t    }\n\t    if (false) {\n\t      this.el._vue_directives.$remove(this);\n\t    }\n\t    this.vm = this.el = this._watcher = this._listeners = null;\n\t  }\n\t};\n\t\n\tfunction lifecycleMixin (Vue) {\n\t\n\t  /**\n\t   * Update v-ref for component.\n\t   *\n\t   * @param {Boolean} remove\n\t   */\n\t\n\t  Vue.prototype._updateRef = function (remove) {\n\t    var ref = this.$options._ref;\n\t    if (ref) {\n\t      var refs = (this._scope || this._context).$refs;\n\t      if (remove) {\n\t        if (refs[ref] === this) {\n\t          refs[ref] = null;\n\t        }\n\t      } else {\n\t        refs[ref] = this;\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Transclude, compile and link element.\n\t   *\n\t   * If a pre-compiled linker is available, that means the\n\t   * passed in element will be pre-transcluded and compiled\n\t   * as well - all we need to do is to call the linker.\n\t   *\n\t   * Otherwise we need to call transclude/compile/link here.\n\t   *\n\t   * @param {Element} el\n\t   * @return {Element}\n\t   */\n\t\n\t  Vue.prototype._compile = function (el) {\n\t    var options = this.$options;\n\t\n\t    // transclude and init element\n\t    // transclude can potentially replace original\n\t    // so we need to keep reference; this step also injects\n\t    // the template and caches the original attributes\n\t    // on the container node and replacer node.\n\t    var original = el;\n\t    el = transclude(el, options);\n\t    this._initElement(el);\n\t\n\t    // handle v-pre on root node (#2026)\n\t    if (el.nodeType === 1 && getAttr(el, 'v-pre') !== null) {\n\t      return;\n\t    }\n\t\n\t    // root is always compiled per-instance, because\n\t    // container attrs and props can be different every time.\n\t    var contextOptions = this._context && this._context.$options;\n\t    var rootLinker = compileRoot(el, options, contextOptions);\n\t\n\t    // compile and link the rest\n\t    var contentLinkFn;\n\t    var ctor = this.constructor;\n\t    // component compilation can be cached\n\t    // as long as it's not using inline-template\n\t    if (options._linkerCachable) {\n\t      contentLinkFn = ctor.linker;\n\t      if (!contentLinkFn) {\n\t        contentLinkFn = ctor.linker = compile(el, options);\n\t      }\n\t    }\n\t\n\t    // link phase\n\t    // make sure to link root with prop scope!\n\t    var rootUnlinkFn = rootLinker(this, el, this._scope);\n\t    var contentUnlinkFn = contentLinkFn ? contentLinkFn(this, el) : compile(el, options)(this, el);\n\t\n\t    // register composite unlink function\n\t    // to be called during instance destruction\n\t    this._unlinkFn = function () {\n\t      rootUnlinkFn();\n\t      // passing destroying: true to avoid searching and\n\t      // splicing the directives\n\t      contentUnlinkFn(true);\n\t    };\n\t\n\t    // finally replace original\n\t    if (options.replace) {\n\t      replace(original, el);\n\t    }\n\t\n\t    this._isCompiled = true;\n\t    this._callHook('compiled');\n\t    return el;\n\t  };\n\t\n\t  /**\n\t   * Initialize instance element. Called in the public\n\t   * $mount() method.\n\t   *\n\t   * @param {Element} el\n\t   */\n\t\n\t  Vue.prototype._initElement = function (el) {\n\t    if (el instanceof DocumentFragment) {\n\t      this._isFragment = true;\n\t      this.$el = this._fragmentStart = el.firstChild;\n\t      this._fragmentEnd = el.lastChild;\n\t      // set persisted text anchors to empty\n\t      if (this._fragmentStart.nodeType === 3) {\n\t        this._fragmentStart.data = this._fragmentEnd.data = '';\n\t      }\n\t      this._fragment = el;\n\t    } else {\n\t      this.$el = el;\n\t    }\n\t    this.$el.__vue__ = this;\n\t    this._callHook('beforeCompile');\n\t  };\n\t\n\t  /**\n\t   * Create and bind a directive to an element.\n\t   *\n\t   * @param {String} name - directive name\n\t   * @param {Node} node   - target node\n\t   * @param {Object} desc - parsed directive descriptor\n\t   * @param {Object} def  - directive definition object\n\t   * @param {Vue} [host] - transclusion host component\n\t   * @param {Object} [scope] - v-for scope\n\t   * @param {Fragment} [frag] - owner fragment\n\t   */\n\t\n\t  Vue.prototype._bindDir = function (descriptor, node, host, scope, frag) {\n\t    this._directives.push(new Directive(descriptor, this, node, host, scope, frag));\n\t  };\n\t\n\t  /**\n\t   * Teardown an instance, unobserves the data, unbind all the\n\t   * directives, turn off all the event listeners, etc.\n\t   *\n\t   * @param {Boolean} remove - whether to remove the DOM node.\n\t   * @param {Boolean} deferCleanup - if true, defer cleanup to\n\t   *                                 be called later\n\t   */\n\t\n\t  Vue.prototype._destroy = function (remove, deferCleanup) {\n\t    if (this._isBeingDestroyed) {\n\t      if (!deferCleanup) {\n\t        this._cleanup();\n\t      }\n\t      return;\n\t    }\n\t\n\t    var destroyReady;\n\t    var pendingRemoval;\n\t\n\t    var self = this;\n\t    // Cleanup should be called either synchronously or asynchronoysly as\n\t    // callback of this.$remove(), or if remove and deferCleanup are false.\n\t    // In any case it should be called after all other removing, unbinding and\n\t    // turning of is done\n\t    var cleanupIfPossible = function cleanupIfPossible() {\n\t      if (destroyReady && !pendingRemoval && !deferCleanup) {\n\t        self._cleanup();\n\t      }\n\t    };\n\t\n\t    // remove DOM element\n\t    if (remove && this.$el) {\n\t      pendingRemoval = true;\n\t      this.$remove(function () {\n\t        pendingRemoval = false;\n\t        cleanupIfPossible();\n\t      });\n\t    }\n\t\n\t    this._callHook('beforeDestroy');\n\t    this._isBeingDestroyed = true;\n\t    var i;\n\t    // remove self from parent. only necessary\n\t    // if parent is not being destroyed as well.\n\t    var parent = this.$parent;\n\t    if (parent && !parent._isBeingDestroyed) {\n\t      parent.$children.$remove(this);\n\t      // unregister ref (remove: true)\n\t      this._updateRef(true);\n\t    }\n\t    // destroy all children.\n\t    i = this.$children.length;\n\t    while (i--) {\n\t      this.$children[i].$destroy();\n\t    }\n\t    // teardown props\n\t    if (this._propsUnlinkFn) {\n\t      this._propsUnlinkFn();\n\t    }\n\t    // teardown all directives. this also tearsdown all\n\t    // directive-owned watchers.\n\t    if (this._unlinkFn) {\n\t      this._unlinkFn();\n\t    }\n\t    i = this._watchers.length;\n\t    while (i--) {\n\t      this._watchers[i].teardown();\n\t    }\n\t    // remove reference to self on $el\n\t    if (this.$el) {\n\t      this.$el.__vue__ = null;\n\t    }\n\t\n\t    destroyReady = true;\n\t    cleanupIfPossible();\n\t  };\n\t\n\t  /**\n\t   * Clean up to ensure garbage collection.\n\t   * This is called after the leave transition if there\n\t   * is any.\n\t   */\n\t\n\t  Vue.prototype._cleanup = function () {\n\t    if (this._isDestroyed) {\n\t      return;\n\t    }\n\t    // remove self from owner fragment\n\t    // do it in cleanup so that we can call $destroy with\n\t    // defer right when a fragment is about to be removed.\n\t    if (this._frag) {\n\t      this._frag.children.$remove(this);\n\t    }\n\t    // remove reference from data ob\n\t    // frozen object may not have observer.\n\t    if (this._data.__ob__) {\n\t      this._data.__ob__.removeVm(this);\n\t    }\n\t    // Clean up references to private properties and other\n\t    // instances. preserve reference to _data so that proxy\n\t    // accessors still work. The only potential side effect\n\t    // here is that mutating the instance after it's destroyed\n\t    // may affect the state of other components that are still\n\t    // observing the same object, but that seems to be a\n\t    // reasonable responsibility for the user rather than\n\t    // always throwing an error on them.\n\t    this.$el = this.$parent = this.$root = this.$children = this._watchers = this._context = this._scope = this._directives = null;\n\t    // call the last hook...\n\t    this._isDestroyed = true;\n\t    this._callHook('destroyed');\n\t    // turn off all instance listeners.\n\t    this.$off();\n\t  };\n\t}\n\t\n\tfunction miscMixin (Vue) {\n\t\n\t  /**\n\t   * Apply a list of filter (descriptors) to a value.\n\t   * Using plain for loops here because this will be called in\n\t   * the getter of any watcher with filters so it is very\n\t   * performance sensitive.\n\t   *\n\t   * @param {*} value\n\t   * @param {*} [oldValue]\n\t   * @param {Array} filters\n\t   * @param {Boolean} write\n\t   * @return {*}\n\t   */\n\t\n\t  Vue.prototype._applyFilters = function (value, oldValue, filters, write) {\n\t    var filter, fn, args, arg, offset, i, l, j, k;\n\t    for (i = 0, l = filters.length; i < l; i++) {\n\t      filter = filters[i];\n\t      fn = resolveAsset(this.$options, 'filters', filter.name);\n\t      if (false) {\n\t        assertAsset(fn, 'filter', filter.name);\n\t      }\n\t      if (!fn) continue;\n\t      fn = write ? fn.write : fn.read || fn;\n\t      if (typeof fn !== 'function') continue;\n\t      args = write ? [value, oldValue] : [value];\n\t      offset = write ? 2 : 1;\n\t      if (filter.args) {\n\t        for (j = 0, k = filter.args.length; j < k; j++) {\n\t          arg = filter.args[j];\n\t          args[j + offset] = arg.dynamic ? this.$get(arg.value) : arg.value;\n\t        }\n\t      }\n\t      value = fn.apply(this, args);\n\t    }\n\t    return value;\n\t  };\n\t\n\t  /**\n\t   * Resolve a component, depending on whether the component\n\t   * is defined normally or using an async factory function.\n\t   * Resolves synchronously if already resolved, otherwise\n\t   * resolves asynchronously and caches the resolved\n\t   * constructor on the factory.\n\t   *\n\t   * @param {String} id\n\t   * @param {Function} cb\n\t   */\n\t\n\t  Vue.prototype._resolveComponent = function (id, cb) {\n\t    var factory = resolveAsset(this.$options, 'components', id);\n\t    if (false) {\n\t      assertAsset(factory, 'component', id);\n\t    }\n\t    if (!factory) {\n\t      return;\n\t    }\n\t    // async component factory\n\t    if (!factory.options) {\n\t      if (factory.resolved) {\n\t        // cached\n\t        cb(factory.resolved);\n\t      } else if (factory.requested) {\n\t        // pool callbacks\n\t        factory.pendingCallbacks.push(cb);\n\t      } else {\n\t        factory.requested = true;\n\t        var cbs = factory.pendingCallbacks = [cb];\n\t        factory(function resolve(res) {\n\t          if (isPlainObject(res)) {\n\t            res = Vue.extend(res);\n\t          }\n\t          // cache resolved\n\t          factory.resolved = res;\n\t          // invoke callbacks\n\t          for (var i = 0, l = cbs.length; i < l; i++) {\n\t            cbs[i](res);\n\t          }\n\t        }, function reject(reason) {\n\t          (\"production\") !== 'production' && warn('Failed to resolve async component: ' + id + '. ' + (reason ? '\\nReason: ' + reason : ''));\n\t        });\n\t      }\n\t    } else {\n\t      // normal component\n\t      cb(factory);\n\t    }\n\t  };\n\t}\n\t\n\tfunction globalAPI (Vue) {\n\t\n\t  /**\n\t   * Expose useful internals\n\t   */\n\t\n\t  Vue.util = util;\n\t  Vue.config = config;\n\t  Vue.set = set;\n\t  Vue['delete'] = del;\n\t  Vue.nextTick = nextTick;\n\t\n\t  /**\n\t   * The following are exposed for advanced usage / plugins\n\t   */\n\t\n\t  Vue.compiler = compiler;\n\t  Vue.FragmentFactory = FragmentFactory;\n\t  Vue.internalDirectives = internalDirectives;\n\t  Vue.parsers = {\n\t    path: path,\n\t    text: text$1,\n\t    template: template,\n\t    directive: directive,\n\t    expression: expression\n\t  };\n\t\n\t  /**\n\t   * Each instance constructor, including Vue, has a unique\n\t   * cid. This enables us to create wrapped \"child\n\t   * constructors\" for prototypal inheritance and cache them.\n\t   */\n\t\n\t  Vue.cid = 0;\n\t  var cid = 1;\n\t\n\t  /**\n\t   * Class inheritance\n\t   *\n\t   * @param {Object} extendOptions\n\t   */\n\t\n\t  Vue.extend = function (extendOptions) {\n\t    extendOptions = extendOptions || {};\n\t    var Super = this;\n\t    var isFirstExtend = Super.cid === 0;\n\t    if (isFirstExtend && extendOptions._Ctor) {\n\t      return extendOptions._Ctor;\n\t    }\n\t    var name = extendOptions.name || Super.options.name;\n\t    if (false) {\n\t      if (!/^[a-zA-Z][\\w-]+$/.test(name)) {\n\t        warn('Invalid component name: ' + name);\n\t        name = null;\n\t      }\n\t    }\n\t    var Sub = createClass(name || 'VueComponent');\n\t    Sub.prototype = Object.create(Super.prototype);\n\t    Sub.prototype.constructor = Sub;\n\t    Sub.cid = cid++;\n\t    Sub.options = mergeOptions(Super.options, extendOptions);\n\t    Sub['super'] = Super;\n\t    // allow further extension\n\t    Sub.extend = Super.extend;\n\t    // create asset registers, so extended classes\n\t    // can have their private assets too.\n\t    config._assetTypes.forEach(function (type) {\n\t      Sub[type] = Super[type];\n\t    });\n\t    // enable recursive self-lookup\n\t    if (name) {\n\t      Sub.options.components[name] = Sub;\n\t    }\n\t    // cache constructor\n\t    if (isFirstExtend) {\n\t      extendOptions._Ctor = Sub;\n\t    }\n\t    return Sub;\n\t  };\n\t\n\t  /**\n\t   * A function that returns a sub-class constructor with the\n\t   * given name. This gives us much nicer output when\n\t   * logging instances in the console.\n\t   *\n\t   * @param {String} name\n\t   * @return {Function}\n\t   */\n\t\n\t  function createClass(name) {\n\t    return new Function('return function ' + classify(name) + ' (options) { this._init(options) }')();\n\t  }\n\t\n\t  /**\n\t   * Plugin system\n\t   *\n\t   * @param {Object} plugin\n\t   */\n\t\n\t  Vue.use = function (plugin) {\n\t    /* istanbul ignore if */\n\t    if (plugin.installed) {\n\t      return;\n\t    }\n\t    // additional parameters\n\t    var args = toArray(arguments, 1);\n\t    args.unshift(this);\n\t    if (typeof plugin.install === 'function') {\n\t      plugin.install.apply(plugin, args);\n\t    } else {\n\t      plugin.apply(null, args);\n\t    }\n\t    plugin.installed = true;\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Apply a global mixin by merging it into the default\n\t   * options.\n\t   */\n\t\n\t  Vue.mixin = function (mixin) {\n\t    Vue.options = mergeOptions(Vue.options, mixin);\n\t  };\n\t\n\t  /**\n\t   * Create asset registration methods with the following\n\t   * signature:\n\t   *\n\t   * @param {String} id\n\t   * @param {*} definition\n\t   */\n\t\n\t  config._assetTypes.forEach(function (type) {\n\t    Vue[type] = function (id, definition) {\n\t      if (!definition) {\n\t        return this.options[type + 's'][id];\n\t      } else {\n\t        /* istanbul ignore if */\n\t        if (false) {\n\t          if (type === 'component' && (commonTagRE.test(id) || reservedTagRE.test(id))) {\n\t            warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + id);\n\t          }\n\t        }\n\t        if (type === 'component' && isPlainObject(definition)) {\n\t          definition.name = id;\n\t          definition = Vue.extend(definition);\n\t        }\n\t        this.options[type + 's'][id] = definition;\n\t        return definition;\n\t      }\n\t    };\n\t  });\n\t}\n\t\n\tvar filterRE = /[^|]\\|[^|]/;\n\t\n\tfunction dataAPI (Vue) {\n\t\n\t  /**\n\t   * Get the value from an expression on this vm.\n\t   *\n\t   * @param {String} exp\n\t   * @param {Boolean} [asStatement]\n\t   * @return {*}\n\t   */\n\t\n\t  Vue.prototype.$get = function (exp, asStatement) {\n\t    var res = parseExpression(exp);\n\t    if (res) {\n\t      if (asStatement && !isSimplePath(exp)) {\n\t        var self = this;\n\t        return function statementHandler() {\n\t          self.$arguments = toArray(arguments);\n\t          var result = res.get.call(self, self);\n\t          self.$arguments = null;\n\t          return result;\n\t        };\n\t      } else {\n\t        try {\n\t          return res.get.call(this, this);\n\t        } catch (e) {}\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Set the value from an expression on this vm.\n\t   * The expression must be a valid left-hand\n\t   * expression in an assignment.\n\t   *\n\t   * @param {String} exp\n\t   * @param {*} val\n\t   */\n\t\n\t  Vue.prototype.$set = function (exp, val) {\n\t    var res = parseExpression(exp, true);\n\t    if (res && res.set) {\n\t      res.set.call(this, this, val);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Delete a property on the VM\n\t   *\n\t   * @param {String} key\n\t   */\n\t\n\t  Vue.prototype.$delete = function (key) {\n\t    del(this._data, key);\n\t  };\n\t\n\t  /**\n\t   * Watch an expression, trigger callback when its\n\t   * value changes.\n\t   *\n\t   * @param {String|Function} expOrFn\n\t   * @param {Function} cb\n\t   * @param {Object} [options]\n\t   *                 - {Boolean} deep\n\t   *                 - {Boolean} immediate\n\t   * @return {Function} - unwatchFn\n\t   */\n\t\n\t  Vue.prototype.$watch = function (expOrFn, cb, options) {\n\t    var vm = this;\n\t    var parsed;\n\t    if (typeof expOrFn === 'string') {\n\t      parsed = parseDirective(expOrFn);\n\t      expOrFn = parsed.expression;\n\t    }\n\t    var watcher = new Watcher(vm, expOrFn, cb, {\n\t      deep: options && options.deep,\n\t      sync: options && options.sync,\n\t      filters: parsed && parsed.filters,\n\t      user: !options || options.user !== false\n\t    });\n\t    if (options && options.immediate) {\n\t      cb.call(vm, watcher.value);\n\t    }\n\t    return function unwatchFn() {\n\t      watcher.teardown();\n\t    };\n\t  };\n\t\n\t  /**\n\t   * Evaluate a text directive, including filters.\n\t   *\n\t   * @param {String} text\n\t   * @param {Boolean} [asStatement]\n\t   * @return {String}\n\t   */\n\t\n\t  Vue.prototype.$eval = function (text, asStatement) {\n\t    // check for filters.\n\t    if (filterRE.test(text)) {\n\t      var dir = parseDirective(text);\n\t      // the filter regex check might give false positive\n\t      // for pipes inside strings, so it's possible that\n\t      // we don't get any filters here\n\t      var val = this.$get(dir.expression, asStatement);\n\t      return dir.filters ? this._applyFilters(val, null, dir.filters) : val;\n\t    } else {\n\t      // no filter\n\t      return this.$get(text, asStatement);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Interpolate a piece of template text.\n\t   *\n\t   * @param {String} text\n\t   * @return {String}\n\t   */\n\t\n\t  Vue.prototype.$interpolate = function (text) {\n\t    var tokens = parseText(text);\n\t    var vm = this;\n\t    if (tokens) {\n\t      if (tokens.length === 1) {\n\t        return vm.$eval(tokens[0].value) + '';\n\t      } else {\n\t        return tokens.map(function (token) {\n\t          return token.tag ? vm.$eval(token.value) : token.value;\n\t        }).join('');\n\t      }\n\t    } else {\n\t      return text;\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Log instance data as a plain JS object\n\t   * so that it is easier to inspect in console.\n\t   * This method assumes console is available.\n\t   *\n\t   * @param {String} [path]\n\t   */\n\t\n\t  Vue.prototype.$log = function (path) {\n\t    var data = path ? getPath(this._data, path) : this._data;\n\t    if (data) {\n\t      data = clean(data);\n\t    }\n\t    // include computed fields\n\t    if (!path) {\n\t      for (var key in this.$options.computed) {\n\t        data[key] = clean(this[key]);\n\t      }\n\t    }\n\t    console.log(data);\n\t  };\n\t\n\t  /**\n\t   * \"clean\" a getter/setter converted object into a plain\n\t   * object copy.\n\t   *\n\t   * @param {Object} - obj\n\t   * @return {Object}\n\t   */\n\t\n\t  function clean(obj) {\n\t    return JSON.parse(JSON.stringify(obj));\n\t  }\n\t}\n\t\n\tfunction domAPI (Vue) {\n\t\n\t  /**\n\t   * Convenience on-instance nextTick. The callback is\n\t   * auto-bound to the instance, and this avoids component\n\t   * modules having to rely on the global Vue.\n\t   *\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$nextTick = function (fn) {\n\t    nextTick(fn, this);\n\t  };\n\t\n\t  /**\n\t   * Append instance to target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$appendTo = function (target, cb, withTransition) {\n\t    return insert(this, target, cb, withTransition, append, appendWithTransition);\n\t  };\n\t\n\t  /**\n\t   * Prepend instance to target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$prependTo = function (target, cb, withTransition) {\n\t    target = query(target);\n\t    if (target.hasChildNodes()) {\n\t      this.$before(target.firstChild, cb, withTransition);\n\t    } else {\n\t      this.$appendTo(target, cb, withTransition);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Insert instance before target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$before = function (target, cb, withTransition) {\n\t    return insert(this, target, cb, withTransition, beforeWithCb, beforeWithTransition);\n\t  };\n\t\n\t  /**\n\t   * Insert instance after target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$after = function (target, cb, withTransition) {\n\t    target = query(target);\n\t    if (target.nextSibling) {\n\t      this.$before(target.nextSibling, cb, withTransition);\n\t    } else {\n\t      this.$appendTo(target.parentNode, cb, withTransition);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Remove instance from DOM\n\t   *\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$remove = function (cb, withTransition) {\n\t    if (!this.$el.parentNode) {\n\t      return cb && cb();\n\t    }\n\t    var inDocument = this._isAttached && inDoc(this.$el);\n\t    // if we are not in document, no need to check\n\t    // for transitions\n\t    if (!inDocument) withTransition = false;\n\t    var self = this;\n\t    var realCb = function realCb() {\n\t      if (inDocument) self._callHook('detached');\n\t      if (cb) cb();\n\t    };\n\t    if (this._isFragment) {\n\t      removeNodeRange(this._fragmentStart, this._fragmentEnd, this, this._fragment, realCb);\n\t    } else {\n\t      var op = withTransition === false ? removeWithCb : removeWithTransition;\n\t      op(this.$el, this, realCb);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Shared DOM insertion function.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {Element} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition]\n\t   * @param {Function} op1 - op for non-transition insert\n\t   * @param {Function} op2 - op for transition insert\n\t   * @return vm\n\t   */\n\t\n\t  function insert(vm, target, cb, withTransition, op1, op2) {\n\t    target = query(target);\n\t    var targetIsDetached = !inDoc(target);\n\t    var op = withTransition === false || targetIsDetached ? op1 : op2;\n\t    var shouldCallHook = !targetIsDetached && !vm._isAttached && !inDoc(vm.$el);\n\t    if (vm._isFragment) {\n\t      mapNodeRange(vm._fragmentStart, vm._fragmentEnd, function (node) {\n\t        op(node, target, vm);\n\t      });\n\t      cb && cb();\n\t    } else {\n\t      op(vm.$el, target, vm, cb);\n\t    }\n\t    if (shouldCallHook) {\n\t      vm._callHook('attached');\n\t    }\n\t    return vm;\n\t  }\n\t\n\t  /**\n\t   * Check for selectors\n\t   *\n\t   * @param {String|Element} el\n\t   */\n\t\n\t  function query(el) {\n\t    return typeof el === 'string' ? document.querySelector(el) : el;\n\t  }\n\t\n\t  /**\n\t   * Append operation that takes a callback.\n\t   *\n\t   * @param {Node} el\n\t   * @param {Node} target\n\t   * @param {Vue} vm - unused\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function append(el, target, vm, cb) {\n\t    target.appendChild(el);\n\t    if (cb) cb();\n\t  }\n\t\n\t  /**\n\t   * InsertBefore operation that takes a callback.\n\t   *\n\t   * @param {Node} el\n\t   * @param {Node} target\n\t   * @param {Vue} vm - unused\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function beforeWithCb(el, target, vm, cb) {\n\t    before(el, target);\n\t    if (cb) cb();\n\t  }\n\t\n\t  /**\n\t   * Remove operation that takes a callback.\n\t   *\n\t   * @param {Node} el\n\t   * @param {Vue} vm - unused\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function removeWithCb(el, vm, cb) {\n\t    remove(el);\n\t    if (cb) cb();\n\t  }\n\t}\n\t\n\tfunction eventsAPI (Vue) {\n\t\n\t  /**\n\t   * Listen on the given `event` with `fn`.\n\t   *\n\t   * @param {String} event\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$on = function (event, fn) {\n\t    (this._events[event] || (this._events[event] = [])).push(fn);\n\t    modifyListenerCount(this, event, 1);\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Adds an `event` listener that will be invoked a single\n\t   * time then automatically removed.\n\t   *\n\t   * @param {String} event\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$once = function (event, fn) {\n\t    var self = this;\n\t    function on() {\n\t      self.$off(event, on);\n\t      fn.apply(this, arguments);\n\t    }\n\t    on.fn = fn;\n\t    this.$on(event, on);\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Remove the given callback for `event` or all\n\t   * registered callbacks.\n\t   *\n\t   * @param {String} event\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$off = function (event, fn) {\n\t    var cbs;\n\t    // all\n\t    if (!arguments.length) {\n\t      if (this.$parent) {\n\t        for (event in this._events) {\n\t          cbs = this._events[event];\n\t          if (cbs) {\n\t            modifyListenerCount(this, event, -cbs.length);\n\t          }\n\t        }\n\t      }\n\t      this._events = {};\n\t      return this;\n\t    }\n\t    // specific event\n\t    cbs = this._events[event];\n\t    if (!cbs) {\n\t      return this;\n\t    }\n\t    if (arguments.length === 1) {\n\t      modifyListenerCount(this, event, -cbs.length);\n\t      this._events[event] = null;\n\t      return this;\n\t    }\n\t    // specific handler\n\t    var cb;\n\t    var i = cbs.length;\n\t    while (i--) {\n\t      cb = cbs[i];\n\t      if (cb === fn || cb.fn === fn) {\n\t        modifyListenerCount(this, event, -1);\n\t        cbs.splice(i, 1);\n\t        break;\n\t      }\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Trigger an event on self.\n\t   *\n\t   * @param {String|Object} event\n\t   * @return {Boolean} shouldPropagate\n\t   */\n\t\n\t  Vue.prototype.$emit = function (event) {\n\t    var isSource = typeof event === 'string';\n\t    event = isSource ? event : event.name;\n\t    var cbs = this._events[event];\n\t    var shouldPropagate = isSource || !cbs;\n\t    if (cbs) {\n\t      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n\t      // this is a somewhat hacky solution to the question raised\n\t      // in #2102: for an inline component listener like <comp @test=\"doThis\">,\n\t      // the propagation handling is somewhat broken. Therefore we\n\t      // need to treat these inline callbacks differently.\n\t      var hasParentCbs = isSource && cbs.some(function (cb) {\n\t        return cb._fromParent;\n\t      });\n\t      if (hasParentCbs) {\n\t        shouldPropagate = false;\n\t      }\n\t      var args = toArray(arguments, 1);\n\t      for (var i = 0, l = cbs.length; i < l; i++) {\n\t        var cb = cbs[i];\n\t        var res = cb.apply(this, args);\n\t        if (res === true && (!hasParentCbs || cb._fromParent)) {\n\t          shouldPropagate = true;\n\t        }\n\t      }\n\t    }\n\t    return shouldPropagate;\n\t  };\n\t\n\t  /**\n\t   * Recursively broadcast an event to all children instances.\n\t   *\n\t   * @param {String|Object} event\n\t   * @param {...*} additional arguments\n\t   */\n\t\n\t  Vue.prototype.$broadcast = function (event) {\n\t    var isSource = typeof event === 'string';\n\t    event = isSource ? event : event.name;\n\t    // if no child has registered for this event,\n\t    // then there's no need to broadcast.\n\t    if (!this._eventsCount[event]) return;\n\t    var children = this.$children;\n\t    var args = toArray(arguments);\n\t    if (isSource) {\n\t      // use object event to indicate non-source emit\n\t      // on children\n\t      args[0] = { name: event, source: this };\n\t    }\n\t    for (var i = 0, l = children.length; i < l; i++) {\n\t      var child = children[i];\n\t      var shouldPropagate = child.$emit.apply(child, args);\n\t      if (shouldPropagate) {\n\t        child.$broadcast.apply(child, args);\n\t      }\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Recursively propagate an event up the parent chain.\n\t   *\n\t   * @param {String} event\n\t   * @param {...*} additional arguments\n\t   */\n\t\n\t  Vue.prototype.$dispatch = function (event) {\n\t    var shouldPropagate = this.$emit.apply(this, arguments);\n\t    if (!shouldPropagate) return;\n\t    var parent = this.$parent;\n\t    var args = toArray(arguments);\n\t    // use object event to indicate non-source emit\n\t    // on parents\n\t    args[0] = { name: event, source: this };\n\t    while (parent) {\n\t      shouldPropagate = parent.$emit.apply(parent, args);\n\t      parent = shouldPropagate ? parent.$parent : null;\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Modify the listener counts on all parents.\n\t   * This bookkeeping allows $broadcast to return early when\n\t   * no child has listened to a certain event.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {String} event\n\t   * @param {Number} count\n\t   */\n\t\n\t  var hookRE = /^hook:/;\n\t  function modifyListenerCount(vm, event, count) {\n\t    var parent = vm.$parent;\n\t    // hooks do not get broadcasted so no need\n\t    // to do bookkeeping for them\n\t    if (!parent || !count || hookRE.test(event)) return;\n\t    while (parent) {\n\t      parent._eventsCount[event] = (parent._eventsCount[event] || 0) + count;\n\t      parent = parent.$parent;\n\t    }\n\t  }\n\t}\n\t\n\tfunction lifecycleAPI (Vue) {\n\t\n\t  /**\n\t   * Set instance target element and kick off the compilation\n\t   * process. The passed in `el` can be a selector string, an\n\t   * existing Element, or a DocumentFragment (for block\n\t   * instances).\n\t   *\n\t   * @param {Element|DocumentFragment|string} el\n\t   * @public\n\t   */\n\t\n\t  Vue.prototype.$mount = function (el) {\n\t    if (this._isCompiled) {\n\t      (\"production\") !== 'production' && warn('$mount() should be called only once.');\n\t      return;\n\t    }\n\t    el = query(el);\n\t    if (!el) {\n\t      el = document.createElement('div');\n\t    }\n\t    this._compile(el);\n\t    this._initDOMHooks();\n\t    if (inDoc(this.$el)) {\n\t      this._callHook('attached');\n\t      ready.call(this);\n\t    } else {\n\t      this.$once('hook:attached', ready);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Mark an instance as ready.\n\t   */\n\t\n\t  function ready() {\n\t    this._isAttached = true;\n\t    this._isReady = true;\n\t    this._callHook('ready');\n\t  }\n\t\n\t  /**\n\t   * Teardown the instance, simply delegate to the internal\n\t   * _destroy.\n\t   */\n\t\n\t  Vue.prototype.$destroy = function (remove, deferCleanup) {\n\t    this._destroy(remove, deferCleanup);\n\t  };\n\t\n\t  /**\n\t   * Partially compile a piece of DOM and return a\n\t   * decompile function.\n\t   *\n\t   * @param {Element|DocumentFragment} el\n\t   * @param {Vue} [host]\n\t   * @return {Function}\n\t   */\n\t\n\t  Vue.prototype.$compile = function (el, host, scope, frag) {\n\t    return compile(el, this.$options, true)(this, el, host, scope, frag);\n\t  };\n\t}\n\t\n\t/**\n\t * The exposed Vue constructor.\n\t *\n\t * API conventions:\n\t * - public API methods/properties are prefixed with `$`\n\t * - internal methods/properties are prefixed with `_`\n\t * - non-prefixed properties are assumed to be proxied user\n\t *   data.\n\t *\n\t * @constructor\n\t * @param {Object} [options]\n\t * @public\n\t */\n\t\n\tfunction Vue(options) {\n\t  this._init(options);\n\t}\n\t\n\t// install internals\n\tinitMixin(Vue);\n\tstateMixin(Vue);\n\teventsMixin(Vue);\n\tlifecycleMixin(Vue);\n\tmiscMixin(Vue);\n\t\n\t// install APIs\n\tglobalAPI(Vue);\n\tdataAPI(Vue);\n\tdomAPI(Vue);\n\teventsAPI(Vue);\n\tlifecycleAPI(Vue);\n\t\n\tvar convertArray = vFor._postProcess;\n\t\n\t/**\n\t * Limit filter for arrays\n\t *\n\t * @param {Number} n\n\t * @param {Number} offset (Decimal expected)\n\t */\n\t\n\tfunction limitBy(arr, n, offset) {\n\t  offset = offset ? parseInt(offset, 10) : 0;\n\t  n = toNumber(n);\n\t  return typeof n === 'number' ? arr.slice(offset, offset + n) : arr;\n\t}\n\t\n\t/**\n\t * Filter filter for arrays\n\t *\n\t * @param {String} search\n\t * @param {String} [delimiter]\n\t * @param {String} ...dataKeys\n\t */\n\t\n\tfunction filterBy(arr, search, delimiter) {\n\t  arr = convertArray(arr);\n\t  if (search == null) {\n\t    return arr;\n\t  }\n\t  if (typeof search === 'function') {\n\t    return arr.filter(search);\n\t  }\n\t  // cast to lowercase string\n\t  search = ('' + search).toLowerCase();\n\t  // allow optional `in` delimiter\n\t  // because why not\n\t  var n = delimiter === 'in' ? 3 : 2;\n\t  // extract and flatten keys\n\t  var keys = toArray(arguments, n).reduce(function (prev, cur) {\n\t    return prev.concat(cur);\n\t  }, []);\n\t  var res = [];\n\t  var item, key, val, j;\n\t  for (var i = 0, l = arr.length; i < l; i++) {\n\t    item = arr[i];\n\t    val = item && item.$value || item;\n\t    j = keys.length;\n\t    if (j) {\n\t      while (j--) {\n\t        key = keys[j];\n\t        if (key === '$key' && contains(item.$key, search) || contains(getPath(val, key), search)) {\n\t          res.push(item);\n\t          break;\n\t        }\n\t      }\n\t    } else if (contains(item, search)) {\n\t      res.push(item);\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Filter filter for arrays\n\t *\n\t * @param {String} sortKey\n\t * @param {String} reverse\n\t */\n\t\n\tfunction orderBy(arr, sortKey, reverse) {\n\t  arr = convertArray(arr);\n\t  if (!sortKey) {\n\t    return arr;\n\t  }\n\t  var order = reverse && reverse < 0 ? -1 : 1;\n\t  // sort on a copy to avoid mutating original array\n\t  return arr.slice().sort(function (a, b) {\n\t    if (sortKey !== '$key') {\n\t      if (isObject(a) && '$value' in a) a = a.$value;\n\t      if (isObject(b) && '$value' in b) b = b.$value;\n\t    }\n\t    a = isObject(a) ? getPath(a, sortKey) : a;\n\t    b = isObject(b) ? getPath(b, sortKey) : b;\n\t    return a === b ? 0 : a > b ? order : -order;\n\t  });\n\t}\n\t\n\t/**\n\t * String contain helper\n\t *\n\t * @param {*} val\n\t * @param {String} search\n\t */\n\t\n\tfunction contains(val, search) {\n\t  var i;\n\t  if (isPlainObject(val)) {\n\t    var keys = Object.keys(val);\n\t    i = keys.length;\n\t    while (i--) {\n\t      if (contains(val[keys[i]], search)) {\n\t        return true;\n\t      }\n\t    }\n\t  } else if (isArray(val)) {\n\t    i = val.length;\n\t    while (i--) {\n\t      if (contains(val[i], search)) {\n\t        return true;\n\t      }\n\t    }\n\t  } else if (val != null) {\n\t    return val.toString().toLowerCase().indexOf(search) > -1;\n\t  }\n\t}\n\t\n\tvar digitsRE = /(\\d{3})(?=\\d)/g;\n\t\n\t// asset collections must be a plain object.\n\tvar filters = {\n\t\n\t  orderBy: orderBy,\n\t  filterBy: filterBy,\n\t  limitBy: limitBy,\n\t\n\t  /**\n\t   * Stringify value.\n\t   *\n\t   * @param {Number} indent\n\t   */\n\t\n\t  json: {\n\t    read: function read(value, indent) {\n\t      return typeof value === 'string' ? value : JSON.stringify(value, null, Number(indent) || 2);\n\t    },\n\t    write: function write(value) {\n\t      try {\n\t        return JSON.parse(value);\n\t      } catch (e) {\n\t        return value;\n\t      }\n\t    }\n\t  },\n\t\n\t  /**\n\t   * 'abc' => 'Abc'\n\t   */\n\t\n\t  capitalize: function capitalize(value) {\n\t    if (!value && value !== 0) return '';\n\t    value = value.toString();\n\t    return value.charAt(0).toUpperCase() + value.slice(1);\n\t  },\n\t\n\t  /**\n\t   * 'abc' => 'ABC'\n\t   */\n\t\n\t  uppercase: function uppercase(value) {\n\t    return value || value === 0 ? value.toString().toUpperCase() : '';\n\t  },\n\t\n\t  /**\n\t   * 'AbC' => 'abc'\n\t   */\n\t\n\t  lowercase: function lowercase(value) {\n\t    return value || value === 0 ? value.toString().toLowerCase() : '';\n\t  },\n\t\n\t  /**\n\t   * 12345 => $12,345.00\n\t   *\n\t   * @param {String} sign\n\t   */\n\t\n\t  currency: function currency(value, _currency) {\n\t    value = parseFloat(value);\n\t    if (!isFinite(value) || !value && value !== 0) return '';\n\t    _currency = _currency != null ? _currency : '$';\n\t    var stringified = Math.abs(value).toFixed(2);\n\t    var _int = stringified.slice(0, -3);\n\t    var i = _int.length % 3;\n\t    var head = i > 0 ? _int.slice(0, i) + (_int.length > 3 ? ',' : '') : '';\n\t    var _float = stringified.slice(-3);\n\t    var sign = value < 0 ? '-' : '';\n\t    return _currency + sign + head + _int.slice(i).replace(digitsRE, '$1,') + _float;\n\t  },\n\t\n\t  /**\n\t   * 'item' => 'items'\n\t   *\n\t   * @params\n\t   *  an array of strings corresponding to\n\t   *  the single, double, triple ... forms of the word to\n\t   *  be pluralized. When the number to be pluralized\n\t   *  exceeds the length of the args, it will use the last\n\t   *  entry in the array.\n\t   *\n\t   *  e.g. ['single', 'double', 'triple', 'multiple']\n\t   */\n\t\n\t  pluralize: function pluralize(value) {\n\t    var args = toArray(arguments, 1);\n\t    return args.length > 1 ? args[value % 10 - 1] || args[args.length - 1] : args[0] + (value === 1 ? '' : 's');\n\t  },\n\t\n\t  /**\n\t   * Debounce a handler function.\n\t   *\n\t   * @param {Function} handler\n\t   * @param {Number} delay = 300\n\t   * @return {Function}\n\t   */\n\t\n\t  debounce: function debounce(handler, delay) {\n\t    if (!handler) return;\n\t    if (!delay) {\n\t      delay = 300;\n\t    }\n\t    return _debounce(handler, delay);\n\t  }\n\t};\n\t\n\tvar partial = {\n\t\n\t  priority: PARTIAL,\n\t\n\t  params: ['name'],\n\t\n\t  // watch changes to name for dynamic partials\n\t  paramWatchers: {\n\t    name: function name(value) {\n\t      vIf.remove.call(this);\n\t      if (value) {\n\t        this.insert(value);\n\t      }\n\t    }\n\t  },\n\t\n\t  bind: function bind() {\n\t    this.anchor = createAnchor('v-partial');\n\t    replace(this.el, this.anchor);\n\t    this.insert(this.params.name);\n\t  },\n\t\n\t  insert: function insert(id) {\n\t    var partial = resolveAsset(this.vm.$options, 'partials', id);\n\t    if (false) {\n\t      assertAsset(partial, 'partial', id);\n\t    }\n\t    if (partial) {\n\t      this.factory = new FragmentFactory(this.vm, partial);\n\t      vIf.insert.call(this);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.frag) {\n\t      this.frag.destroy();\n\t    }\n\t  }\n\t};\n\t\n\t// This is the elementDirective that handles <content>\n\t// transclusions. It relies on the raw content of an\n\t// instance being stored as `$options._content` during\n\t// the transclude phase.\n\t\n\t// We are exporting two versions, one for named and one\n\t// for unnamed, because the unnamed slots must be compiled\n\t// AFTER all named slots have selected their content. So\n\t// we need to give them different priorities in the compilation\n\t// process. (See #1965)\n\t\n\tvar slot = {\n\t\n\t  priority: SLOT,\n\t\n\t  bind: function bind() {\n\t    var host = this.vm;\n\t    var raw = host.$options._content;\n\t    if (!raw) {\n\t      this.fallback();\n\t      return;\n\t    }\n\t    var context = host._context;\n\t    var slotName = this.params && this.params.name;\n\t    if (!slotName) {\n\t      // Default slot\n\t      this.tryCompile(extractFragment(raw.childNodes, raw, true), context, host);\n\t    } else {\n\t      // Named slot\n\t      var selector = '[slot=\"' + slotName + '\"]';\n\t      var nodes = raw.querySelectorAll(selector);\n\t      if (nodes.length) {\n\t        this.tryCompile(extractFragment(nodes, raw), context, host);\n\t      } else {\n\t        this.fallback();\n\t      }\n\t    }\n\t  },\n\t\n\t  tryCompile: function tryCompile(content, context, host) {\n\t    if (content.hasChildNodes()) {\n\t      this.compile(content, context, host);\n\t    } else {\n\t      this.fallback();\n\t    }\n\t  },\n\t\n\t  compile: function compile(content, context, host) {\n\t    if (content && context) {\n\t      var scope = host ? host._scope : this._scope;\n\t      this.unlink = context.$compile(content, host, scope, this._frag);\n\t    }\n\t    if (content) {\n\t      replace(this.el, content);\n\t    } else {\n\t      remove(this.el);\n\t    }\n\t  },\n\t\n\t  fallback: function fallback() {\n\t    this.compile(extractContent(this.el, true), this.vm);\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.unlink) {\n\t      this.unlink();\n\t    }\n\t  }\n\t};\n\t\n\tvar namedSlot = extend(extend({}, slot), {\n\t  priority: slot.priority + 1,\n\t  params: ['name']\n\t});\n\t\n\t/**\n\t * Extract qualified content nodes from a node list.\n\t *\n\t * @param {NodeList} nodes\n\t * @param {Element} parent\n\t * @param {Boolean} main\n\t * @return {DocumentFragment}\n\t */\n\t\n\tfunction extractFragment(nodes, parent, main) {\n\t  var frag = document.createDocumentFragment();\n\t  for (var i = 0, l = nodes.length; i < l; i++) {\n\t    var node = nodes[i];\n\t    // if this is the main outlet, we want to skip all\n\t    // previously selected nodes;\n\t    // otherwise, we want to mark the node as selected.\n\t    // clone the node so the original raw content remains\n\t    // intact. this ensures proper re-compilation in cases\n\t    // where the outlet is inside a conditional block\n\t    if (main && !node.__v_selected) {\n\t      append(node);\n\t    } else if (!main && node.parentNode === parent) {\n\t      node.__v_selected = true;\n\t      append(node);\n\t    }\n\t  }\n\t  return frag;\n\t\n\t  function append(node) {\n\t    if (isTemplate(node) && !node.hasAttribute('v-if') && !node.hasAttribute('v-for')) {\n\t      node = parseTemplate(node);\n\t    }\n\t    node = cloneNode(node);\n\t    frag.appendChild(node);\n\t  }\n\t}\n\t\n\tvar elementDirectives = {\n\t  slot: slot,\n\t  _namedSlot: namedSlot, // same as slot but with higher priority\n\t  partial: partial\n\t};\n\t\n\tVue.version = '1.0.15';\n\t\n\t/**\n\t * Vue and every constructor that extends Vue has an\n\t * associated options object, which can be accessed during\n\t * compilation steps as `this.constructor.options`.\n\t *\n\t * These can be seen as the default options of every\n\t * Vue instance.\n\t */\n\t\n\tVue.options = {\n\t  directives: publicDirectives,\n\t  elementDirectives: elementDirectives,\n\t  filters: filters,\n\t  transitions: {},\n\t  components: {},\n\t  partials: {},\n\t  replace: true\n\t};\n\t\n\t// devtools global hook\n\t/* istanbul ignore if */\n\tif (false) {\n\t  if (window.__VUE_DEVTOOLS_GLOBAL_HOOK__) {\n\t    window.__VUE_DEVTOOLS_GLOBAL_HOOK__.emit('init', Vue);\n\t  } else if (/Chrome\\/\\d+/.test(navigator.userAgent)) {\n\t    console.log('Download the Vue Devtools for a better development experience:\\n' + 'https://github.com/vuejs/vue-devtools');\n\t  }\n\t}\n\t\n\tmodule.exports = Vue;\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** app.3fbbfba608c9f053a7c0.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/static/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 0496cd071a536b7567e8\n **/","import Vue from 'vue'\nimport App from './App'\n\n/* eslint-disable no-new */\nnew Vue({\n  el: 'body',\n  components: { App }\n})\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/main.js\n **/","<template>\n  <div id=\"app\">\n    <identity></identity>\n    <projects :show=\"show\"></projects>\n  </div>\n</template>\n\n<script>\nimport Identity from './components/Identity'\nimport Projects from './components/Projects'\n\nexport default {\n  components: {\n    Identity,\n    Projects\n  },\n  data () {\n    return {\n      show: false\n    }\n  },\n  events: {\n    'toggle-overlay': function (show) {\n      this.show = show\n    }\n  }\n}\n</script>\n\n<style>\nbody {\n  font-family: \"Lato\", sans-serif;\n  font-style: normal;\n  font-weight: 300;\n  font-size: 13px;\n  margin: 0;padding: 0;\n  height: 100%;\n}\nhtml {\n  height: 100%;\n}\n#app {\n  height: 100%;\n}\n</style>\n\n\n\n/** WEBPACK FOOTER **\n ** App.vue?114dce46\n **/","<template>\n  <div id=\"showcase\">\n    <div v-for=\"(index, project) in projects\">\n      <project :project=\"project\" :index=\"index\" :show=\"show\" transition=\"appear\" transition-mode=\"out-in\" v-if=\"visible\"></project><!--\n      -->\n    </div>\n  </div>\n</template>\n\n<script>\nimport Project from './Project'\n\nexport default {\n  props: ['show'],\n  components: {\n    Project\n  },\n  data () {\n    return {\n      visible: false,\n      projects: [{\n        name: 'Conquest',\n        desc: 'Multiplayer Online RTS game in browser',\n        role: 'Front-end developer',\n        technologies: 'HTML / CSS / JavaScript / Gulp',\n        class: 'conquest',\n        url: 'http://conquest.io'\n      }, {\n        name: 'Worldia',\n        desc: 'SaaS for customizing trips. Worked on v2 not yet released',\n        role: 'Front-end developer',\n        technologies: 'HTML / CSS / AngularJS / Symfony2 / CircleCi',\n        class: 'worldia',\n        url: 'http://worldia.com'\n      }, {\n        name: 'Moodlr',\n        desc: 'Tweeter like for moods',\n        role: 'Back-end developer',\n        technologies: 'Ruby on Rails / Rspec / Heroku / CircleCi / Travis',\n        class: 'moodlr',\n        url: 'http://moodlr.herokuapp.com'\n      }, {\n        name: 'Les petits frenchies',\n        desc: 'French fashion blog and e-shop',\n        role: 'Wordpress developer',\n        technologies: 'WordPress / HTML / CSS / JavaScript',\n        class: 'lpf',\n        url: 'http://lespetitsfrenchies.fr'\n\n      }, {\n        name: 'Striply',\n        desc: 'Online portfolio for comic strip artists',\n        role: 'Lead developer',\n        technologies: 'FatFreeFramework / HTML / Sass / JavaScript / Gulp',\n        class: 'striply',\n        url: 'https://github.com/Mteuahasan/backend-project-hetic'\n      }, {\n        name: 'Versailles Sciences Lab',\n        desc: 'Insitutional website for the Versaille University',\n        role: 'Wordpress developer',\n        technologies: 'WordPress / HTML / CSS / JavaScript',\n        class: 'vsl',\n        url: 'http://vsl.prism.uvsq.fr/'\n      }, {\n        name: 'Infinity',\n        desc: 'Galactic physics simulation',\n        role: 'Physics & WebGL hacker',\n        technologies: 'WebGL',\n        class: 'infinity',\n        url: 'http://matthieulachassagne.com/infinity'\n      }, {\n        name: 'This website',\n        desc: 'is a portfolio.',\n        role: 'Web development',\n        technologies: 'Vue.js / Webpack / Babel',\n        class: 'perso',\n        url: 'http://github.com/mteuahasan'\n      }, {\n        name: 'Coming soon',\n        desc: 'other stuffs...',\n        role: 'including...',\n        technologies: 'React.js / Electron...',\n        class: ''\n      }]\n    }\n  },\n  ready () {\n    this.visible = true\n  }\n}\n</script>\n\n<style>\n  #showcase {\n    width: 100%;\n    height: 50%;\n    position: absolute;\n    bottom: 0;\n    top: 50%;\n  }\n\n  #showcase > div {\n    float: left;\n    width: 33.3333%;\n    height: auto;\n    display: inline-block;\n  }\n</style>\n\n\n\n/** WEBPACK FOOTER **\n ** Projects.vue?46683ae2\n **/","module.exports = \"<div id=app><identity></identity><projects :show=show></projects></div>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./src/App.vue\n ** module id = 9\n ** module chunks = 0\n **/","module.exports = \"<div class=identity><h1>Matthieu Lachassagne</h1><h2>full-stack padawan</h2><p>I <span>❤</span> {{ skill }}</p></div>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/Identity.vue\n ** module id = 10\n ** module chunks = 0\n **/","module.exports = \"<div id=showcase><div v-for=\\\"(index, project) in projects\\\"><project :project=project :index=index :show=show transition=appear transition-mode=out-in v-if=visible></project></div></div>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/Projects.vue\n ** module id = 11\n ** module chunks = 0\n **/","module.exports = \"<div class=\\\"project {{project.class}} project-{{index}}\\\" v-on:click=clicked _v-9418e7c8=\\\"\\\"><a href={{project.url}} target=_blank _v-9418e7c8=\\\"\\\"><h2 _v-9418e7c8=\\\"\\\">{{project.name}}</h2><p class=desc _v-9418e7c8=\\\"\\\">{{project.desc}}</p><div class=overlay _v-9418e7c8=\\\"\\\"><h2 _v-9418e7c8=\\\"\\\">{{project.role}}</h2><p _v-9418e7c8=\\\"\\\">{{project.technologies}}</p></div></a></div>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/template-rewriter.js?id=_v-9418e7c8&file=Project.vue!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/Project.vue\n ** module id = 12\n ** module chunks = 0\n **/","var __vue_script__, __vue_template__\nrequire(\"-!./../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"extract\\\":true,\\\"remove\\\":true}!vue-style-loader!css-loader?sourceMap!./../node_modules/vue-loader/lib/style-rewriter.js?id=_v-48a1a815&file=App.vue!./../node_modules/vue-loader/lib/selector.js?type=style&index=0!./App.vue\")\n__vue_script__ = require(\"-!babel!eslint!./../node_modules/vue-loader/lib/selector.js?type=script&index=0!./App.vue\")\n__vue_template__ = require(\"-!vue-html-loader!./../node_modules/vue-loader/lib/selector.js?type=template&index=0!./App.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) { (typeof module.exports === \"function\" ? module.exports.options : module.exports).template = __vue_template__ }\nif (module.hot) {(function () {  module.hot.accept()\n  var hotAPI = require(\"vue-hot-reload-api\")\n  hotAPI.install(require(\"vue\"), true)\n  if (!hotAPI.compatible) return\n  var id = \"/Users/matthieulachassagne/Sites/JS/VUE/matthieulachassagne.com/src/App.vue\"\n  if (!module.hot.data) {\n    hotAPI.createRecord(id, module.exports)\n  } else {\n    hotAPI.update(id, module.exports, __vue_template__)\n  }\n})()}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/App.vue\n ** module id = 13\n ** module chunks = 0\n **/","var __vue_script__, __vue_template__\nrequire(\"-!./../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"extract\\\":true,\\\"remove\\\":true}!vue-style-loader!css-loader?sourceMap!./../../node_modules/vue-loader/lib/style-rewriter.js?id=_v-6829a26a&file=Identity.vue!./../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./Identity.vue\")\n__vue_script__ = require(\"-!babel!eslint!./../../node_modules/vue-loader/lib/selector.js?type=script&index=0!./Identity.vue\")\n__vue_template__ = require(\"-!vue-html-loader!./../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./Identity.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) { (typeof module.exports === \"function\" ? module.exports.options : module.exports).template = __vue_template__ }\nif (module.hot) {(function () {  module.hot.accept()\n  var hotAPI = require(\"vue-hot-reload-api\")\n  hotAPI.install(require(\"vue\"), true)\n  if (!hotAPI.compatible) return\n  var id = \"/Users/matthieulachassagne/Sites/JS/VUE/matthieulachassagne.com/src/components/Identity.vue\"\n  if (!module.hot.data) {\n    hotAPI.createRecord(id, module.exports)\n  } else {\n    hotAPI.update(id, module.exports, __vue_template__)\n  }\n})()}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/components/Identity.vue\n ** module id = 14\n ** module chunks = 0\n **/","var __vue_script__, __vue_template__\nrequire(\"-!./../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"extract\\\":true,\\\"remove\\\":true}!vue-style-loader!css-loader?sourceMap!./../../node_modules/vue-loader/lib/style-rewriter.js?id=_v-9418e7c8&file=Project.vue&scoped=true!./../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./Project.vue\")\n__vue_script__ = require(\"-!babel!eslint!./../../node_modules/vue-loader/lib/selector.js?type=script&index=0!./Project.vue\")\n__vue_template__ = require(\"-!vue-html-loader!./../../node_modules/vue-loader/lib/template-rewriter.js?id=_v-9418e7c8&file=Project.vue!./../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./Project.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) { (typeof module.exports === \"function\" ? module.exports.options : module.exports).template = __vue_template__ }\nif (module.hot) {(function () {  module.hot.accept()\n  var hotAPI = require(\"vue-hot-reload-api\")\n  hotAPI.install(require(\"vue\"), true)\n  if (!hotAPI.compatible) return\n  var id = \"/Users/matthieulachassagne/Sites/JS/VUE/matthieulachassagne.com/src/components/Project.vue\"\n  if (!module.hot.data) {\n    hotAPI.createRecord(id, module.exports)\n  } else {\n    hotAPI.update(id, module.exports, __vue_template__)\n  }\n})()}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/components/Project.vue\n ** module id = 15\n ** module chunks = 0\n **/","var __vue_script__, __vue_template__\nrequire(\"-!./../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"extract\\\":true,\\\"remove\\\":true}!vue-style-loader!css-loader?sourceMap!./../../node_modules/vue-loader/lib/style-rewriter.js?id=_v-0c299887&file=Projects.vue!./../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./Projects.vue\")\n__vue_script__ = require(\"-!babel!eslint!./../../node_modules/vue-loader/lib/selector.js?type=script&index=0!./Projects.vue\")\n__vue_template__ = require(\"-!vue-html-loader!./../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./Projects.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) { (typeof module.exports === \"function\" ? module.exports.options : module.exports).template = __vue_template__ }\nif (module.hot) {(function () {  module.hot.accept()\n  var hotAPI = require(\"vue-hot-reload-api\")\n  hotAPI.install(require(\"vue\"), true)\n  if (!hotAPI.compatible) return\n  var id = \"/Users/matthieulachassagne/Sites/JS/VUE/matthieulachassagne.com/src/components/Projects.vue\"\n  if (!module.hot.data) {\n    hotAPI.createRecord(id, module.exports)\n  } else {\n    hotAPI.update(id, module.exports, __vue_template__)\n  }\n})()}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/components/Projects.vue\n ** module id = 16\n ** module chunks = 0\n **/","/*!\n * Vue.js v1.0.15\n * (c) 2016 Evan You\n * Released under the MIT License.\n */\n'use strict';\n\nfunction set(obj, key, val) {\n  if (hasOwn(obj, key)) {\n    obj[key] = val;\n    return;\n  }\n  if (obj._isVue) {\n    set(obj._data, key, val);\n    return;\n  }\n  var ob = obj.__ob__;\n  if (!ob) {\n    obj[key] = val;\n    return;\n  }\n  ob.convert(key, val);\n  ob.dep.notify();\n  if (ob.vms) {\n    var i = ob.vms.length;\n    while (i--) {\n      var vm = ob.vms[i];\n      vm._proxy(key);\n      vm._digest();\n    }\n  }\n  return val;\n}\n\n/**\n * Delete a property and trigger change if necessary.\n *\n * @param {Object} obj\n * @param {String} key\n */\n\nfunction del(obj, key) {\n  if (!hasOwn(obj, key)) {\n    return;\n  }\n  delete obj[key];\n  var ob = obj.__ob__;\n  if (!ob) {\n    return;\n  }\n  ob.dep.notify();\n  if (ob.vms) {\n    var i = ob.vms.length;\n    while (i--) {\n      var vm = ob.vms[i];\n      vm._unproxy(key);\n      vm._digest();\n    }\n  }\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n/**\n * Check whether the object has the property.\n *\n * @param {Object} obj\n * @param {String} key\n * @return {Boolean}\n */\n\nfunction hasOwn(obj, key) {\n  return hasOwnProperty.call(obj, key);\n}\n\n/**\n * Check if an expression is a literal value.\n *\n * @param {String} exp\n * @return {Boolean}\n */\n\nvar literalValueRE = /^\\s?(true|false|[\\d\\.]+|'[^']*'|\"[^\"]*\")\\s?$/;\n\nfunction isLiteral(exp) {\n  return literalValueRE.test(exp);\n}\n\n/**\n * Check if a string starts with $ or _\n *\n * @param {String} str\n * @return {Boolean}\n */\n\nfunction isReserved(str) {\n  var c = (str + '').charCodeAt(0);\n  return c === 0x24 || c === 0x5F;\n}\n\n/**\n * Guard text output, make sure undefined outputs\n * empty string\n *\n * @param {*} value\n * @return {String}\n */\n\nfunction _toString(value) {\n  return value == null ? '' : value.toString();\n}\n\n/**\n * Check and convert possible numeric strings to numbers\n * before setting back to data\n *\n * @param {*} value\n * @return {*|Number}\n */\n\nfunction toNumber(value) {\n  if (typeof value !== 'string') {\n    return value;\n  } else {\n    var parsed = Number(value);\n    return isNaN(parsed) ? value : parsed;\n  }\n}\n\n/**\n * Convert string boolean literals into real booleans.\n *\n * @param {*} value\n * @return {*|Boolean}\n */\n\nfunction toBoolean(value) {\n  return value === 'true' ? true : value === 'false' ? false : value;\n}\n\n/**\n * Strip quotes from a string\n *\n * @param {String} str\n * @return {String | false}\n */\n\nfunction stripQuotes(str) {\n  var a = str.charCodeAt(0);\n  var b = str.charCodeAt(str.length - 1);\n  return a === b && (a === 0x22 || a === 0x27) ? str.slice(1, -1) : str;\n}\n\n/**\n * Camelize a hyphen-delmited string.\n *\n * @param {String} str\n * @return {String}\n */\n\nvar camelizeRE = /-(\\w)/g;\n\nfunction camelize(str) {\n  return str.replace(camelizeRE, toUpper);\n}\n\nfunction toUpper(_, c) {\n  return c ? c.toUpperCase() : '';\n}\n\n/**\n * Hyphenate a camelCase string.\n *\n * @param {String} str\n * @return {String}\n */\n\nvar hyphenateRE = /([a-z\\d])([A-Z])/g;\n\nfunction hyphenate(str) {\n  return str.replace(hyphenateRE, '$1-$2').toLowerCase();\n}\n\n/**\n * Converts hyphen/underscore/slash delimitered names into\n * camelized classNames.\n *\n * e.g. my-component => MyComponent\n *      some_else    => SomeElse\n *      some/comp    => SomeComp\n *\n * @param {String} str\n * @return {String}\n */\n\nvar classifyRE = /(?:^|[-_\\/])(\\w)/g;\n\nfunction classify(str) {\n  return str.replace(classifyRE, toUpper);\n}\n\n/**\n * Simple bind, faster than native\n *\n * @param {Function} fn\n * @param {Object} ctx\n * @return {Function}\n */\n\nfunction bind$1(fn, ctx) {\n  return function (a) {\n    var l = arguments.length;\n    return l ? l > 1 ? fn.apply(ctx, arguments) : fn.call(ctx, a) : fn.call(ctx);\n  };\n}\n\n/**\n * Convert an Array-like object to a real Array.\n *\n * @param {Array-like} list\n * @param {Number} [start] - start index\n * @return {Array}\n */\n\nfunction toArray(list, start) {\n  start = start || 0;\n  var i = list.length - start;\n  var ret = new Array(i);\n  while (i--) {\n    ret[i] = list[i + start];\n  }\n  return ret;\n}\n\n/**\n * Mix properties into target object.\n *\n * @param {Object} to\n * @param {Object} from\n */\n\nfunction extend(to, from) {\n  var keys = Object.keys(from);\n  var i = keys.length;\n  while (i--) {\n    to[keys[i]] = from[keys[i]];\n  }\n  return to;\n}\n\n/**\n * Quick object check - this is primarily used to tell\n * Objects from primitive values when we know the value\n * is a JSON-compliant type.\n *\n * @param {*} obj\n * @return {Boolean}\n */\n\nfunction isObject(obj) {\n  return obj !== null && typeof obj === 'object';\n}\n\n/**\n * Strict object type check. Only returns true\n * for plain JavaScript objects.\n *\n * @param {*} obj\n * @return {Boolean}\n */\n\nvar toString = Object.prototype.toString;\nvar OBJECT_STRING = '[object Object]';\n\nfunction isPlainObject(obj) {\n  return toString.call(obj) === OBJECT_STRING;\n}\n\n/**\n * Array type check.\n *\n * @param {*} obj\n * @return {Boolean}\n */\n\nvar isArray = Array.isArray;\n\n/**\n * Define a non-enumerable property\n *\n * @param {Object} obj\n * @param {String} key\n * @param {*} val\n * @param {Boolean} [enumerable]\n */\n\nfunction def(obj, key, val, enumerable) {\n  Object.defineProperty(obj, key, {\n    value: val,\n    enumerable: !!enumerable,\n    writable: true,\n    configurable: true\n  });\n}\n\n/**\n * Debounce a function so it only gets called after the\n * input stops arriving after the given wait period.\n *\n * @param {Function} func\n * @param {Number} wait\n * @return {Function} - the debounced function\n */\n\nfunction _debounce(func, wait) {\n  var timeout, args, context, timestamp, result;\n  var later = function later() {\n    var last = Date.now() - timestamp;\n    if (last < wait && last >= 0) {\n      timeout = setTimeout(later, wait - last);\n    } else {\n      timeout = null;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    }\n  };\n  return function () {\n    context = this;\n    args = arguments;\n    timestamp = Date.now();\n    if (!timeout) {\n      timeout = setTimeout(later, wait);\n    }\n    return result;\n  };\n}\n\n/**\n * Manual indexOf because it's slightly faster than\n * native.\n *\n * @param {Array} arr\n * @param {*} obj\n */\n\nfunction indexOf(arr, obj) {\n  var i = arr.length;\n  while (i--) {\n    if (arr[i] === obj) return i;\n  }\n  return -1;\n}\n\n/**\n * Make a cancellable version of an async callback.\n *\n * @param {Function} fn\n * @return {Function}\n */\n\nfunction cancellable(fn) {\n  var cb = function cb() {\n    if (!cb.cancelled) {\n      return fn.apply(this, arguments);\n    }\n  };\n  cb.cancel = function () {\n    cb.cancelled = true;\n  };\n  return cb;\n}\n\n/**\n * Check if two values are loosely equal - that is,\n * if they are plain objects, do they have the same shape?\n *\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n */\n\nfunction looseEqual(a, b) {\n  /* eslint-disable eqeqeq */\n  return a == b || (isObject(a) && isObject(b) ? JSON.stringify(a) === JSON.stringify(b) : false);\n  /* eslint-enable eqeqeq */\n}\n\nvar hasProto = ('__proto__' in {});\n\n// Browser environment sniffing\nvar inBrowser = typeof window !== 'undefined' && Object.prototype.toString.call(window) !== '[object Object]';\n\nvar isIE9 = inBrowser && navigator.userAgent.toLowerCase().indexOf('msie 9.0') > 0;\n\nvar isAndroid = inBrowser && navigator.userAgent.toLowerCase().indexOf('android') > 0;\n\nvar transitionProp = undefined;\nvar transitionEndEvent = undefined;\nvar animationProp = undefined;\nvar animationEndEvent = undefined;\n\n// Transition property/event sniffing\nif (inBrowser && !isIE9) {\n  var isWebkitTrans = window.ontransitionend === undefined && window.onwebkittransitionend !== undefined;\n  var isWebkitAnim = window.onanimationend === undefined && window.onwebkitanimationend !== undefined;\n  transitionProp = isWebkitTrans ? 'WebkitTransition' : 'transition';\n  transitionEndEvent = isWebkitTrans ? 'webkitTransitionEnd' : 'transitionend';\n  animationProp = isWebkitAnim ? 'WebkitAnimation' : 'animation';\n  animationEndEvent = isWebkitAnim ? 'webkitAnimationEnd' : 'animationend';\n}\n\n/**\n * Defer a task to execute it asynchronously. Ideally this\n * should be executed as a microtask, so we leverage\n * MutationObserver if it's available, and fallback to\n * setTimeout(0).\n *\n * @param {Function} cb\n * @param {Object} ctx\n */\n\nvar nextTick = (function () {\n  var callbacks = [];\n  var pending = false;\n  var timerFunc;\n  function nextTickHandler() {\n    pending = false;\n    var copies = callbacks.slice(0);\n    callbacks = [];\n    for (var i = 0; i < copies.length; i++) {\n      copies[i]();\n    }\n  }\n  /* istanbul ignore if */\n  if (typeof MutationObserver !== 'undefined') {\n    var counter = 1;\n    var observer = new MutationObserver(nextTickHandler);\n    var textNode = document.createTextNode(counter);\n    observer.observe(textNode, {\n      characterData: true\n    });\n    timerFunc = function () {\n      counter = (counter + 1) % 2;\n      textNode.data = counter;\n    };\n  } else {\n    timerFunc = setTimeout;\n  }\n  return function (cb, ctx) {\n    var func = ctx ? function () {\n      cb.call(ctx);\n    } : cb;\n    callbacks.push(func);\n    if (pending) return;\n    pending = true;\n    timerFunc(nextTickHandler, 0);\n  };\n})();\n\nfunction Cache(limit) {\n  this.size = 0;\n  this.limit = limit;\n  this.head = this.tail = undefined;\n  this._keymap = Object.create(null);\n}\n\nvar p = Cache.prototype;\n\n/**\n * Put <value> into the cache associated with <key>.\n * Returns the entry which was removed to make room for\n * the new entry. Otherwise undefined is returned.\n * (i.e. if there was enough room already).\n *\n * @param {String} key\n * @param {*} value\n * @return {Entry|undefined}\n */\n\np.put = function (key, value) {\n  var removed;\n  if (this.size === this.limit) {\n    removed = this.shift();\n  }\n\n  var entry = this.get(key, true);\n  if (!entry) {\n    entry = {\n      key: key\n    };\n    this._keymap[key] = entry;\n    if (this.tail) {\n      this.tail.newer = entry;\n      entry.older = this.tail;\n    } else {\n      this.head = entry;\n    }\n    this.tail = entry;\n    this.size++;\n  }\n  entry.value = value;\n\n  return removed;\n};\n\n/**\n * Purge the least recently used (oldest) entry from the\n * cache. Returns the removed entry or undefined if the\n * cache was empty.\n */\n\np.shift = function () {\n  var entry = this.head;\n  if (entry) {\n    this.head = this.head.newer;\n    this.head.older = undefined;\n    entry.newer = entry.older = undefined;\n    this._keymap[entry.key] = undefined;\n    this.size--;\n  }\n  return entry;\n};\n\n/**\n * Get and register recent use of <key>. Returns the value\n * associated with <key> or undefined if not in cache.\n *\n * @param {String} key\n * @param {Boolean} returnEntry\n * @return {Entry|*}\n */\n\np.get = function (key, returnEntry) {\n  var entry = this._keymap[key];\n  if (entry === undefined) return;\n  if (entry === this.tail) {\n    return returnEntry ? entry : entry.value;\n  }\n  // HEAD--------------TAIL\n  //   <.older   .newer>\n  //  <--- add direction --\n  //   A  B  C  <D>  E\n  if (entry.newer) {\n    if (entry === this.head) {\n      this.head = entry.newer;\n    }\n    entry.newer.older = entry.older; // C <-- E.\n  }\n  if (entry.older) {\n    entry.older.newer = entry.newer; // C. --> E\n  }\n  entry.newer = undefined; // D --x\n  entry.older = this.tail; // D. --> E\n  if (this.tail) {\n    this.tail.newer = entry; // E. <-- D\n  }\n  this.tail = entry;\n  return returnEntry ? entry : entry.value;\n};\n\nvar cache$1 = new Cache(1000);\nvar filterTokenRE = /[^\\s'\"]+|'[^']*'|\"[^\"]*\"/g;\nvar reservedArgRE = /^in$|^-?\\d+/;\n\n/**\n * Parser state\n */\n\nvar str;\nvar dir;\nvar c;\nvar prev;\nvar i;\nvar l;\nvar lastFilterIndex;\nvar inSingle;\nvar inDouble;\nvar curly;\nvar square;\nvar paren;\n/**\n * Push a filter to the current directive object\n */\n\nfunction pushFilter() {\n  var exp = str.slice(lastFilterIndex, i).trim();\n  var filter;\n  if (exp) {\n    filter = {};\n    var tokens = exp.match(filterTokenRE);\n    filter.name = tokens[0];\n    if (tokens.length > 1) {\n      filter.args = tokens.slice(1).map(processFilterArg);\n    }\n  }\n  if (filter) {\n    (dir.filters = dir.filters || []).push(filter);\n  }\n  lastFilterIndex = i + 1;\n}\n\n/**\n * Check if an argument is dynamic and strip quotes.\n *\n * @param {String} arg\n * @return {Object}\n */\n\nfunction processFilterArg(arg) {\n  if (reservedArgRE.test(arg)) {\n    return {\n      value: toNumber(arg),\n      dynamic: false\n    };\n  } else {\n    var stripped = stripQuotes(arg);\n    var dynamic = stripped === arg;\n    return {\n      value: dynamic ? arg : stripped,\n      dynamic: dynamic\n    };\n  }\n}\n\n/**\n * Parse a directive value and extract the expression\n * and its filters into a descriptor.\n *\n * Example:\n *\n * \"a + 1 | uppercase\" will yield:\n * {\n *   expression: 'a + 1',\n *   filters: [\n *     { name: 'uppercase', args: null }\n *   ]\n * }\n *\n * @param {String} str\n * @return {Object}\n */\n\nfunction parseDirective(s) {\n\n  var hit = cache$1.get(s);\n  if (hit) {\n    return hit;\n  }\n\n  // reset parser state\n  str = s;\n  inSingle = inDouble = false;\n  curly = square = paren = 0;\n  lastFilterIndex = 0;\n  dir = {};\n\n  for (i = 0, l = str.length; i < l; i++) {\n    prev = c;\n    c = str.charCodeAt(i);\n    if (inSingle) {\n      // check single quote\n      if (c === 0x27 && prev !== 0x5C) inSingle = !inSingle;\n    } else if (inDouble) {\n      // check double quote\n      if (c === 0x22 && prev !== 0x5C) inDouble = !inDouble;\n    } else if (c === 0x7C && // pipe\n    str.charCodeAt(i + 1) !== 0x7C && str.charCodeAt(i - 1) !== 0x7C) {\n      if (dir.expression == null) {\n        // first filter, end of expression\n        lastFilterIndex = i + 1;\n        dir.expression = str.slice(0, i).trim();\n      } else {\n        // already has filter\n        pushFilter();\n      }\n    } else {\n      switch (c) {\n        case 0x22:\n          inDouble = true;break; // \"\n        case 0x27:\n          inSingle = true;break; // '\n        case 0x28:\n          paren++;break; // (\n        case 0x29:\n          paren--;break; // )\n        case 0x5B:\n          square++;break; // [\n        case 0x5D:\n          square--;break; // ]\n        case 0x7B:\n          curly++;break; // {\n        case 0x7D:\n          curly--;break; // }\n      }\n    }\n  }\n\n  if (dir.expression == null) {\n    dir.expression = str.slice(0, i).trim();\n  } else if (lastFilterIndex !== 0) {\n    pushFilter();\n  }\n\n  cache$1.put(s, dir);\n  return dir;\n}\n\nvar directive = Object.freeze({\n  parseDirective: parseDirective\n});\n\nvar regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\nvar cache = undefined;\nvar tagRE = undefined;\nvar htmlRE = undefined;\n/**\n * Escape a string so it can be used in a RegExp\n * constructor.\n *\n * @param {String} str\n */\n\nfunction escapeRegex(str) {\n  return str.replace(regexEscapeRE, '\\\\$&');\n}\n\nfunction compileRegex() {\n  var open = escapeRegex(config.delimiters[0]);\n  var close = escapeRegex(config.delimiters[1]);\n  var unsafeOpen = escapeRegex(config.unsafeDelimiters[0]);\n  var unsafeClose = escapeRegex(config.unsafeDelimiters[1]);\n  tagRE = new RegExp(unsafeOpen + '(.+?)' + unsafeClose + '|' + open + '(.+?)' + close, 'g');\n  htmlRE = new RegExp('^' + unsafeOpen + '.*' + unsafeClose + '$');\n  // reset cache\n  cache = new Cache(1000);\n}\n\n/**\n * Parse a template text string into an array of tokens.\n *\n * @param {String} text\n * @return {Array<Object> | null}\n *               - {String} type\n *               - {String} value\n *               - {Boolean} [html]\n *               - {Boolean} [oneTime]\n */\n\nfunction parseText(text) {\n  if (!cache) {\n    compileRegex();\n  }\n  var hit = cache.get(text);\n  if (hit) {\n    return hit;\n  }\n  text = text.replace(/\\n/g, '');\n  if (!tagRE.test(text)) {\n    return null;\n  }\n  var tokens = [];\n  var lastIndex = tagRE.lastIndex = 0;\n  var match, index, html, value, first, oneTime;\n  /* eslint-disable no-cond-assign */\n  while (match = tagRE.exec(text)) {\n    /* eslint-enable no-cond-assign */\n    index = match.index;\n    // push text token\n    if (index > lastIndex) {\n      tokens.push({\n        value: text.slice(lastIndex, index)\n      });\n    }\n    // tag token\n    html = htmlRE.test(match[0]);\n    value = html ? match[1] : match[2];\n    first = value.charCodeAt(0);\n    oneTime = first === 42; // *\n    value = oneTime ? value.slice(1) : value;\n    tokens.push({\n      tag: true,\n      value: value.trim(),\n      html: html,\n      oneTime: oneTime\n    });\n    lastIndex = index + match[0].length;\n  }\n  if (lastIndex < text.length) {\n    tokens.push({\n      value: text.slice(lastIndex)\n    });\n  }\n  cache.put(text, tokens);\n  return tokens;\n}\n\n/**\n * Format a list of tokens into an expression.\n * e.g. tokens parsed from 'a {{b}} c' can be serialized\n * into one single expression as '\"a \" + b + \" c\"'.\n *\n * @param {Array} tokens\n * @param {Vue} [vm]\n * @return {String}\n */\n\nfunction tokensToExp(tokens, vm) {\n  if (tokens.length > 1) {\n    return tokens.map(function (token) {\n      return formatToken(token, vm);\n    }).join('+');\n  } else {\n    return formatToken(tokens[0], vm, true);\n  }\n}\n\n/**\n * Format a single token.\n *\n * @param {Object} token\n * @param {Vue} [vm]\n * @param {Boolean} [single]\n * @return {String}\n */\n\nfunction formatToken(token, vm, single) {\n  return token.tag ? token.oneTime && vm ? '\"' + vm.$eval(token.value) + '\"' : inlineFilters(token.value, single) : '\"' + token.value + '\"';\n}\n\n/**\n * For an attribute with multiple interpolation tags,\n * e.g. attr=\"some-{{thing | filter}}\", in order to combine\n * the whole thing into a single watchable expression, we\n * have to inline those filters. This function does exactly\n * that. This is a bit hacky but it avoids heavy changes\n * to directive parser and watcher mechanism.\n *\n * @param {String} exp\n * @param {Boolean} single\n * @return {String}\n */\n\nvar filterRE$1 = /[^|]\\|[^|]/;\nfunction inlineFilters(exp, single) {\n  if (!filterRE$1.test(exp)) {\n    return single ? exp : '(' + exp + ')';\n  } else {\n    var dir = parseDirective(exp);\n    if (!dir.filters) {\n      return '(' + exp + ')';\n    } else {\n      return 'this._applyFilters(' + dir.expression + // value\n      ',null,' + // oldValue (null for read)\n      JSON.stringify(dir.filters) + // filter descriptors\n      ',false)'; // write?\n    }\n  }\n}\n\nvar text$1 = Object.freeze({\n  compileRegex: compileRegex,\n  parseText: parseText,\n  tokensToExp: tokensToExp\n});\n\nvar delimiters = ['{{', '}}'];\nvar unsafeDelimiters = ['{{{', '}}}'];\n\nvar config = Object.defineProperties({\n\n  /**\n   * Whether to print debug messages.\n   * Also enables stack trace for warnings.\n   *\n   * @type {Boolean}\n   */\n\n  debug: false,\n\n  /**\n   * Whether to suppress warnings.\n   *\n   * @type {Boolean}\n   */\n\n  silent: false,\n\n  /**\n   * Whether to use async rendering.\n   */\n\n  async: true,\n\n  /**\n   * Whether to warn against errors caught when evaluating\n   * expressions.\n   */\n\n  warnExpressionErrors: true,\n\n  /**\n   * Whether or not to handle fully object properties which\n   * are already backed by getters and seters. Depending on\n   * use case and environment, this might introduce non-neglible\n   * performance penalties.\n   */\n  convertAllProperties: false,\n\n  /**\n   * Internal flag to indicate the delimiters have been\n   * changed.\n   *\n   * @type {Boolean}\n   */\n\n  _delimitersChanged: true,\n\n  /**\n   * List of asset types that a component can own.\n   *\n   * @type {Array}\n   */\n\n  _assetTypes: ['component', 'directive', 'elementDirective', 'filter', 'transition', 'partial'],\n\n  /**\n   * prop binding modes\n   */\n\n  _propBindingModes: {\n    ONE_WAY: 0,\n    TWO_WAY: 1,\n    ONE_TIME: 2\n  },\n\n  /**\n   * Max circular updates allowed in a batcher flush cycle.\n   */\n\n  _maxUpdateCount: 100\n\n}, {\n  delimiters: { /**\n                 * Interpolation delimiters. Changing these would trigger\n                 * the text parser to re-compile the regular expressions.\n                 *\n                 * @type {Array<String>}\n                 */\n\n    get: function get() {\n      return delimiters;\n    },\n    set: function set(val) {\n      delimiters = val;\n      compileRegex();\n    },\n    configurable: true,\n    enumerable: true\n  },\n  unsafeDelimiters: {\n    get: function get() {\n      return unsafeDelimiters;\n    },\n    set: function set(val) {\n      unsafeDelimiters = val;\n      compileRegex();\n    },\n    configurable: true,\n    enumerable: true\n  }\n});\n\nvar warn = undefined;\n\nif (process.env.NODE_ENV !== 'production') {\n  (function () {\n    var hasConsole = typeof console !== 'undefined';\n    warn = function (msg, e) {\n      if (hasConsole && (!config.silent || config.debug)) {\n        console.warn('[Vue warn]: ' + msg);\n        /* istanbul ignore if */\n        if (config.debug) {\n          if (e) {\n            throw e;\n          } else {\n            console.warn(new Error('Warning Stack Trace').stack);\n          }\n        }\n      }\n    };\n  })();\n}\n\n/**\n * Append with transition.\n *\n * @param {Element} el\n * @param {Element} target\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction appendWithTransition(el, target, vm, cb) {\n  applyTransition(el, 1, function () {\n    target.appendChild(el);\n  }, vm, cb);\n}\n\n/**\n * InsertBefore with transition.\n *\n * @param {Element} el\n * @param {Element} target\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction beforeWithTransition(el, target, vm, cb) {\n  applyTransition(el, 1, function () {\n    before(el, target);\n  }, vm, cb);\n}\n\n/**\n * Remove with transition.\n *\n * @param {Element} el\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction removeWithTransition(el, vm, cb) {\n  applyTransition(el, -1, function () {\n    remove(el);\n  }, vm, cb);\n}\n\n/**\n * Apply transitions with an operation callback.\n *\n * @param {Element} el\n * @param {Number} direction\n *                  1: enter\n *                 -1: leave\n * @param {Function} op - the actual DOM operation\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction applyTransition(el, direction, op, vm, cb) {\n  var transition = el.__v_trans;\n  if (!transition ||\n  // skip if there are no js hooks and CSS transition is\n  // not supported\n  !transition.hooks && !transitionEndEvent ||\n  // skip transitions for initial compile\n  !vm._isCompiled ||\n  // if the vm is being manipulated by a parent directive\n  // during the parent's compilation phase, skip the\n  // animation.\n  vm.$parent && !vm.$parent._isCompiled) {\n    op();\n    if (cb) cb();\n    return;\n  }\n  var action = direction > 0 ? 'enter' : 'leave';\n  transition[action](op, cb);\n}\n\n/**\n * Query an element selector if it's not an element already.\n *\n * @param {String|Element} el\n * @return {Element}\n */\n\nfunction query(el) {\n  if (typeof el === 'string') {\n    var selector = el;\n    el = document.querySelector(el);\n    if (!el) {\n      process.env.NODE_ENV !== 'production' && warn('Cannot find element: ' + selector);\n    }\n  }\n  return el;\n}\n\n/**\n * Check if a node is in the document.\n * Note: document.documentElement.contains should work here\n * but always returns false for comment nodes in phantomjs,\n * making unit tests difficult. This is fixed by doing the\n * contains() check on the node's parentNode instead of\n * the node itself.\n *\n * @param {Node} node\n * @return {Boolean}\n */\n\nfunction inDoc(node) {\n  var doc = document.documentElement;\n  var parent = node && node.parentNode;\n  return doc === node || doc === parent || !!(parent && parent.nodeType === 1 && doc.contains(parent));\n}\n\n/**\n * Get and remove an attribute from a node.\n *\n * @param {Node} node\n * @param {String} _attr\n */\n\nfunction getAttr(node, _attr) {\n  var val = node.getAttribute(_attr);\n  if (val !== null) {\n    node.removeAttribute(_attr);\n  }\n  return val;\n}\n\n/**\n * Get an attribute with colon or v-bind: prefix.\n *\n * @param {Node} node\n * @param {String} name\n * @return {String|null}\n */\n\nfunction getBindAttr(node, name) {\n  var val = getAttr(node, ':' + name);\n  if (val === null) {\n    val = getAttr(node, 'v-bind:' + name);\n  }\n  return val;\n}\n\n/**\n * Check the presence of a bind attribute.\n *\n * @param {Node} node\n * @param {String} name\n * @return {Boolean}\n */\n\nfunction hasBindAttr(node, name) {\n  return node.hasAttribute(name) || node.hasAttribute(':' + name) || node.hasAttribute('v-bind:' + name);\n}\n\n/**\n * Insert el before target\n *\n * @param {Element} el\n * @param {Element} target\n */\n\nfunction before(el, target) {\n  target.parentNode.insertBefore(el, target);\n}\n\n/**\n * Insert el after target\n *\n * @param {Element} el\n * @param {Element} target\n */\n\nfunction after(el, target) {\n  if (target.nextSibling) {\n    before(el, target.nextSibling);\n  } else {\n    target.parentNode.appendChild(el);\n  }\n}\n\n/**\n * Remove el from DOM\n *\n * @param {Element} el\n */\n\nfunction remove(el) {\n  el.parentNode.removeChild(el);\n}\n\n/**\n * Prepend el to target\n *\n * @param {Element} el\n * @param {Element} target\n */\n\nfunction prepend(el, target) {\n  if (target.firstChild) {\n    before(el, target.firstChild);\n  } else {\n    target.appendChild(el);\n  }\n}\n\n/**\n * Replace target with el\n *\n * @param {Element} target\n * @param {Element} el\n */\n\nfunction replace(target, el) {\n  var parent = target.parentNode;\n  if (parent) {\n    parent.replaceChild(el, target);\n  }\n}\n\n/**\n * Add event listener shorthand.\n *\n * @param {Element} el\n * @param {String} event\n * @param {Function} cb\n */\n\nfunction on$1(el, event, cb) {\n  el.addEventListener(event, cb);\n}\n\n/**\n * Remove event listener shorthand.\n *\n * @param {Element} el\n * @param {String} event\n * @param {Function} cb\n */\n\nfunction off(el, event, cb) {\n  el.removeEventListener(event, cb);\n}\n\n/**\n * In IE9, setAttribute('class') will result in empty class\n * if the element also has the :class attribute; However in\n * PhantomJS, setting `className` does not work on SVG elements...\n * So we have to do a conditional check here.\n *\n * @param {Element} el\n * @param {String} cls\n */\n\nfunction setClass(el, cls) {\n  /* istanbul ignore if */\n  if (isIE9 && !(el instanceof SVGElement)) {\n    el.className = cls;\n  } else {\n    el.setAttribute('class', cls);\n  }\n}\n\n/**\n * Add class with compatibility for IE & SVG\n *\n * @param {Element} el\n * @param {String} cls\n */\n\nfunction addClass(el, cls) {\n  if (el.classList) {\n    el.classList.add(cls);\n  } else {\n    var cur = ' ' + (el.getAttribute('class') || '') + ' ';\n    if (cur.indexOf(' ' + cls + ' ') < 0) {\n      setClass(el, (cur + cls).trim());\n    }\n  }\n}\n\n/**\n * Remove class with compatibility for IE & SVG\n *\n * @param {Element} el\n * @param {String} cls\n */\n\nfunction removeClass(el, cls) {\n  if (el.classList) {\n    el.classList.remove(cls);\n  } else {\n    var cur = ' ' + (el.getAttribute('class') || '') + ' ';\n    var tar = ' ' + cls + ' ';\n    while (cur.indexOf(tar) >= 0) {\n      cur = cur.replace(tar, ' ');\n    }\n    setClass(el, cur.trim());\n  }\n  if (!el.className) {\n    el.removeAttribute('class');\n  }\n}\n\n/**\n * Extract raw content inside an element into a temporary\n * container div\n *\n * @param {Element} el\n * @param {Boolean} asFragment\n * @return {Element}\n */\n\nfunction extractContent(el, asFragment) {\n  var child;\n  var rawContent;\n  /* istanbul ignore if */\n  if (isTemplate(el) && el.content instanceof DocumentFragment) {\n    el = el.content;\n  }\n  if (el.hasChildNodes()) {\n    trimNode(el);\n    rawContent = asFragment ? document.createDocumentFragment() : document.createElement('div');\n    /* eslint-disable no-cond-assign */\n    while (child = el.firstChild) {\n      /* eslint-enable no-cond-assign */\n      rawContent.appendChild(child);\n    }\n  }\n  return rawContent;\n}\n\n/**\n * Trim possible empty head/tail textNodes inside a parent.\n *\n * @param {Node} node\n */\n\nfunction trimNode(node) {\n  trim(node, node.firstChild);\n  trim(node, node.lastChild);\n}\n\nfunction trim(parent, node) {\n  if (node && node.nodeType === 3 && !node.data.trim()) {\n    parent.removeChild(node);\n  }\n}\n\n/**\n * Check if an element is a template tag.\n * Note if the template appears inside an SVG its tagName\n * will be in lowercase.\n *\n * @param {Element} el\n */\n\nfunction isTemplate(el) {\n  return el.tagName && el.tagName.toLowerCase() === 'template';\n}\n\n/**\n * Create an \"anchor\" for performing dom insertion/removals.\n * This is used in a number of scenarios:\n * - fragment instance\n * - v-html\n * - v-if\n * - v-for\n * - component\n *\n * @param {String} content\n * @param {Boolean} persist - IE trashes empty textNodes on\n *                            cloneNode(true), so in certain\n *                            cases the anchor needs to be\n *                            non-empty to be persisted in\n *                            templates.\n * @return {Comment|Text}\n */\n\nfunction createAnchor(content, persist) {\n  var anchor = config.debug ? document.createComment(content) : document.createTextNode(persist ? ' ' : '');\n  anchor.__vue_anchor = true;\n  return anchor;\n}\n\n/**\n * Find a component ref attribute that starts with $.\n *\n * @param {Element} node\n * @return {String|undefined}\n */\n\nvar refRE = /^v-ref:/;\n\nfunction findRef(node) {\n  if (node.hasAttributes()) {\n    var attrs = node.attributes;\n    for (var i = 0, l = attrs.length; i < l; i++) {\n      var name = attrs[i].name;\n      if (refRE.test(name)) {\n        return camelize(name.replace(refRE, ''));\n      }\n    }\n  }\n}\n\n/**\n * Map a function to a range of nodes .\n *\n * @param {Node} node\n * @param {Node} end\n * @param {Function} op\n */\n\nfunction mapNodeRange(node, end, op) {\n  var next;\n  while (node !== end) {\n    next = node.nextSibling;\n    op(node);\n    node = next;\n  }\n  op(end);\n}\n\n/**\n * Remove a range of nodes with transition, store\n * the nodes in a fragment with correct ordering,\n * and call callback when done.\n *\n * @param {Node} start\n * @param {Node} end\n * @param {Vue} vm\n * @param {DocumentFragment} frag\n * @param {Function} cb\n */\n\nfunction removeNodeRange(start, end, vm, frag, cb) {\n  var done = false;\n  var removed = 0;\n  var nodes = [];\n  mapNodeRange(start, end, function (node) {\n    if (node === end) done = true;\n    nodes.push(node);\n    removeWithTransition(node, vm, onRemoved);\n  });\n  function onRemoved() {\n    removed++;\n    if (done && removed >= nodes.length) {\n      for (var i = 0; i < nodes.length; i++) {\n        frag.appendChild(nodes[i]);\n      }\n      cb && cb();\n    }\n  }\n}\n\nvar commonTagRE = /^(div|p|span|img|a|b|i|br|ul|ol|li|h1|h2|h3|h4|h5|h6|code|pre|table|th|td|tr|form|label|input|select|option|nav|article|section|header|footer)$/;\nvar reservedTagRE = /^(slot|partial|component)$/;\n\n/**\n * Check if an element is a component, if yes return its\n * component id.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Object|undefined}\n */\n\nfunction checkComponentAttr(el, options) {\n  var tag = el.tagName.toLowerCase();\n  var hasAttrs = el.hasAttributes();\n  if (!commonTagRE.test(tag) && !reservedTagRE.test(tag)) {\n    if (resolveAsset(options, 'components', tag)) {\n      return { id: tag };\n    } else {\n      var is = hasAttrs && getIsBinding(el);\n      if (is) {\n        return is;\n      } else if (process.env.NODE_ENV !== 'production') {\n        if (tag.indexOf('-') > -1 || /HTMLUnknownElement/.test(el.toString()) &&\n        // Chrome returns unknown for several HTML5 elements.\n        // https://code.google.com/p/chromium/issues/detail?id=540526\n        !/^(data|time|rtc|rb)$/.test(tag)) {\n          warn('Unknown custom element: <' + tag + '> - did you ' + 'register the component correctly?');\n        }\n      }\n    }\n  } else if (hasAttrs) {\n    return getIsBinding(el);\n  }\n}\n\n/**\n * Get \"is\" binding from an element.\n *\n * @param {Element} el\n * @return {Object|undefined}\n */\n\nfunction getIsBinding(el) {\n  // dynamic syntax\n  var exp = getAttr(el, 'is');\n  if (exp != null) {\n    return { id: exp };\n  } else {\n    exp = getBindAttr(el, 'is');\n    if (exp != null) {\n      return { id: exp, dynamic: true };\n    }\n  }\n}\n\n/**\n * Set a prop's initial value on a vm and its data object.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @param {*} value\n */\n\nfunction initProp(vm, prop, value) {\n  var key = prop.path;\n  value = coerceProp(prop, value);\n  vm[key] = vm._data[key] = assertProp(prop, value) ? value : undefined;\n}\n\n/**\n * Assert whether a prop is valid.\n *\n * @param {Object} prop\n * @param {*} value\n */\n\nfunction assertProp(prop, value) {\n  // if a prop is not provided and is not required,\n  // skip the check.\n  if (prop.raw === null && !prop.required) {\n    return true;\n  }\n  var options = prop.options;\n  var type = options.type;\n  var valid = true;\n  var expectedType;\n  if (type) {\n    if (type === String) {\n      expectedType = 'string';\n      valid = typeof value === expectedType;\n    } else if (type === Number) {\n      expectedType = 'number';\n      valid = typeof value === 'number';\n    } else if (type === Boolean) {\n      expectedType = 'boolean';\n      valid = typeof value === 'boolean';\n    } else if (type === Function) {\n      expectedType = 'function';\n      valid = typeof value === 'function';\n    } else if (type === Object) {\n      expectedType = 'object';\n      valid = isPlainObject(value);\n    } else if (type === Array) {\n      expectedType = 'array';\n      valid = isArray(value);\n    } else {\n      valid = value instanceof type;\n    }\n  }\n  if (!valid) {\n    process.env.NODE_ENV !== 'production' && warn('Invalid prop: type check failed for ' + prop.path + '=\"' + prop.raw + '\".' + ' Expected ' + formatType(expectedType) + ', got ' + formatValue(value) + '.');\n    return false;\n  }\n  var validator = options.validator;\n  if (validator) {\n    if (!validator.call(null, value)) {\n      process.env.NODE_ENV !== 'production' && warn('Invalid prop: custom validator check failed for ' + prop.path + '=\"' + prop.raw + '\"');\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Force parsing value with coerce option.\n *\n * @param {*} value\n * @param {Object} options\n * @return {*}\n */\n\nfunction coerceProp(prop, value) {\n  var coerce = prop.options.coerce;\n  if (!coerce) {\n    return value;\n  }\n  // coerce is a function\n  return coerce(value);\n}\n\nfunction formatType(val) {\n  return val ? val.charAt(0).toUpperCase() + val.slice(1) : 'custom type';\n}\n\nfunction formatValue(val) {\n  return Object.prototype.toString.call(val).slice(8, -1);\n}\n\n/**\n * Option overwriting strategies are functions that handle\n * how to merge a parent option value and a child option\n * value into the final value.\n *\n * All strategy functions follow the same signature:\n *\n * @param {*} parentVal\n * @param {*} childVal\n * @param {Vue} [vm]\n */\n\nvar strats = config.optionMergeStrategies = Object.create(null);\n\n/**\n * Helper that recursively merges two data objects together.\n */\n\nfunction mergeData(to, from) {\n  var key, toVal, fromVal;\n  for (key in from) {\n    toVal = to[key];\n    fromVal = from[key];\n    if (!hasOwn(to, key)) {\n      set(to, key, fromVal);\n    } else if (isObject(toVal) && isObject(fromVal)) {\n      mergeData(toVal, fromVal);\n    }\n  }\n  return to;\n}\n\n/**\n * Data\n */\n\nstrats.data = function (parentVal, childVal, vm) {\n  if (!vm) {\n    // in a Vue.extend merge, both should be functions\n    if (!childVal) {\n      return parentVal;\n    }\n    if (typeof childVal !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn('The \"data\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.');\n      return parentVal;\n    }\n    if (!parentVal) {\n      return childVal;\n    }\n    // when parentVal & childVal are both present,\n    // we need to return a function that returns the\n    // merged result of both functions... no need to\n    // check if parentVal is a function here because\n    // it has to be a function to pass previous merges.\n    return function mergedDataFn() {\n      return mergeData(childVal.call(this), parentVal.call(this));\n    };\n  } else if (parentVal || childVal) {\n    return function mergedInstanceDataFn() {\n      // instance merge\n      var instanceData = typeof childVal === 'function' ? childVal.call(vm) : childVal;\n      var defaultData = typeof parentVal === 'function' ? parentVal.call(vm) : undefined;\n      if (instanceData) {\n        return mergeData(instanceData, defaultData);\n      } else {\n        return defaultData;\n      }\n    };\n  }\n};\n\n/**\n * El\n */\n\nstrats.el = function (parentVal, childVal, vm) {\n  if (!vm && childVal && typeof childVal !== 'function') {\n    process.env.NODE_ENV !== 'production' && warn('The \"el\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.');\n    return;\n  }\n  var ret = childVal || parentVal;\n  // invoke the element factory if this is instance merge\n  return vm && typeof ret === 'function' ? ret.call(vm) : ret;\n};\n\n/**\n * Hooks and param attributes are merged as arrays.\n */\n\nstrats.init = strats.created = strats.ready = strats.attached = strats.detached = strats.beforeCompile = strats.compiled = strats.beforeDestroy = strats.destroyed = function (parentVal, childVal) {\n  return childVal ? parentVal ? parentVal.concat(childVal) : isArray(childVal) ? childVal : [childVal] : parentVal;\n};\n\n/**\n * 0.11 deprecation warning\n */\n\nstrats.paramAttributes = function () {\n  /* istanbul ignore next */\n  process.env.NODE_ENV !== 'production' && warn('\"paramAttributes\" option has been deprecated in 0.12. ' + 'Use \"props\" instead.');\n};\n\n/**\n * Assets\n *\n * When a vm is present (instance creation), we need to do\n * a three-way merge between constructor options, instance\n * options and parent options.\n */\n\nfunction mergeAssets(parentVal, childVal) {\n  var res = Object.create(parentVal);\n  return childVal ? extend(res, guardArrayAssets(childVal)) : res;\n}\n\nconfig._assetTypes.forEach(function (type) {\n  strats[type + 's'] = mergeAssets;\n});\n\n/**\n * Events & Watchers.\n *\n * Events & watchers hashes should not overwrite one\n * another, so we merge them as arrays.\n */\n\nstrats.watch = strats.events = function (parentVal, childVal) {\n  if (!childVal) return parentVal;\n  if (!parentVal) return childVal;\n  var ret = {};\n  extend(ret, parentVal);\n  for (var key in childVal) {\n    var parent = ret[key];\n    var child = childVal[key];\n    if (parent && !isArray(parent)) {\n      parent = [parent];\n    }\n    ret[key] = parent ? parent.concat(child) : [child];\n  }\n  return ret;\n};\n\n/**\n * Other object hashes.\n */\n\nstrats.props = strats.methods = strats.computed = function (parentVal, childVal) {\n  if (!childVal) return parentVal;\n  if (!parentVal) return childVal;\n  var ret = Object.create(null);\n  extend(ret, parentVal);\n  extend(ret, childVal);\n  return ret;\n};\n\n/**\n * Default strategy.\n */\n\nvar defaultStrat = function defaultStrat(parentVal, childVal) {\n  return childVal === undefined ? parentVal : childVal;\n};\n\n/**\n * Make sure component options get converted to actual\n * constructors.\n *\n * @param {Object} options\n */\n\nfunction guardComponents(options) {\n  if (options.components) {\n    var components = options.components = guardArrayAssets(options.components);\n    var def;\n    var ids = Object.keys(components);\n    for (var i = 0, l = ids.length; i < l; i++) {\n      var key = ids[i];\n      if (commonTagRE.test(key) || reservedTagRE.test(key)) {\n        process.env.NODE_ENV !== 'production' && warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + key);\n        continue;\n      }\n      def = components[key];\n      if (isPlainObject(def)) {\n        components[key] = Vue.extend(def);\n      }\n    }\n  }\n}\n\n/**\n * Ensure all props option syntax are normalized into the\n * Object-based format.\n *\n * @param {Object} options\n */\n\nfunction guardProps(options) {\n  var props = options.props;\n  var i, val;\n  if (isArray(props)) {\n    options.props = {};\n    i = props.length;\n    while (i--) {\n      val = props[i];\n      if (typeof val === 'string') {\n        options.props[val] = null;\n      } else if (val.name) {\n        options.props[val.name] = val;\n      }\n    }\n  } else if (isPlainObject(props)) {\n    var keys = Object.keys(props);\n    i = keys.length;\n    while (i--) {\n      val = props[keys[i]];\n      if (typeof val === 'function') {\n        props[keys[i]] = { type: val };\n      }\n    }\n  }\n}\n\n/**\n * Guard an Array-format assets option and converted it\n * into the key-value Object format.\n *\n * @param {Object|Array} assets\n * @return {Object}\n */\n\nfunction guardArrayAssets(assets) {\n  if (isArray(assets)) {\n    var res = {};\n    var i = assets.length;\n    var asset;\n    while (i--) {\n      asset = assets[i];\n      var id = typeof asset === 'function' ? asset.options && asset.options.name || asset.id : asset.name || asset.id;\n      if (!id) {\n        process.env.NODE_ENV !== 'production' && warn('Array-syntax assets must provide a \"name\" or \"id\" field.');\n      } else {\n        res[id] = asset;\n      }\n    }\n    return res;\n  }\n  return assets;\n}\n\n/**\n * Merge two option objects into a new one.\n * Core utility used in both instantiation and inheritance.\n *\n * @param {Object} parent\n * @param {Object} child\n * @param {Vue} [vm] - if vm is present, indicates this is\n *                     an instantiation merge.\n */\n\nfunction mergeOptions(parent, child, vm) {\n  guardComponents(child);\n  guardProps(child);\n  var options = {};\n  var key;\n  if (child.mixins) {\n    for (var i = 0, l = child.mixins.length; i < l; i++) {\n      parent = mergeOptions(parent, child.mixins[i], vm);\n    }\n  }\n  for (key in parent) {\n    mergeField(key);\n  }\n  for (key in child) {\n    if (!hasOwn(parent, key)) {\n      mergeField(key);\n    }\n  }\n  function mergeField(key) {\n    var strat = strats[key] || defaultStrat;\n    options[key] = strat(parent[key], child[key], vm, key);\n  }\n  return options;\n}\n\n/**\n * Resolve an asset.\n * This function is used because child instances need access\n * to assets defined in its ancestor chain.\n *\n * @param {Object} options\n * @param {String} type\n * @param {String} id\n * @return {Object|Function}\n */\n\nfunction resolveAsset(options, type, id) {\n  var assets = options[type];\n  var camelizedId;\n  return assets[id] ||\n  // camelCase ID\n  assets[camelizedId = camelize(id)] ||\n  // Pascal Case ID\n  assets[camelizedId.charAt(0).toUpperCase() + camelizedId.slice(1)];\n}\n\n/**\n * Assert asset exists\n */\n\nfunction assertAsset(val, type, id) {\n  if (!val) {\n    process.env.NODE_ENV !== 'production' && warn('Failed to resolve ' + type + ': ' + id);\n  }\n}\n\nvar arrayProto = Array.prototype;\nvar arrayMethods = Object.create(arrayProto)\n\n/**\n * Intercept mutating methods and emit events\n */\n\n;['push', 'pop', 'shift', 'unshift', 'splice', 'sort', 'reverse'].forEach(function (method) {\n  // cache original method\n  var original = arrayProto[method];\n  def(arrayMethods, method, function mutator() {\n    // avoid leaking arguments:\n    // http://jsperf.com/closure-with-arguments\n    var i = arguments.length;\n    var args = new Array(i);\n    while (i--) {\n      args[i] = arguments[i];\n    }\n    var result = original.apply(this, args);\n    var ob = this.__ob__;\n    var inserted;\n    switch (method) {\n      case 'push':\n        inserted = args;\n        break;\n      case 'unshift':\n        inserted = args;\n        break;\n      case 'splice':\n        inserted = args.slice(2);\n        break;\n    }\n    if (inserted) ob.observeArray(inserted);\n    // notify change\n    ob.dep.notify();\n    return result;\n  });\n});\n\n/**\n * Swap the element at the given index with a new value\n * and emits corresponding event.\n *\n * @param {Number} index\n * @param {*} val\n * @return {*} - replaced element\n */\n\ndef(arrayProto, '$set', function $set(index, val) {\n  if (index >= this.length) {\n    this.length = Number(index) + 1;\n  }\n  return this.splice(index, 1, val)[0];\n});\n\n/**\n * Convenience method to remove the element at given index.\n *\n * @param {Number} index\n * @param {*} val\n */\n\ndef(arrayProto, '$remove', function $remove(item) {\n  /* istanbul ignore if */\n  if (!this.length) return;\n  var index = indexOf(this, item);\n  if (index > -1) {\n    return this.splice(index, 1);\n  }\n});\n\nvar uid$3 = 0;\n\n/**\n * A dep is an observable that can have multiple\n * directives subscribing to it.\n *\n * @constructor\n */\nfunction Dep() {\n  this.id = uid$3++;\n  this.subs = [];\n}\n\n// the current target watcher being evaluated.\n// this is globally unique because there could be only one\n// watcher being evaluated at any time.\nDep.target = null;\n\n/**\n * Add a directive subscriber.\n *\n * @param {Directive} sub\n */\n\nDep.prototype.addSub = function (sub) {\n  this.subs.push(sub);\n};\n\n/**\n * Remove a directive subscriber.\n *\n * @param {Directive} sub\n */\n\nDep.prototype.removeSub = function (sub) {\n  this.subs.$remove(sub);\n};\n\n/**\n * Add self as a dependency to the target watcher.\n */\n\nDep.prototype.depend = function () {\n  Dep.target.addDep(this);\n};\n\n/**\n * Notify all subscribers of a new value.\n */\n\nDep.prototype.notify = function () {\n  // stablize the subscriber list first\n  var subs = toArray(this.subs);\n  for (var i = 0, l = subs.length; i < l; i++) {\n    subs[i].update();\n  }\n};\n\nvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\n/**\n * Observer class that are attached to each observed\n * object. Once attached, the observer converts target\n * object's property keys into getter/setters that\n * collect dependencies and dispatches updates.\n *\n * @param {Array|Object} value\n * @constructor\n */\n\nfunction Observer(value) {\n  this.value = value;\n  this.dep = new Dep();\n  def(value, '__ob__', this);\n  if (isArray(value)) {\n    var augment = hasProto ? protoAugment : copyAugment;\n    augment(value, arrayMethods, arrayKeys);\n    this.observeArray(value);\n  } else {\n    this.walk(value);\n  }\n}\n\n// Instance methods\n\n/**\n * Walk through each property and convert them into\n * getter/setters. This method should only be called when\n * value type is Object.\n *\n * @param {Object} obj\n */\n\nObserver.prototype.walk = function (obj) {\n  var keys = Object.keys(obj);\n  for (var i = 0, l = keys.length; i < l; i++) {\n    this.convert(keys[i], obj[keys[i]]);\n  }\n};\n\n/**\n * Observe a list of Array items.\n *\n * @param {Array} items\n */\n\nObserver.prototype.observeArray = function (items) {\n  for (var i = 0, l = items.length; i < l; i++) {\n    observe(items[i]);\n  }\n};\n\n/**\n * Convert a property into getter/setter so we can emit\n * the events when the property is accessed/changed.\n *\n * @param {String} key\n * @param {*} val\n */\n\nObserver.prototype.convert = function (key, val) {\n  defineReactive(this.value, key, val);\n};\n\n/**\n * Add an owner vm, so that when $set/$delete mutations\n * happen we can notify owner vms to proxy the keys and\n * digest the watchers. This is only called when the object\n * is observed as an instance's root $data.\n *\n * @param {Vue} vm\n */\n\nObserver.prototype.addVm = function (vm) {\n  (this.vms || (this.vms = [])).push(vm);\n};\n\n/**\n * Remove an owner vm. This is called when the object is\n * swapped out as an instance's $data object.\n *\n * @param {Vue} vm\n */\n\nObserver.prototype.removeVm = function (vm) {\n  this.vms.$remove(vm);\n};\n\n// helpers\n\n/**\n * Augment an target Object or Array by intercepting\n * the prototype chain using __proto__\n *\n * @param {Object|Array} target\n * @param {Object} proto\n */\n\nfunction protoAugment(target, src) {\n  target.__proto__ = src;\n}\n\n/**\n * Augment an target Object or Array by defining\n * hidden properties.\n *\n * @param {Object|Array} target\n * @param {Object} proto\n */\n\nfunction copyAugment(target, src, keys) {\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    def(target, key, src[key]);\n  }\n}\n\n/**\n * Attempt to create an observer instance for a value,\n * returns the new observer if successfully observed,\n * or the existing observer if the value already has one.\n *\n * @param {*} value\n * @param {Vue} [vm]\n * @return {Observer|undefined}\n * @static\n */\n\nfunction observe(value, vm) {\n  if (!value || typeof value !== 'object') {\n    return;\n  }\n  var ob;\n  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n    ob = value.__ob__;\n  } else if ((isArray(value) || isPlainObject(value)) && Object.isExtensible(value) && !value._isVue) {\n    ob = new Observer(value);\n  }\n  if (ob && vm) {\n    ob.addVm(vm);\n  }\n  return ob;\n}\n\n/**\n * Define a reactive property on an Object.\n *\n * @param {Object} obj\n * @param {String} key\n * @param {*} val\n */\n\nfunction defineReactive(obj, key, val) {\n  var dep = new Dep();\n\n  // cater for pre-defined getter/setters\n  var getter, setter;\n  if (config.convertAllProperties) {\n    var property = Object.getOwnPropertyDescriptor(obj, key);\n    if (property && property.configurable === false) {\n      return;\n    }\n    getter = property && property.get;\n    setter = property && property.set;\n  }\n\n  var childOb = observe(val);\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    get: function reactiveGetter() {\n      var value = getter ? getter.call(obj) : val;\n      if (Dep.target) {\n        dep.depend();\n        if (childOb) {\n          childOb.dep.depend();\n        }\n        if (isArray(value)) {\n          for (var e, i = 0, l = value.length; i < l; i++) {\n            e = value[i];\n            e && e.__ob__ && e.__ob__.dep.depend();\n          }\n        }\n      }\n      return value;\n    },\n    set: function reactiveSetter(newVal) {\n      var value = getter ? getter.call(obj) : val;\n      if (newVal === value) {\n        return;\n      }\n      if (setter) {\n        setter.call(obj, newVal);\n      } else {\n        val = newVal;\n      }\n      childOb = observe(newVal);\n      dep.notify();\n    }\n  });\n}\n\nvar util = Object.freeze({\n\tdefineReactive: defineReactive,\n\tset: set,\n\tdel: del,\n\thasOwn: hasOwn,\n\tisLiteral: isLiteral,\n\tisReserved: isReserved,\n\t_toString: _toString,\n\ttoNumber: toNumber,\n\ttoBoolean: toBoolean,\n\tstripQuotes: stripQuotes,\n\tcamelize: camelize,\n\thyphenate: hyphenate,\n\tclassify: classify,\n\tbind: bind$1,\n\ttoArray: toArray,\n\textend: extend,\n\tisObject: isObject,\n\tisPlainObject: isPlainObject,\n\tdef: def,\n\tdebounce: _debounce,\n\tindexOf: indexOf,\n\tcancellable: cancellable,\n\tlooseEqual: looseEqual,\n\tisArray: isArray,\n\thasProto: hasProto,\n\tinBrowser: inBrowser,\n\tisIE9: isIE9,\n\tisAndroid: isAndroid,\n\tget transitionProp () { return transitionProp; },\n\tget transitionEndEvent () { return transitionEndEvent; },\n\tget animationProp () { return animationProp; },\n\tget animationEndEvent () { return animationEndEvent; },\n\tnextTick: nextTick,\n\tquery: query,\n\tinDoc: inDoc,\n\tgetAttr: getAttr,\n\tgetBindAttr: getBindAttr,\n\thasBindAttr: hasBindAttr,\n\tbefore: before,\n\tafter: after,\n\tremove: remove,\n\tprepend: prepend,\n\treplace: replace,\n\ton: on$1,\n\toff: off,\n\tsetClass: setClass,\n\taddClass: addClass,\n\tremoveClass: removeClass,\n\textractContent: extractContent,\n\ttrimNode: trimNode,\n\tisTemplate: isTemplate,\n\tcreateAnchor: createAnchor,\n\tfindRef: findRef,\n\tmapNodeRange: mapNodeRange,\n\tremoveNodeRange: removeNodeRange,\n\tmergeOptions: mergeOptions,\n\tresolveAsset: resolveAsset,\n\tassertAsset: assertAsset,\n\tcheckComponentAttr: checkComponentAttr,\n\tinitProp: initProp,\n\tassertProp: assertProp,\n\tcoerceProp: coerceProp,\n\tcommonTagRE: commonTagRE,\n\treservedTagRE: reservedTagRE,\n\tget warn () { return warn; }\n});\n\nvar uid = 0;\n\nfunction initMixin (Vue) {\n\n  /**\n   * The main init sequence. This is called for every\n   * instance, including ones that are created from extended\n   * constructors.\n   *\n   * @param {Object} options - this options object should be\n   *                           the result of merging class\n   *                           options and the options passed\n   *                           in to the constructor.\n   */\n\n  Vue.prototype._init = function (options) {\n\n    options = options || {};\n\n    this.$el = null;\n    this.$parent = options.parent;\n    this.$root = this.$parent ? this.$parent.$root : this;\n    this.$children = [];\n    this.$refs = {}; // child vm references\n    this.$els = {}; // element references\n    this._watchers = []; // all watchers as an array\n    this._directives = []; // all directives\n\n    // a uid\n    this._uid = uid++;\n\n    // a flag to avoid this being observed\n    this._isVue = true;\n\n    // events bookkeeping\n    this._events = {}; // registered callbacks\n    this._eventsCount = {}; // for $broadcast optimization\n\n    // fragment instance properties\n    this._isFragment = false;\n    this._fragment = // @type {DocumentFragment}\n    this._fragmentStart = // @type {Text|Comment}\n    this._fragmentEnd = null; // @type {Text|Comment}\n\n    // lifecycle state\n    this._isCompiled = this._isDestroyed = this._isReady = this._isAttached = this._isBeingDestroyed = false;\n    this._unlinkFn = null;\n\n    // context:\n    // if this is a transcluded component, context\n    // will be the common parent vm of this instance\n    // and its host.\n    this._context = options._context || this.$parent;\n\n    // scope:\n    // if this is inside an inline v-for, the scope\n    // will be the intermediate scope created for this\n    // repeat fragment. this is used for linking props\n    // and container directives.\n    this._scope = options._scope;\n\n    // fragment:\n    // if this instance is compiled inside a Fragment, it\n    // needs to reigster itself as a child of that fragment\n    // for attach/detach to work properly.\n    this._frag = options._frag;\n    if (this._frag) {\n      this._frag.children.push(this);\n    }\n\n    // push self into parent / transclusion host\n    if (this.$parent) {\n      this.$parent.$children.push(this);\n    }\n\n    // merge options.\n    options = this.$options = mergeOptions(this.constructor.options, options, this);\n\n    // set ref\n    this._updateRef();\n\n    // initialize data as empty object.\n    // it will be filled up in _initScope().\n    this._data = {};\n\n    // call init hook\n    this._callHook('init');\n\n    // initialize data observation and scope inheritance.\n    this._initState();\n\n    // setup event system and option events.\n    this._initEvents();\n\n    // call created hook\n    this._callHook('created');\n\n    // if `el` option is passed, start compilation.\n    if (options.el) {\n      this.$mount(options.el);\n    }\n  };\n}\n\nvar pathCache = new Cache(1000);\n\n// actions\nvar APPEND = 0;\nvar PUSH = 1;\nvar INC_SUB_PATH_DEPTH = 2;\nvar PUSH_SUB_PATH = 3;\n\n// states\nvar BEFORE_PATH = 0;\nvar IN_PATH = 1;\nvar BEFORE_IDENT = 2;\nvar IN_IDENT = 3;\nvar IN_SUB_PATH = 4;\nvar IN_SINGLE_QUOTE = 5;\nvar IN_DOUBLE_QUOTE = 6;\nvar AFTER_PATH = 7;\nvar ERROR = 8;\n\nvar pathStateMachine = [];\n\npathStateMachine[BEFORE_PATH] = {\n  'ws': [BEFORE_PATH],\n  'ident': [IN_IDENT, APPEND],\n  '[': [IN_SUB_PATH],\n  'eof': [AFTER_PATH]\n};\n\npathStateMachine[IN_PATH] = {\n  'ws': [IN_PATH],\n  '.': [BEFORE_IDENT],\n  '[': [IN_SUB_PATH],\n  'eof': [AFTER_PATH]\n};\n\npathStateMachine[BEFORE_IDENT] = {\n  'ws': [BEFORE_IDENT],\n  'ident': [IN_IDENT, APPEND]\n};\n\npathStateMachine[IN_IDENT] = {\n  'ident': [IN_IDENT, APPEND],\n  '0': [IN_IDENT, APPEND],\n  'number': [IN_IDENT, APPEND],\n  'ws': [IN_PATH, PUSH],\n  '.': [BEFORE_IDENT, PUSH],\n  '[': [IN_SUB_PATH, PUSH],\n  'eof': [AFTER_PATH, PUSH]\n};\n\npathStateMachine[IN_SUB_PATH] = {\n  \"'\": [IN_SINGLE_QUOTE, APPEND],\n  '\"': [IN_DOUBLE_QUOTE, APPEND],\n  '[': [IN_SUB_PATH, INC_SUB_PATH_DEPTH],\n  ']': [IN_PATH, PUSH_SUB_PATH],\n  'eof': ERROR,\n  'else': [IN_SUB_PATH, APPEND]\n};\n\npathStateMachine[IN_SINGLE_QUOTE] = {\n  \"'\": [IN_SUB_PATH, APPEND],\n  'eof': ERROR,\n  'else': [IN_SINGLE_QUOTE, APPEND]\n};\n\npathStateMachine[IN_DOUBLE_QUOTE] = {\n  '\"': [IN_SUB_PATH, APPEND],\n  'eof': ERROR,\n  'else': [IN_DOUBLE_QUOTE, APPEND]\n};\n\n/**\n * Determine the type of a character in a keypath.\n *\n * @param {Char} ch\n * @return {String} type\n */\n\nfunction getPathCharType(ch) {\n  if (ch === undefined) {\n    return 'eof';\n  }\n\n  var code = ch.charCodeAt(0);\n\n  switch (code) {\n    case 0x5B: // [\n    case 0x5D: // ]\n    case 0x2E: // .\n    case 0x22: // \"\n    case 0x27: // '\n    case 0x30:\n      // 0\n      return ch;\n\n    case 0x5F: // _\n    case 0x24:\n      // $\n      return 'ident';\n\n    case 0x20: // Space\n    case 0x09: // Tab\n    case 0x0A: // Newline\n    case 0x0D: // Return\n    case 0xA0: // No-break space\n    case 0xFEFF: // Byte Order Mark\n    case 0x2028: // Line Separator\n    case 0x2029:\n      // Paragraph Separator\n      return 'ws';\n  }\n\n  // a-z, A-Z\n  if (code >= 0x61 && code <= 0x7A || code >= 0x41 && code <= 0x5A) {\n    return 'ident';\n  }\n\n  // 1-9\n  if (code >= 0x31 && code <= 0x39) {\n    return 'number';\n  }\n\n  return 'else';\n}\n\n/**\n * Format a subPath, return its plain form if it is\n * a literal string or number. Otherwise prepend the\n * dynamic indicator (*).\n *\n * @param {String} path\n * @return {String}\n */\n\nfunction formatSubPath(path) {\n  var trimmed = path.trim();\n  // invalid leading 0\n  if (path.charAt(0) === '0' && isNaN(path)) {\n    return false;\n  }\n  return isLiteral(trimmed) ? stripQuotes(trimmed) : '*' + trimmed;\n}\n\n/**\n * Parse a string path into an array of segments\n *\n * @param {String} path\n * @return {Array|undefined}\n */\n\nfunction parse(path) {\n  var keys = [];\n  var index = -1;\n  var mode = BEFORE_PATH;\n  var subPathDepth = 0;\n  var c, newChar, key, type, transition, action, typeMap;\n\n  var actions = [];\n\n  actions[PUSH] = function () {\n    if (key !== undefined) {\n      keys.push(key);\n      key = undefined;\n    }\n  };\n\n  actions[APPEND] = function () {\n    if (key === undefined) {\n      key = newChar;\n    } else {\n      key += newChar;\n    }\n  };\n\n  actions[INC_SUB_PATH_DEPTH] = function () {\n    actions[APPEND]();\n    subPathDepth++;\n  };\n\n  actions[PUSH_SUB_PATH] = function () {\n    if (subPathDepth > 0) {\n      subPathDepth--;\n      mode = IN_SUB_PATH;\n      actions[APPEND]();\n    } else {\n      subPathDepth = 0;\n      key = formatSubPath(key);\n      if (key === false) {\n        return false;\n      } else {\n        actions[PUSH]();\n      }\n    }\n  };\n\n  function maybeUnescapeQuote() {\n    var nextChar = path[index + 1];\n    if (mode === IN_SINGLE_QUOTE && nextChar === \"'\" || mode === IN_DOUBLE_QUOTE && nextChar === '\"') {\n      index++;\n      newChar = '\\\\' + nextChar;\n      actions[APPEND]();\n      return true;\n    }\n  }\n\n  while (mode != null) {\n    index++;\n    c = path[index];\n\n    if (c === '\\\\' && maybeUnescapeQuote()) {\n      continue;\n    }\n\n    type = getPathCharType(c);\n    typeMap = pathStateMachine[mode];\n    transition = typeMap[type] || typeMap['else'] || ERROR;\n\n    if (transition === ERROR) {\n      return; // parse error\n    }\n\n    mode = transition[0];\n    action = actions[transition[1]];\n    if (action) {\n      newChar = transition[2];\n      newChar = newChar === undefined ? c : newChar;\n      if (action() === false) {\n        return;\n      }\n    }\n\n    if (mode === AFTER_PATH) {\n      keys.raw = path;\n      return keys;\n    }\n  }\n}\n\n/**\n * External parse that check for a cache hit first\n *\n * @param {String} path\n * @return {Array|undefined}\n */\n\nfunction parsePath(path) {\n  var hit = pathCache.get(path);\n  if (!hit) {\n    hit = parse(path);\n    if (hit) {\n      pathCache.put(path, hit);\n    }\n  }\n  return hit;\n}\n\n/**\n * Get from an object from a path string\n *\n * @param {Object} obj\n * @param {String} path\n */\n\nfunction getPath(obj, path) {\n  return parseExpression(path).get(obj);\n}\n\n/**\n * Warn against setting non-existent root path on a vm.\n */\n\nvar warnNonExistent;\nif (process.env.NODE_ENV !== 'production') {\n  warnNonExistent = function (path) {\n    warn('You are setting a non-existent path \"' + path.raw + '\" ' + 'on a vm instance. Consider pre-initializing the property ' + 'with the \"data\" option for more reliable reactivity ' + 'and better performance.');\n  };\n}\n\n/**\n * Set on an object from a path\n *\n * @param {Object} obj\n * @param {String | Array} path\n * @param {*} val\n */\n\nfunction setPath(obj, path, val) {\n  var original = obj;\n  if (typeof path === 'string') {\n    path = parse(path);\n  }\n  if (!path || !isObject(obj)) {\n    return false;\n  }\n  var last, key;\n  for (var i = 0, l = path.length; i < l; i++) {\n    last = obj;\n    key = path[i];\n    if (key.charAt(0) === '*') {\n      key = parseExpression(key.slice(1)).get.call(original, original);\n    }\n    if (i < l - 1) {\n      obj = obj[key];\n      if (!isObject(obj)) {\n        obj = {};\n        if (process.env.NODE_ENV !== 'production' && last._isVue) {\n          warnNonExistent(path);\n        }\n        set(last, key, obj);\n      }\n    } else {\n      if (isArray(obj)) {\n        obj.$set(key, val);\n      } else if (key in obj) {\n        obj[key] = val;\n      } else {\n        if (process.env.NODE_ENV !== 'production' && obj._isVue) {\n          warnNonExistent(path);\n        }\n        set(obj, key, val);\n      }\n    }\n  }\n  return true;\n}\n\nvar path = Object.freeze({\n  parsePath: parsePath,\n  getPath: getPath,\n  setPath: setPath\n});\n\nvar expressionCache = new Cache(1000);\n\nvar allowedKeywords = 'Math,Date,this,true,false,null,undefined,Infinity,NaN,' + 'isNaN,isFinite,decodeURI,decodeURIComponent,encodeURI,' + 'encodeURIComponent,parseInt,parseFloat';\nvar allowedKeywordsRE = new RegExp('^(' + allowedKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\n// keywords that don't make sense inside expressions\nvar improperKeywords = 'break,case,class,catch,const,continue,debugger,default,' + 'delete,do,else,export,extends,finally,for,function,if,' + 'import,in,instanceof,let,return,super,switch,throw,try,' + 'var,while,with,yield,enum,await,implements,package,' + 'proctected,static,interface,private,public';\nvar improperKeywordsRE = new RegExp('^(' + improperKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\nvar wsRE = /\\s/g;\nvar newlineRE = /\\n/g;\nvar saveRE = /[\\{,]\\s*[\\w\\$_]+\\s*:|('(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\")|new |typeof |void /g;\nvar restoreRE = /\"(\\d+)\"/g;\nvar pathTestRE = /^[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['.*?'\\]|\\[\".*?\"\\]|\\[\\d+\\]|\\[[A-Za-z_$][\\w$]*\\])*$/;\nvar identRE = /[^\\w$\\.](?:[A-Za-z_$][\\w$]*)/g;\nvar booleanLiteralRE = /^(?:true|false)$/;\n\n/**\n * Save / Rewrite / Restore\n *\n * When rewriting paths found in an expression, it is\n * possible for the same letter sequences to be found in\n * strings and Object literal property keys. Therefore we\n * remove and store these parts in a temporary array, and\n * restore them after the path rewrite.\n */\n\nvar saved = [];\n\n/**\n * Save replacer\n *\n * The save regex can match two possible cases:\n * 1. An opening object literal\n * 2. A string\n * If matched as a plain string, we need to escape its\n * newlines, since the string needs to be preserved when\n * generating the function body.\n *\n * @param {String} str\n * @param {String} isString - str if matched as a string\n * @return {String} - placeholder with index\n */\n\nfunction save(str, isString) {\n  var i = saved.length;\n  saved[i] = isString ? str.replace(newlineRE, '\\\\n') : str;\n  return '\"' + i + '\"';\n}\n\n/**\n * Path rewrite replacer\n *\n * @param {String} raw\n * @return {String}\n */\n\nfunction rewrite(raw) {\n  var c = raw.charAt(0);\n  var path = raw.slice(1);\n  if (allowedKeywordsRE.test(path)) {\n    return raw;\n  } else {\n    path = path.indexOf('\"') > -1 ? path.replace(restoreRE, restore) : path;\n    return c + 'scope.' + path;\n  }\n}\n\n/**\n * Restore replacer\n *\n * @param {String} str\n * @param {String} i - matched save index\n * @return {String}\n */\n\nfunction restore(str, i) {\n  return saved[i];\n}\n\n/**\n * Rewrite an expression, prefixing all path accessors with\n * `scope.` and generate getter/setter functions.\n *\n * @param {String} exp\n * @return {Function}\n */\n\nfunction compileGetter(exp) {\n  if (improperKeywordsRE.test(exp)) {\n    process.env.NODE_ENV !== 'production' && warn('Avoid using reserved keywords in expression: ' + exp);\n  }\n  // reset state\n  saved.length = 0;\n  // save strings and object literal keys\n  var body = exp.replace(saveRE, save).replace(wsRE, '');\n  // rewrite all paths\n  // pad 1 space here becaue the regex matches 1 extra char\n  body = (' ' + body).replace(identRE, rewrite).replace(restoreRE, restore);\n  return makeGetterFn(body);\n}\n\n/**\n * Build a getter function. Requires eval.\n *\n * We isolate the try/catch so it doesn't affect the\n * optimization of the parse function when it is not called.\n *\n * @param {String} body\n * @return {Function|undefined}\n */\n\nfunction makeGetterFn(body) {\n  try {\n    return new Function('scope', 'return ' + body + ';');\n  } catch (e) {\n    process.env.NODE_ENV !== 'production' && warn('Invalid expression. ' + 'Generated function body: ' + body);\n  }\n}\n\n/**\n * Compile a setter function for the expression.\n *\n * @param {String} exp\n * @return {Function|undefined}\n */\n\nfunction compileSetter(exp) {\n  var path = parsePath(exp);\n  if (path) {\n    return function (scope, val) {\n      setPath(scope, path, val);\n    };\n  } else {\n    process.env.NODE_ENV !== 'production' && warn('Invalid setter expression: ' + exp);\n  }\n}\n\n/**\n * Parse an expression into re-written getter/setters.\n *\n * @param {String} exp\n * @param {Boolean} needSet\n * @return {Function}\n */\n\nfunction parseExpression(exp, needSet) {\n  exp = exp.trim();\n  // try cache\n  var hit = expressionCache.get(exp);\n  if (hit) {\n    if (needSet && !hit.set) {\n      hit.set = compileSetter(hit.exp);\n    }\n    return hit;\n  }\n  var res = { exp: exp };\n  res.get = isSimplePath(exp) && exp.indexOf('[') < 0\n  // optimized super simple getter\n  ? makeGetterFn('scope.' + exp)\n  // dynamic getter\n  : compileGetter(exp);\n  if (needSet) {\n    res.set = compileSetter(exp);\n  }\n  expressionCache.put(exp, res);\n  return res;\n}\n\n/**\n * Check if an expression is a simple path.\n *\n * @param {String} exp\n * @return {Boolean}\n */\n\nfunction isSimplePath(exp) {\n  return pathTestRE.test(exp) &&\n  // don't treat true/false as paths\n  !booleanLiteralRE.test(exp) &&\n  // Math constants e.g. Math.PI, Math.E etc.\n  exp.slice(0, 5) !== 'Math.';\n}\n\nvar expression = Object.freeze({\n  parseExpression: parseExpression,\n  isSimplePath: isSimplePath\n});\n\n// we have two separate queues: one for directive updates\n// and one for user watcher registered via $watch().\n// we want to guarantee directive updates to be called\n// before user watchers so that when user watchers are\n// triggered, the DOM would have already been in updated\n// state.\nvar queue = [];\nvar userQueue = [];\nvar has = {};\nvar circular = {};\nvar waiting = false;\nvar internalQueueDepleted = false;\n\n/**\n * Reset the batcher's state.\n */\n\nfunction resetBatcherState() {\n  queue = [];\n  userQueue = [];\n  has = {};\n  circular = {};\n  waiting = internalQueueDepleted = false;\n}\n\n/**\n * Flush both queues and run the watchers.\n */\n\nfunction flushBatcherQueue() {\n  runBatcherQueue(queue);\n  internalQueueDepleted = true;\n  runBatcherQueue(userQueue);\n  // dev tool hook\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV !== 'production') {\n    if (inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__) {\n      window.__VUE_DEVTOOLS_GLOBAL_HOOK__.emit('flush');\n    }\n  }\n  resetBatcherState();\n}\n\n/**\n * Run the watchers in a single queue.\n *\n * @param {Array} queue\n */\n\nfunction runBatcherQueue(queue) {\n  // do not cache length because more watchers might be pushed\n  // as we run existing watchers\n  for (var i = 0; i < queue.length; i++) {\n    var watcher = queue[i];\n    var id = watcher.id;\n    has[id] = null;\n    watcher.run();\n    // in dev build, check and stop circular updates.\n    if (process.env.NODE_ENV !== 'production' && has[id] != null) {\n      circular[id] = (circular[id] || 0) + 1;\n      if (circular[id] > config._maxUpdateCount) {\n        queue.splice(has[id], 1);\n        warn('You may have an infinite update loop for watcher ' + 'with expression: ' + watcher.expression);\n      }\n    }\n  }\n}\n\n/**\n * Push a watcher into the watcher queue.\n * Jobs with duplicate IDs will be skipped unless it's\n * pushed when the queue is being flushed.\n *\n * @param {Watcher} watcher\n *   properties:\n *   - {Number} id\n *   - {Function} run\n */\n\nfunction pushWatcher(watcher) {\n  var id = watcher.id;\n  if (has[id] == null) {\n    // if an internal watcher is pushed, but the internal\n    // queue is already depleted, we run it immediately.\n    if (internalQueueDepleted && !watcher.user) {\n      watcher.run();\n      return;\n    }\n    // push watcher into appropriate queue\n    var q = watcher.user ? userQueue : queue;\n    has[id] = q.length;\n    q.push(watcher);\n    // queue the flush\n    if (!waiting) {\n      waiting = true;\n      nextTick(flushBatcherQueue);\n    }\n  }\n}\n\nvar uid$2 = 0;\n\n/**\n * A watcher parses an expression, collects dependencies,\n * and fires callback when the expression value changes.\n * This is used for both the $watch() api and directives.\n *\n * @param {Vue} vm\n * @param {String} expression\n * @param {Function} cb\n * @param {Object} options\n *                 - {Array} filters\n *                 - {Boolean} twoWay\n *                 - {Boolean} deep\n *                 - {Boolean} user\n *                 - {Boolean} sync\n *                 - {Boolean} lazy\n *                 - {Function} [preProcess]\n *                 - {Function} [postProcess]\n * @constructor\n */\nfunction Watcher(vm, expOrFn, cb, options) {\n  // mix in options\n  if (options) {\n    extend(this, options);\n  }\n  var isFn = typeof expOrFn === 'function';\n  this.vm = vm;\n  vm._watchers.push(this);\n  this.expression = isFn ? expOrFn.toString() : expOrFn;\n  this.cb = cb;\n  this.id = ++uid$2; // uid for batching\n  this.active = true;\n  this.dirty = this.lazy; // for lazy watchers\n  this.deps = Object.create(null);\n  this.newDeps = null;\n  this.prevError = null; // for async error stacks\n  // parse expression for getter/setter\n  if (isFn) {\n    this.getter = expOrFn;\n    this.setter = undefined;\n  } else {\n    var res = parseExpression(expOrFn, this.twoWay);\n    this.getter = res.get;\n    this.setter = res.set;\n  }\n  this.value = this.lazy ? undefined : this.get();\n  // state for avoiding false triggers for deep and Array\n  // watchers during vm._digest()\n  this.queued = this.shallow = false;\n}\n\n/**\n * Add a dependency to this directive.\n *\n * @param {Dep} dep\n */\n\nWatcher.prototype.addDep = function (dep) {\n  var id = dep.id;\n  if (!this.newDeps[id]) {\n    this.newDeps[id] = dep;\n    if (!this.deps[id]) {\n      this.deps[id] = dep;\n      dep.addSub(this);\n    }\n  }\n};\n\n/**\n * Evaluate the getter, and re-collect dependencies.\n */\n\nWatcher.prototype.get = function () {\n  this.beforeGet();\n  var scope = this.scope || this.vm;\n  var value;\n  try {\n    value = this.getter.call(scope, scope);\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production' && config.warnExpressionErrors) {\n      warn('Error when evaluating expression \"' + this.expression + '\". ' + (config.debug ? '' : 'Turn on debug mode to see stack trace.'), e);\n    }\n  }\n  // \"touch\" every property so they are all tracked as\n  // dependencies for deep watching\n  if (this.deep) {\n    traverse(value);\n  }\n  if (this.preProcess) {\n    value = this.preProcess(value);\n  }\n  if (this.filters) {\n    value = scope._applyFilters(value, null, this.filters, false);\n  }\n  if (this.postProcess) {\n    value = this.postProcess(value);\n  }\n  this.afterGet();\n  return value;\n};\n\n/**\n * Set the corresponding value with the setter.\n *\n * @param {*} value\n */\n\nWatcher.prototype.set = function (value) {\n  var scope = this.scope || this.vm;\n  if (this.filters) {\n    value = scope._applyFilters(value, this.value, this.filters, true);\n  }\n  try {\n    this.setter.call(scope, scope, value);\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production' && config.warnExpressionErrors) {\n      warn('Error when evaluating setter \"' + this.expression + '\"', e);\n    }\n  }\n  // two-way sync for v-for alias\n  var forContext = scope.$forContext;\n  if (forContext && forContext.alias === this.expression) {\n    if (forContext.filters) {\n      process.env.NODE_ENV !== 'production' && warn('It seems you are using two-way binding on ' + 'a v-for alias (' + this.expression + '), and the ' + 'v-for has filters. This will not work properly. ' + 'Either remove the filters or use an array of ' + 'objects and bind to object properties instead.');\n      return;\n    }\n    forContext._withLock(function () {\n      if (scope.$key) {\n        // original is an object\n        forContext.rawValue[scope.$key] = value;\n      } else {\n        forContext.rawValue.$set(scope.$index, value);\n      }\n    });\n  }\n};\n\n/**\n * Prepare for dependency collection.\n */\n\nWatcher.prototype.beforeGet = function () {\n  Dep.target = this;\n  this.newDeps = Object.create(null);\n};\n\n/**\n * Clean up for dependency collection.\n */\n\nWatcher.prototype.afterGet = function () {\n  Dep.target = null;\n  var ids = Object.keys(this.deps);\n  var i = ids.length;\n  while (i--) {\n    var id = ids[i];\n    if (!this.newDeps[id]) {\n      this.deps[id].removeSub(this);\n    }\n  }\n  this.deps = this.newDeps;\n};\n\n/**\n * Subscriber interface.\n * Will be called when a dependency changes.\n *\n * @param {Boolean} shallow\n */\n\nWatcher.prototype.update = function (shallow) {\n  if (this.lazy) {\n    this.dirty = true;\n  } else if (this.sync || !config.async) {\n    this.run();\n  } else {\n    // if queued, only overwrite shallow with non-shallow,\n    // but not the other way around.\n    this.shallow = this.queued ? shallow ? this.shallow : false : !!shallow;\n    this.queued = true;\n    // record before-push error stack in debug mode\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && config.debug) {\n      this.prevError = new Error('[vue] async stack trace');\n    }\n    pushWatcher(this);\n  }\n};\n\n/**\n * Batcher job interface.\n * Will be called by the batcher.\n */\n\nWatcher.prototype.run = function () {\n  if (this.active) {\n    var value = this.get();\n    if (value !== this.value ||\n    // Deep watchers and watchers on Object/Arrays should fire even\n    // when the value is the same, because the value may\n    // have mutated; but only do so if this is a\n    // non-shallow update (caused by a vm digest).\n    (isObject(value) || this.deep) && !this.shallow) {\n      // set new value\n      var oldValue = this.value;\n      this.value = value;\n      // in debug + async mode, when a watcher callbacks\n      // throws, we also throw the saved before-push error\n      // so the full cross-tick stack trace is available.\n      var prevError = this.prevError;\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && config.debug && prevError) {\n        this.prevError = null;\n        try {\n          this.cb.call(this.vm, value, oldValue);\n        } catch (e) {\n          nextTick(function () {\n            throw prevError;\n          }, 0);\n          throw e;\n        }\n      } else {\n        this.cb.call(this.vm, value, oldValue);\n      }\n    }\n    this.queued = this.shallow = false;\n  }\n};\n\n/**\n * Evaluate the value of the watcher.\n * This only gets called for lazy watchers.\n */\n\nWatcher.prototype.evaluate = function () {\n  // avoid overwriting another watcher that is being\n  // collected.\n  var current = Dep.target;\n  this.value = this.get();\n  this.dirty = false;\n  Dep.target = current;\n};\n\n/**\n * Depend on all deps collected by this watcher.\n */\n\nWatcher.prototype.depend = function () {\n  var depIds = Object.keys(this.deps);\n  var i = depIds.length;\n  while (i--) {\n    this.deps[depIds[i]].depend();\n  }\n};\n\n/**\n * Remove self from all dependencies' subcriber list.\n */\n\nWatcher.prototype.teardown = function () {\n  if (this.active) {\n    // remove self from vm's watcher list\n    // we can skip this if the vm if being destroyed\n    // which can improve teardown performance.\n    if (!this.vm._isBeingDestroyed) {\n      this.vm._watchers.$remove(this);\n    }\n    var depIds = Object.keys(this.deps);\n    var i = depIds.length;\n    while (i--) {\n      this.deps[depIds[i]].removeSub(this);\n    }\n    this.active = false;\n    this.vm = this.cb = this.value = null;\n  }\n};\n\n/**\n * Recrusively traverse an object to evoke all converted\n * getters, so that every nested property inside the object\n * is collected as a \"deep\" dependency.\n *\n * @param {*} val\n */\n\nfunction traverse(val) {\n  var i, keys;\n  if (isArray(val)) {\n    i = val.length;\n    while (i--) traverse(val[i]);\n  } else if (isObject(val)) {\n    keys = Object.keys(val);\n    i = keys.length;\n    while (i--) traverse(val[keys[i]]);\n  }\n}\n\nvar cloak = {\n  bind: function bind() {\n    var el = this.el;\n    this.vm.$once('pre-hook:compiled', function () {\n      el.removeAttribute('v-cloak');\n    });\n  }\n};\n\nvar ref = {\n  bind: function bind() {\n    process.env.NODE_ENV !== 'production' && warn('v-ref:' + this.arg + ' must be used on a child ' + 'component. Found on <' + this.el.tagName.toLowerCase() + '>.');\n  }\n};\n\nvar ON = 700;\nvar MODEL = 800;\nvar BIND = 850;\nvar TRANSITION = 1100;\nvar EL = 1500;\nvar COMPONENT = 1500;\nvar PARTIAL = 1750;\nvar FOR = 2000;\nvar IF = 2000;\nvar SLOT = 2100;\n\nvar el = {\n\n  priority: EL,\n\n  bind: function bind() {\n    /* istanbul ignore if */\n    if (!this.arg) {\n      return;\n    }\n    var id = this.id = camelize(this.arg);\n    var refs = (this._scope || this.vm).$els;\n    if (hasOwn(refs, id)) {\n      refs[id] = this.el;\n    } else {\n      defineReactive(refs, id, this.el);\n    }\n  },\n\n  unbind: function unbind() {\n    var refs = (this._scope || this.vm).$els;\n    if (refs[this.id] === this.el) {\n      refs[this.id] = null;\n    }\n  }\n};\n\nvar prefixes = ['-webkit-', '-moz-', '-ms-'];\nvar camelPrefixes = ['Webkit', 'Moz', 'ms'];\nvar importantRE = /!important;?$/;\nvar propCache = Object.create(null);\n\nvar testEl = null;\n\nvar style = {\n\n  deep: true,\n\n  update: function update(value) {\n    if (typeof value === 'string') {\n      this.el.style.cssText = value;\n    } else if (isArray(value)) {\n      this.handleObject(value.reduce(extend, {}));\n    } else {\n      this.handleObject(value || {});\n    }\n  },\n\n  handleObject: function handleObject(value) {\n    // cache object styles so that only changed props\n    // are actually updated.\n    var cache = this.cache || (this.cache = {});\n    var name, val;\n    for (name in cache) {\n      if (!(name in value)) {\n        this.handleSingle(name, null);\n        delete cache[name];\n      }\n    }\n    for (name in value) {\n      val = value[name];\n      if (val !== cache[name]) {\n        cache[name] = val;\n        this.handleSingle(name, val);\n      }\n    }\n  },\n\n  handleSingle: function handleSingle(prop, value) {\n    prop = normalize(prop);\n    if (!prop) return; // unsupported prop\n    // cast possible numbers/booleans into strings\n    if (value != null) value += '';\n    if (value) {\n      var isImportant = importantRE.test(value) ? 'important' : '';\n      if (isImportant) {\n        value = value.replace(importantRE, '').trim();\n      }\n      this.el.style.setProperty(prop, value, isImportant);\n    } else {\n      this.el.style.removeProperty(prop);\n    }\n  }\n\n};\n\n/**\n * Normalize a CSS property name.\n * - cache result\n * - auto prefix\n * - camelCase -> dash-case\n *\n * @param {String} prop\n * @return {String}\n */\n\nfunction normalize(prop) {\n  if (propCache[prop]) {\n    return propCache[prop];\n  }\n  var res = prefix(prop);\n  propCache[prop] = propCache[res] = res;\n  return res;\n}\n\n/**\n * Auto detect the appropriate prefix for a CSS property.\n * https://gist.github.com/paulirish/523692\n *\n * @param {String} prop\n * @return {String}\n */\n\nfunction prefix(prop) {\n  prop = hyphenate(prop);\n  var camel = camelize(prop);\n  var upper = camel.charAt(0).toUpperCase() + camel.slice(1);\n  if (!testEl) {\n    testEl = document.createElement('div');\n  }\n  if (camel in testEl.style) {\n    return prop;\n  }\n  var i = prefixes.length;\n  var prefixed;\n  while (i--) {\n    prefixed = camelPrefixes[i] + upper;\n    if (prefixed in testEl.style) {\n      return prefixes[i] + prop;\n    }\n  }\n}\n\n// xlink\nvar xlinkNS = 'http://www.w3.org/1999/xlink';\nvar xlinkRE = /^xlink:/;\n\n// check for attributes that prohibit interpolations\nvar disallowedInterpAttrRE = /^v-|^:|^@|^(?:is|transition|transition-mode|debounce|track-by|stagger|enter-stagger|leave-stagger)$/;\n// these attributes should also set their corresponding properties\n// because they only affect the initial state of the element\nvar attrWithPropsRE = /^(?:value|checked|selected|muted)$/;\n\n// these attributes should set a hidden property for\n// binding v-model to object values\nvar modelProps = {\n  value: '_value',\n  'true-value': '_trueValue',\n  'false-value': '_falseValue'\n};\n\nvar bind = {\n\n  priority: BIND,\n\n  bind: function bind() {\n    var attr = this.arg;\n    var tag = this.el.tagName;\n    // should be deep watch on object mode\n    if (!attr) {\n      this.deep = true;\n    }\n    // handle interpolation bindings\n    var descriptor = this.descriptor;\n    var tokens = descriptor.interp;\n    if (tokens) {\n      // handle interpolations with one-time tokens\n      if (descriptor.hasOneTime) {\n        this.expression = tokensToExp(tokens, this._scope || this.vm);\n      }\n\n      // only allow binding on native attributes\n      if (disallowedInterpAttrRE.test(attr) || attr === 'name' && (tag === 'PARTIAL' || tag === 'SLOT')) {\n        process.env.NODE_ENV !== 'production' && warn(attr + '=\"' + descriptor.raw + '\": ' + 'attribute interpolation is not allowed in Vue.js ' + 'directives and special attributes.');\n        this.el.removeAttribute(attr);\n        this.invalid = true;\n      }\n\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production') {\n        var raw = attr + '=\"' + descriptor.raw + '\": ';\n        // warn src\n        if (attr === 'src') {\n          warn(raw + 'interpolation in \"src\" attribute will cause ' + 'a 404 request. Use v-bind:src instead.');\n        }\n\n        // warn style\n        if (attr === 'style') {\n          warn(raw + 'interpolation in \"style\" attribute will cause ' + 'the attribute to be discarded in Internet Explorer. ' + 'Use v-bind:style instead.');\n        }\n      }\n    }\n  },\n\n  update: function update(value) {\n    if (this.invalid) {\n      return;\n    }\n    var attr = this.arg;\n    if (this.arg) {\n      this.handleSingle(attr, value);\n    } else {\n      this.handleObject(value || {});\n    }\n  },\n\n  // share object handler with v-bind:class\n  handleObject: style.handleObject,\n\n  handleSingle: function handleSingle(attr, value) {\n    var el = this.el;\n    var interp = this.descriptor.interp;\n    if (!interp && attrWithPropsRE.test(attr) && attr in el) {\n      el[attr] = attr === 'value' ? value == null // IE9 will set input.value to \"null\" for null...\n      ? '' : value : value;\n    }\n    // set model props\n    var modelProp = modelProps[attr];\n    if (!interp && modelProp) {\n      el[modelProp] = value;\n      // update v-model if present\n      var model = el.__v_model;\n      if (model) {\n        model.listener();\n      }\n    }\n    // do not set value attribute for textarea\n    if (attr === 'value' && el.tagName === 'TEXTAREA') {\n      el.removeAttribute(attr);\n      return;\n    }\n    // update attribute\n    if (value != null && value !== false) {\n      if (attr === 'class') {\n        // handle edge case #1960:\n        // class interpolation should not overwrite Vue transition class\n        if (el.__v_trans) {\n          value += ' ' + el.__v_trans.id + '-transition';\n        }\n        setClass(el, value);\n      } else if (xlinkRE.test(attr)) {\n        el.setAttributeNS(xlinkNS, attr, value);\n      } else {\n        el.setAttribute(attr, value);\n      }\n    } else {\n      el.removeAttribute(attr);\n    }\n  }\n};\n\n// keyCode aliases\nvar keyCodes = {\n  esc: 27,\n  tab: 9,\n  enter: 13,\n  space: 32,\n  'delete': 46,\n  up: 38,\n  left: 37,\n  right: 39,\n  down: 40\n};\n\nfunction keyFilter(handler, keys) {\n  var codes = keys.map(function (key) {\n    var charCode = key.charCodeAt(0);\n    if (charCode > 47 && charCode < 58) {\n      return parseInt(key, 10);\n    }\n    if (key.length === 1) {\n      charCode = key.toUpperCase().charCodeAt(0);\n      if (charCode > 64 && charCode < 91) {\n        return charCode;\n      }\n    }\n    return keyCodes[key];\n  });\n  return function keyHandler(e) {\n    if (codes.indexOf(e.keyCode) > -1) {\n      return handler.call(this, e);\n    }\n  };\n}\n\nfunction stopFilter(handler) {\n  return function stopHandler(e) {\n    e.stopPropagation();\n    return handler.call(this, e);\n  };\n}\n\nfunction preventFilter(handler) {\n  return function preventHandler(e) {\n    e.preventDefault();\n    return handler.call(this, e);\n  };\n}\n\nvar on = {\n\n  acceptStatement: true,\n  priority: ON,\n\n  bind: function bind() {\n    // deal with iframes\n    if (this.el.tagName === 'IFRAME' && this.arg !== 'load') {\n      var self = this;\n      this.iframeBind = function () {\n        on$1(self.el.contentWindow, self.arg, self.handler);\n      };\n      this.on('load', this.iframeBind);\n    }\n  },\n\n  update: function update(handler) {\n    // stub a noop for v-on with no value,\n    // e.g. @mousedown.prevent\n    if (!this.descriptor.raw) {\n      handler = function () {};\n    }\n\n    if (typeof handler !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn('v-on:' + this.arg + '=\"' + this.expression + '\" expects a function value, ' + 'got ' + handler);\n      return;\n    }\n\n    // apply modifiers\n    if (this.modifiers.stop) {\n      handler = stopFilter(handler);\n    }\n    if (this.modifiers.prevent) {\n      handler = preventFilter(handler);\n    }\n    // key filter\n    var keys = Object.keys(this.modifiers).filter(function (key) {\n      return key !== 'stop' && key !== 'prevent';\n    });\n    if (keys.length) {\n      handler = keyFilter(handler, keys);\n    }\n\n    this.reset();\n    this.handler = handler;\n\n    if (this.iframeBind) {\n      this.iframeBind();\n    } else {\n      on$1(this.el, this.arg, this.handler);\n    }\n  },\n\n  reset: function reset() {\n    var el = this.iframeBind ? this.el.contentWindow : this.el;\n    if (this.handler) {\n      off(el, this.arg, this.handler);\n    }\n  },\n\n  unbind: function unbind() {\n    this.reset();\n  }\n};\n\nvar checkbox = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n\n    this.getValue = function () {\n      return el.hasOwnProperty('_value') ? el._value : self.params.number ? toNumber(el.value) : el.value;\n    };\n\n    function getBooleanValue() {\n      var val = el.checked;\n      if (val && el.hasOwnProperty('_trueValue')) {\n        return el._trueValue;\n      }\n      if (!val && el.hasOwnProperty('_falseValue')) {\n        return el._falseValue;\n      }\n      return val;\n    }\n\n    this.listener = function () {\n      var model = self._watcher.value;\n      if (isArray(model)) {\n        var val = self.getValue();\n        if (el.checked) {\n          if (indexOf(model, val) < 0) {\n            model.push(val);\n          }\n        } else {\n          model.$remove(val);\n        }\n      } else {\n        self.set(getBooleanValue());\n      }\n    };\n\n    this.on('change', this.listener);\n    if (el.hasAttribute('checked')) {\n      this.afterBind = this.listener;\n    }\n  },\n\n  update: function update(value) {\n    var el = this.el;\n    if (isArray(value)) {\n      el.checked = indexOf(value, this.getValue()) > -1;\n    } else {\n      if (el.hasOwnProperty('_trueValue')) {\n        el.checked = looseEqual(value, el._trueValue);\n      } else {\n        el.checked = !!value;\n      }\n    }\n  }\n};\n\nvar select = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n\n    // method to force update DOM using latest value.\n    this.forceUpdate = function () {\n      if (self._watcher) {\n        self.update(self._watcher.get());\n      }\n    };\n\n    // check if this is a multiple select\n    var multiple = this.multiple = el.hasAttribute('multiple');\n\n    // attach listener\n    this.listener = function () {\n      var value = getValue(el, multiple);\n      value = self.params.number ? isArray(value) ? value.map(toNumber) : toNumber(value) : value;\n      self.set(value);\n    };\n    this.on('change', this.listener);\n\n    // if has initial value, set afterBind\n    var initValue = getValue(el, multiple, true);\n    if (multiple && initValue.length || !multiple && initValue !== null) {\n      this.afterBind = this.listener;\n    }\n\n    // All major browsers except Firefox resets\n    // selectedIndex with value -1 to 0 when the element\n    // is appended to a new parent, therefore we have to\n    // force a DOM update whenever that happens...\n    this.vm.$on('hook:attached', this.forceUpdate);\n  },\n\n  update: function update(value) {\n    var el = this.el;\n    el.selectedIndex = -1;\n    var multi = this.multiple && isArray(value);\n    var options = el.options;\n    var i = options.length;\n    var op, val;\n    while (i--) {\n      op = options[i];\n      val = op.hasOwnProperty('_value') ? op._value : op.value;\n      /* eslint-disable eqeqeq */\n      op.selected = multi ? indexOf$1(value, val) > -1 : looseEqual(value, val);\n      /* eslint-enable eqeqeq */\n    }\n  },\n\n  unbind: function unbind() {\n    /* istanbul ignore next */\n    this.vm.$off('hook:attached', this.forceUpdate);\n  }\n};\n\n/**\n * Get select value\n *\n * @param {SelectElement} el\n * @param {Boolean} multi\n * @param {Boolean} init\n * @return {Array|*}\n */\n\nfunction getValue(el, multi, init) {\n  var res = multi ? [] : null;\n  var op, val, selected;\n  for (var i = 0, l = el.options.length; i < l; i++) {\n    op = el.options[i];\n    selected = init ? op.hasAttribute('selected') : op.selected;\n    if (selected) {\n      val = op.hasOwnProperty('_value') ? op._value : op.value;\n      if (multi) {\n        res.push(val);\n      } else {\n        return val;\n      }\n    }\n  }\n  return res;\n}\n\n/**\n * Native Array.indexOf uses strict equal, but in this\n * case we need to match string/numbers with custom equal.\n *\n * @param {Array} arr\n * @param {*} val\n */\n\nfunction indexOf$1(arr, val) {\n  var i = arr.length;\n  while (i--) {\n    if (looseEqual(arr[i], val)) {\n      return i;\n    }\n  }\n  return -1;\n}\n\nvar radio = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n\n    this.getValue = function () {\n      // value overwrite via v-bind:value\n      if (el.hasOwnProperty('_value')) {\n        return el._value;\n      }\n      var val = el.value;\n      if (self.params.number) {\n        val = toNumber(val);\n      }\n      return val;\n    };\n\n    this.listener = function () {\n      self.set(self.getValue());\n    };\n    this.on('change', this.listener);\n\n    if (el.hasAttribute('checked')) {\n      this.afterBind = this.listener;\n    }\n  },\n\n  update: function update(value) {\n    this.el.checked = looseEqual(value, this.getValue());\n  }\n};\n\nvar text$2 = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n    var isRange = el.type === 'range';\n    var lazy = this.params.lazy;\n    var number = this.params.number;\n    var debounce = this.params.debounce;\n\n    // handle composition events.\n    //   http://blog.evanyou.me/2014/01/03/composition-event/\n    // skip this for Android because it handles composition\n    // events quite differently. Android doesn't trigger\n    // composition events for language input methods e.g.\n    // Chinese, but instead triggers them for spelling\n    // suggestions... (see Discussion/#162)\n    var composing = false;\n    if (!isAndroid && !isRange) {\n      this.on('compositionstart', function () {\n        composing = true;\n      });\n      this.on('compositionend', function () {\n        composing = false;\n        // in IE11 the \"compositionend\" event fires AFTER\n        // the \"input\" event, so the input handler is blocked\n        // at the end... have to call it here.\n        //\n        // #1327: in lazy mode this is unecessary.\n        if (!lazy) {\n          self.listener();\n        }\n      });\n    }\n\n    // prevent messing with the input when user is typing,\n    // and force update on blur.\n    this.focused = false;\n    if (!isRange && !lazy) {\n      this.on('focus', function () {\n        self.focused = true;\n      });\n      this.on('blur', function () {\n        self.focused = false;\n        // do not sync value after fragment removal (#2017)\n        if (!self._frag || self._frag.inserted) {\n          self.rawListener();\n        }\n      });\n    }\n\n    // Now attach the main listener\n    this.listener = this.rawListener = function () {\n      if (composing || !self._bound) {\n        return;\n      }\n      var val = number || isRange ? toNumber(el.value) : el.value;\n      self.set(val);\n      // force update on next tick to avoid lock & same value\n      // also only update when user is not typing\n      nextTick(function () {\n        if (self._bound && !self.focused) {\n          self.update(self._watcher.value);\n        }\n      });\n    };\n\n    // apply debounce\n    if (debounce) {\n      this.listener = _debounce(this.listener, debounce);\n    }\n\n    // Support jQuery events, since jQuery.trigger() doesn't\n    // trigger native events in some cases and some plugins\n    // rely on $.trigger()\n    //\n    // We want to make sure if a listener is attached using\n    // jQuery, it is also removed with jQuery, that's why\n    // we do the check for each directive instance and\n    // store that check result on itself. This also allows\n    // easier test coverage control by unsetting the global\n    // jQuery variable in tests.\n    this.hasjQuery = typeof jQuery === 'function';\n    if (this.hasjQuery) {\n      jQuery(el).on('change', this.listener);\n      if (!lazy) {\n        jQuery(el).on('input', this.listener);\n      }\n    } else {\n      this.on('change', this.listener);\n      if (!lazy) {\n        this.on('input', this.listener);\n      }\n    }\n\n    // IE9 doesn't fire input event on backspace/del/cut\n    if (!lazy && isIE9) {\n      this.on('cut', function () {\n        nextTick(self.listener);\n      });\n      this.on('keyup', function (e) {\n        if (e.keyCode === 46 || e.keyCode === 8) {\n          self.listener();\n        }\n      });\n    }\n\n    // set initial value if present\n    if (el.hasAttribute('value') || el.tagName === 'TEXTAREA' && el.value.trim()) {\n      this.afterBind = this.listener;\n    }\n  },\n\n  update: function update(value) {\n    this.el.value = _toString(value);\n  },\n\n  unbind: function unbind() {\n    var el = this.el;\n    if (this.hasjQuery) {\n      jQuery(el).off('change', this.listener);\n      jQuery(el).off('input', this.listener);\n    }\n  }\n};\n\nvar handlers = {\n  text: text$2,\n  radio: radio,\n  select: select,\n  checkbox: checkbox\n};\n\nvar model = {\n\n  priority: MODEL,\n  twoWay: true,\n  handlers: handlers,\n  params: ['lazy', 'number', 'debounce'],\n\n  /**\n   * Possible elements:\n   *   <select>\n   *   <textarea>\n   *   <input type=\"*\">\n   *     - text\n   *     - checkbox\n   *     - radio\n   *     - number\n   */\n\n  bind: function bind() {\n    // friendly warning...\n    this.checkFilters();\n    if (this.hasRead && !this.hasWrite) {\n      process.env.NODE_ENV !== 'production' && warn('It seems you are using a read-only filter with ' + 'v-model. You might want to use a two-way filter ' + 'to ensure correct behavior.');\n    }\n    var el = this.el;\n    var tag = el.tagName;\n    var handler;\n    if (tag === 'INPUT') {\n      handler = handlers[el.type] || handlers.text;\n    } else if (tag === 'SELECT') {\n      handler = handlers.select;\n    } else if (tag === 'TEXTAREA') {\n      handler = handlers.text;\n    } else {\n      process.env.NODE_ENV !== 'production' && warn('v-model does not support element type: ' + tag);\n      return;\n    }\n    el.__v_model = this;\n    handler.bind.call(this);\n    this.update = handler.update;\n    this._unbind = handler.unbind;\n  },\n\n  /**\n   * Check read/write filter stats.\n   */\n\n  checkFilters: function checkFilters() {\n    var filters = this.filters;\n    if (!filters) return;\n    var i = filters.length;\n    while (i--) {\n      var filter = resolveAsset(this.vm.$options, 'filters', filters[i].name);\n      if (typeof filter === 'function' || filter.read) {\n        this.hasRead = true;\n      }\n      if (filter.write) {\n        this.hasWrite = true;\n      }\n    }\n  },\n\n  unbind: function unbind() {\n    this.el.__v_model = null;\n    this._unbind && this._unbind();\n  }\n};\n\nvar show = {\n\n  bind: function bind() {\n    // check else block\n    var next = this.el.nextElementSibling;\n    if (next && getAttr(next, 'v-else') !== null) {\n      this.elseEl = next;\n    }\n  },\n\n  update: function update(value) {\n    this.apply(this.el, value);\n    if (this.elseEl) {\n      this.apply(this.elseEl, !value);\n    }\n  },\n\n  apply: function apply(el, value) {\n    if (inDoc(el)) {\n      applyTransition(el, value ? 1 : -1, toggle, this.vm);\n    } else {\n      toggle();\n    }\n    function toggle() {\n      el.style.display = value ? '' : 'none';\n    }\n  }\n};\n\nvar templateCache = new Cache(1000);\nvar idSelectorCache = new Cache(1000);\n\nvar map = {\n  efault: [0, '', ''],\n  legend: [1, '<fieldset>', '</fieldset>'],\n  tr: [2, '<table><tbody>', '</tbody></table>'],\n  col: [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>']\n};\n\nmap.td = map.th = [3, '<table><tbody><tr>', '</tr></tbody></table>'];\n\nmap.option = map.optgroup = [1, '<select multiple=\"multiple\">', '</select>'];\n\nmap.thead = map.tbody = map.colgroup = map.caption = map.tfoot = [1, '<table>', '</table>'];\n\nmap.g = map.defs = map.symbol = map.use = map.image = map.text = map.circle = map.ellipse = map.line = map.path = map.polygon = map.polyline = map.rect = [1, '<svg ' + 'xmlns=\"http://www.w3.org/2000/svg\" ' + 'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ' + 'xmlns:ev=\"http://www.w3.org/2001/xml-events\"' + 'version=\"1.1\">', '</svg>'];\n\n/**\n * Check if a node is a supported template node with a\n * DocumentFragment content.\n *\n * @param {Node} node\n * @return {Boolean}\n */\n\nfunction isRealTemplate(node) {\n  return isTemplate(node) && node.content instanceof DocumentFragment;\n}\n\nvar tagRE$1 = /<([\\w:]+)/;\nvar entityRE = /&#?\\w+?;/;\n\n/**\n * Convert a string template to a DocumentFragment.\n * Determines correct wrapping by tag types. Wrapping\n * strategy found in jQuery & component/domify.\n *\n * @param {String} templateString\n * @param {Boolean} raw\n * @return {DocumentFragment}\n */\n\nfunction stringToFragment(templateString, raw) {\n  // try a cache hit first\n  var hit = templateCache.get(templateString);\n  if (hit) {\n    return hit;\n  }\n\n  var frag = document.createDocumentFragment();\n  var tagMatch = templateString.match(tagRE$1);\n  var entityMatch = entityRE.test(templateString);\n\n  if (!tagMatch && !entityMatch) {\n    // text only, return a single text node.\n    frag.appendChild(document.createTextNode(templateString));\n  } else {\n\n    var tag = tagMatch && tagMatch[1];\n    var wrap = map[tag] || map.efault;\n    var depth = wrap[0];\n    var prefix = wrap[1];\n    var suffix = wrap[2];\n    var node = document.createElement('div');\n\n    var templateStringToUse = raw ? templateString : templateString.trim();\n    node.innerHTML = prefix + templateStringToUse + suffix;\n    while (depth--) {\n      node = node.lastChild;\n    }\n\n    var child;\n    /* eslint-disable no-cond-assign */\n    while (child = node.firstChild) {\n      /* eslint-enable no-cond-assign */\n      frag.appendChild(child);\n    }\n  }\n\n  templateCache.put(templateString, frag);\n  return frag;\n}\n\n/**\n * Convert a template node to a DocumentFragment.\n *\n * @param {Node} node\n * @return {DocumentFragment}\n */\n\nfunction nodeToFragment(node) {\n  // if its a template tag and the browser supports it,\n  // its content is already a document fragment.\n  if (isRealTemplate(node)) {\n    trimNode(node.content);\n    return node.content;\n  }\n  // script template\n  if (node.tagName === 'SCRIPT') {\n    return stringToFragment(node.textContent);\n  }\n  // normal node, clone it to avoid mutating the original\n  var clonedNode = cloneNode(node);\n  var frag = document.createDocumentFragment();\n  var child;\n  /* eslint-disable no-cond-assign */\n  while (child = clonedNode.firstChild) {\n    /* eslint-enable no-cond-assign */\n    frag.appendChild(child);\n  }\n  trimNode(frag);\n  return frag;\n}\n\n// Test for the presence of the Safari template cloning bug\n// https://bugs.webkit.org/showug.cgi?id=137755\nvar hasBrokenTemplate = (function () {\n  /* istanbul ignore else */\n  if (inBrowser) {\n    var a = document.createElement('div');\n    a.innerHTML = '<template>1</template>';\n    return !a.cloneNode(true).firstChild.innerHTML;\n  } else {\n    return false;\n  }\n})();\n\n// Test for IE10/11 textarea placeholder clone bug\nvar hasTextareaCloneBug = (function () {\n  /* istanbul ignore else */\n  if (inBrowser) {\n    var t = document.createElement('textarea');\n    t.placeholder = 't';\n    return t.cloneNode(true).value === 't';\n  } else {\n    return false;\n  }\n})();\n\n/**\n * 1. Deal with Safari cloning nested <template> bug by\n *    manually cloning all template instances.\n * 2. Deal with IE10/11 textarea placeholder bug by setting\n *    the correct value after cloning.\n *\n * @param {Element|DocumentFragment} node\n * @return {Element|DocumentFragment}\n */\n\nfunction cloneNode(node) {\n  if (!node.querySelectorAll) {\n    return node.cloneNode();\n  }\n  var res = node.cloneNode(true);\n  var i, original, cloned;\n  /* istanbul ignore if */\n  if (hasBrokenTemplate) {\n    var tempClone = res;\n    if (isRealTemplate(node)) {\n      node = node.content;\n      tempClone = res.content;\n    }\n    original = node.querySelectorAll('template');\n    if (original.length) {\n      cloned = tempClone.querySelectorAll('template');\n      i = cloned.length;\n      while (i--) {\n        cloned[i].parentNode.replaceChild(cloneNode(original[i]), cloned[i]);\n      }\n    }\n  }\n  /* istanbul ignore if */\n  if (hasTextareaCloneBug) {\n    if (node.tagName === 'TEXTAREA') {\n      res.value = node.value;\n    } else {\n      original = node.querySelectorAll('textarea');\n      if (original.length) {\n        cloned = res.querySelectorAll('textarea');\n        i = cloned.length;\n        while (i--) {\n          cloned[i].value = original[i].value;\n        }\n      }\n    }\n  }\n  return res;\n}\n\n/**\n * Process the template option and normalizes it into a\n * a DocumentFragment that can be used as a partial or a\n * instance template.\n *\n * @param {*} template\n *        Possible values include:\n *        - DocumentFragment object\n *        - Node object of type Template\n *        - id selector: '#some-template-id'\n *        - template string: '<div><span>{{msg}}</span></div>'\n * @param {Boolean} shouldClone\n * @param {Boolean} raw\n *        inline HTML interpolation. Do not check for id\n *        selector and keep whitespace in the string.\n * @return {DocumentFragment|undefined}\n */\n\nfunction parseTemplate(template, shouldClone, raw) {\n  var node, frag;\n\n  // if the template is already a document fragment,\n  // do nothing\n  if (template instanceof DocumentFragment) {\n    trimNode(template);\n    return shouldClone ? cloneNode(template) : template;\n  }\n\n  if (typeof template === 'string') {\n    // id selector\n    if (!raw && template.charAt(0) === '#') {\n      // id selector can be cached too\n      frag = idSelectorCache.get(template);\n      if (!frag) {\n        node = document.getElementById(template.slice(1));\n        if (node) {\n          frag = nodeToFragment(node);\n          // save selector to cache\n          idSelectorCache.put(template, frag);\n        }\n      }\n    } else {\n      // normal string template\n      frag = stringToFragment(template, raw);\n    }\n  } else if (template.nodeType) {\n    // a direct node\n    frag = nodeToFragment(template);\n  }\n\n  return frag && shouldClone ? cloneNode(frag) : frag;\n}\n\nvar template = Object.freeze({\n  cloneNode: cloneNode,\n  parseTemplate: parseTemplate\n});\n\n/**\n * Abstraction for a partially-compiled fragment.\n * Can optionally compile content with a child scope.\n *\n * @param {Function} linker\n * @param {Vue} vm\n * @param {DocumentFragment} frag\n * @param {Vue} [host]\n * @param {Object} [scope]\n */\nfunction Fragment(linker, vm, frag, host, scope, parentFrag) {\n  this.children = [];\n  this.childFrags = [];\n  this.vm = vm;\n  this.scope = scope;\n  this.inserted = false;\n  this.parentFrag = parentFrag;\n  if (parentFrag) {\n    parentFrag.childFrags.push(this);\n  }\n  this.unlink = linker(vm, frag, host, scope, this);\n  var single = this.single = frag.childNodes.length === 1 &&\n  // do not go single mode if the only node is an anchor\n  !frag.childNodes[0].__vue_anchor;\n  if (single) {\n    this.node = frag.childNodes[0];\n    this.before = singleBefore;\n    this.remove = singleRemove;\n  } else {\n    this.node = createAnchor('fragment-start');\n    this.end = createAnchor('fragment-end');\n    this.frag = frag;\n    prepend(this.node, frag);\n    frag.appendChild(this.end);\n    this.before = multiBefore;\n    this.remove = multiRemove;\n  }\n  this.node.__vfrag__ = this;\n}\n\n/**\n * Call attach/detach for all components contained within\n * this fragment. Also do so recursively for all child\n * fragments.\n *\n * @param {Function} hook\n */\n\nFragment.prototype.callHook = function (hook) {\n  var i, l;\n  for (i = 0, l = this.childFrags.length; i < l; i++) {\n    this.childFrags[i].callHook(hook);\n  }\n  for (i = 0, l = this.children.length; i < l; i++) {\n    hook(this.children[i]);\n  }\n};\n\n/**\n * Insert fragment before target, single node version\n *\n * @param {Node} target\n * @param {Boolean} withTransition\n */\n\nfunction singleBefore(target, withTransition) {\n  this.inserted = true;\n  var method = withTransition !== false ? beforeWithTransition : before;\n  method(this.node, target, this.vm);\n  if (inDoc(this.node)) {\n    this.callHook(attach);\n  }\n}\n\n/**\n * Remove fragment, single node version\n */\n\nfunction singleRemove() {\n  this.inserted = false;\n  var shouldCallRemove = inDoc(this.node);\n  var self = this;\n  this.beforeRemove();\n  removeWithTransition(this.node, this.vm, function () {\n    if (shouldCallRemove) {\n      self.callHook(detach);\n    }\n    self.destroy();\n  });\n}\n\n/**\n * Insert fragment before target, multi-nodes version\n *\n * @param {Node} target\n * @param {Boolean} withTransition\n */\n\nfunction multiBefore(target, withTransition) {\n  this.inserted = true;\n  var vm = this.vm;\n  var method = withTransition !== false ? beforeWithTransition : before;\n  mapNodeRange(this.node, this.end, function (node) {\n    method(node, target, vm);\n  });\n  if (inDoc(this.node)) {\n    this.callHook(attach);\n  }\n}\n\n/**\n * Remove fragment, multi-nodes version\n */\n\nfunction multiRemove() {\n  this.inserted = false;\n  var self = this;\n  var shouldCallRemove = inDoc(this.node);\n  this.beforeRemove();\n  removeNodeRange(this.node, this.end, this.vm, this.frag, function () {\n    if (shouldCallRemove) {\n      self.callHook(detach);\n    }\n    self.destroy();\n  });\n}\n\n/**\n * Prepare the fragment for removal.\n */\n\nFragment.prototype.beforeRemove = function () {\n  var i, l;\n  for (i = 0, l = this.childFrags.length; i < l; i++) {\n    // call the same method recursively on child\n    // fragments, depth-first\n    this.childFrags[i].beforeRemove(false);\n  }\n  for (i = 0, l = this.children.length; i < l; i++) {\n    // Call destroy for all contained instances,\n    // with remove:false and defer:true.\n    // Defer is necessary because we need to\n    // keep the children to call detach hooks\n    // on them.\n    this.children[i].$destroy(false, true);\n  }\n  var dirs = this.unlink.dirs;\n  for (i = 0, l = dirs.length; i < l; i++) {\n    // disable the watchers on all the directives\n    // so that the rendered content stays the same\n    // during removal.\n    dirs[i]._watcher && dirs[i]._watcher.teardown();\n  }\n};\n\n/**\n * Destroy the fragment.\n */\n\nFragment.prototype.destroy = function () {\n  if (this.parentFrag) {\n    this.parentFrag.childFrags.$remove(this);\n  }\n  this.node.__vfrag__ = null;\n  this.unlink();\n};\n\n/**\n * Call attach hook for a Vue instance.\n *\n * @param {Vue} child\n */\n\nfunction attach(child) {\n  if (!child._isAttached) {\n    child._callHook('attached');\n  }\n}\n\n/**\n * Call detach hook for a Vue instance.\n *\n * @param {Vue} child\n */\n\nfunction detach(child) {\n  if (child._isAttached) {\n    child._callHook('detached');\n  }\n}\n\nvar linkerCache = new Cache(5000);\n\n/**\n * A factory that can be used to create instances of a\n * fragment. Caches the compiled linker if possible.\n *\n * @param {Vue} vm\n * @param {Element|String} el\n */\nfunction FragmentFactory(vm, el) {\n  this.vm = vm;\n  var template;\n  var isString = typeof el === 'string';\n  if (isString || isTemplate(el)) {\n    template = parseTemplate(el, true);\n  } else {\n    template = document.createDocumentFragment();\n    template.appendChild(el);\n  }\n  this.template = template;\n  // linker can be cached, but only for components\n  var linker;\n  var cid = vm.constructor.cid;\n  if (cid > 0) {\n    var cacheId = cid + (isString ? el : el.outerHTML);\n    linker = linkerCache.get(cacheId);\n    if (!linker) {\n      linker = compile(template, vm.$options, true);\n      linkerCache.put(cacheId, linker);\n    }\n  } else {\n    linker = compile(template, vm.$options, true);\n  }\n  this.linker = linker;\n}\n\n/**\n * Create a fragment instance with given host and scope.\n *\n * @param {Vue} host\n * @param {Object} scope\n * @param {Fragment} parentFrag\n */\n\nFragmentFactory.prototype.create = function (host, scope, parentFrag) {\n  var frag = cloneNode(this.template);\n  return new Fragment(this.linker, this.vm, frag, host, scope, parentFrag);\n};\n\nvar vIf = {\n\n  priority: IF,\n\n  bind: function bind() {\n    var el = this.el;\n    if (!el.__vue__) {\n      // check else block\n      var next = el.nextElementSibling;\n      if (next && getAttr(next, 'v-else') !== null) {\n        remove(next);\n        this.elseFactory = new FragmentFactory(this.vm, next);\n      }\n      // check main block\n      this.anchor = createAnchor('v-if');\n      replace(el, this.anchor);\n      this.factory = new FragmentFactory(this.vm, el);\n    } else {\n      process.env.NODE_ENV !== 'production' && warn('v-if=\"' + this.expression + '\" cannot be ' + 'used on an instance root element.');\n      this.invalid = true;\n    }\n  },\n\n  update: function update(value) {\n    if (this.invalid) return;\n    if (value) {\n      if (!this.frag) {\n        this.insert();\n      }\n    } else {\n      this.remove();\n    }\n  },\n\n  insert: function insert() {\n    if (this.elseFrag) {\n      this.elseFrag.remove();\n      this.elseFrag = null;\n    }\n    this.frag = this.factory.create(this._host, this._scope, this._frag);\n    this.frag.before(this.anchor);\n  },\n\n  remove: function remove() {\n    if (this.frag) {\n      this.frag.remove();\n      this.frag = null;\n    }\n    if (this.elseFactory && !this.elseFrag) {\n      this.elseFrag = this.elseFactory.create(this._host, this._scope, this._frag);\n      this.elseFrag.before(this.anchor);\n    }\n  },\n\n  unbind: function unbind() {\n    if (this.frag) {\n      this.frag.destroy();\n    }\n  }\n};\n\nvar uid$1 = 0;\n\nvar vFor = {\n\n  priority: FOR,\n\n  params: ['track-by', 'stagger', 'enter-stagger', 'leave-stagger'],\n\n  bind: function bind() {\n    // support \"item in items\" syntax\n    var inMatch = this.expression.match(/(.*) in (.*)/);\n    if (inMatch) {\n      var itMatch = inMatch[1].match(/\\((.*),(.*)\\)/);\n      if (itMatch) {\n        this.iterator = itMatch[1].trim();\n        this.alias = itMatch[2].trim();\n      } else {\n        this.alias = inMatch[1].trim();\n      }\n      this.expression = inMatch[2];\n    }\n\n    if (!this.alias) {\n      process.env.NODE_ENV !== 'production' && warn('Alias is required in v-for.');\n      return;\n    }\n\n    // uid as a cache identifier\n    this.id = '__v-for__' + ++uid$1;\n\n    // check if this is an option list,\n    // so that we know if we need to update the <select>'s\n    // v-model when the option list has changed.\n    // because v-model has a lower priority than v-for,\n    // the v-model is not bound here yet, so we have to\n    // retrive it in the actual updateModel() function.\n    var tag = this.el.tagName;\n    this.isOption = (tag === 'OPTION' || tag === 'OPTGROUP') && this.el.parentNode.tagName === 'SELECT';\n\n    // setup anchor nodes\n    this.start = createAnchor('v-for-start');\n    this.end = createAnchor('v-for-end');\n    replace(this.el, this.end);\n    before(this.start, this.end);\n\n    // cache\n    this.cache = Object.create(null);\n\n    // fragment factory\n    this.factory = new FragmentFactory(this.vm, this.el);\n  },\n\n  update: function update(data) {\n    this.diff(data);\n    this.updateRef();\n    this.updateModel();\n  },\n\n  /**\n   * Diff, based on new data and old data, determine the\n   * minimum amount of DOM manipulations needed to make the\n   * DOM reflect the new data Array.\n   *\n   * The algorithm diffs the new data Array by storing a\n   * hidden reference to an owner vm instance on previously\n   * seen data. This allows us to achieve O(n) which is\n   * better than a levenshtein distance based algorithm,\n   * which is O(m * n).\n   *\n   * @param {Array} data\n   */\n\n  diff: function diff(data) {\n    // check if the Array was converted from an Object\n    var item = data[0];\n    var convertedFromObject = this.fromObject = isObject(item) && hasOwn(item, '$key') && hasOwn(item, '$value');\n\n    var trackByKey = this.params.trackBy;\n    var oldFrags = this.frags;\n    var frags = this.frags = new Array(data.length);\n    var alias = this.alias;\n    var iterator = this.iterator;\n    var start = this.start;\n    var end = this.end;\n    var inDocument = inDoc(start);\n    var init = !oldFrags;\n    var i, l, frag, key, value, primitive;\n\n    // First pass, go through the new Array and fill up\n    // the new frags array. If a piece of data has a cached\n    // instance for it, we reuse it. Otherwise build a new\n    // instance.\n    for (i = 0, l = data.length; i < l; i++) {\n      item = data[i];\n      key = convertedFromObject ? item.$key : null;\n      value = convertedFromObject ? item.$value : item;\n      primitive = !isObject(value);\n      frag = !init && this.getCachedFrag(value, i, key);\n      if (frag) {\n        // reusable fragment\n        frag.reused = true;\n        // update $index\n        frag.scope.$index = i;\n        // update $key\n        if (key) {\n          frag.scope.$key = key;\n        }\n        // update iterator\n        if (iterator) {\n          frag.scope[iterator] = key !== null ? key : i;\n        }\n        // update data for track-by, object repeat &\n        // primitive values.\n        if (trackByKey || convertedFromObject || primitive) {\n          frag.scope[alias] = value;\n        }\n      } else {\n        // new isntance\n        frag = this.create(value, alias, i, key);\n        frag.fresh = !init;\n      }\n      frags[i] = frag;\n      if (init) {\n        frag.before(end);\n      }\n    }\n\n    // we're done for the initial render.\n    if (init) {\n      return;\n    }\n\n    // Second pass, go through the old fragments and\n    // destroy those who are not reused (and remove them\n    // from cache)\n    var removalIndex = 0;\n    var totalRemoved = oldFrags.length - frags.length;\n    for (i = 0, l = oldFrags.length; i < l; i++) {\n      frag = oldFrags[i];\n      if (!frag.reused) {\n        this.deleteCachedFrag(frag);\n        this.remove(frag, removalIndex++, totalRemoved, inDocument);\n      }\n    }\n\n    // Final pass, move/insert new fragments into the\n    // right place.\n    var targetPrev, prevEl, currentPrev;\n    var insertionIndex = 0;\n    for (i = 0, l = frags.length; i < l; i++) {\n      frag = frags[i];\n      // this is the frag that we should be after\n      targetPrev = frags[i - 1];\n      prevEl = targetPrev ? targetPrev.staggerCb ? targetPrev.staggerAnchor : targetPrev.end || targetPrev.node : start;\n      if (frag.reused && !frag.staggerCb) {\n        currentPrev = findPrevFrag(frag, start, this.id);\n        if (currentPrev !== targetPrev && (!currentPrev ||\n        // optimization for moving a single item.\n        // thanks to suggestions by @livoras in #1807\n        findPrevFrag(currentPrev, start, this.id) !== targetPrev)) {\n          this.move(frag, prevEl);\n        }\n      } else {\n        // new instance, or still in stagger.\n        // insert with updated stagger index.\n        this.insert(frag, insertionIndex++, prevEl, inDocument);\n      }\n      frag.reused = frag.fresh = false;\n    }\n  },\n\n  /**\n   * Create a new fragment instance.\n   *\n   * @param {*} value\n   * @param {String} alias\n   * @param {Number} index\n   * @param {String} [key]\n   * @return {Fragment}\n   */\n\n  create: function create(value, alias, index, key) {\n    var host = this._host;\n    // create iteration scope\n    var parentScope = this._scope || this.vm;\n    var scope = Object.create(parentScope);\n    // ref holder for the scope\n    scope.$refs = Object.create(parentScope.$refs);\n    scope.$els = Object.create(parentScope.$els);\n    // make sure point $parent to parent scope\n    scope.$parent = parentScope;\n    // for two-way binding on alias\n    scope.$forContext = this;\n    // define scope properties\n    defineReactive(scope, alias, value);\n    defineReactive(scope, '$index', index);\n    if (key) {\n      defineReactive(scope, '$key', key);\n    } else if (scope.$key) {\n      // avoid accidental fallback\n      def(scope, '$key', null);\n    }\n    if (this.iterator) {\n      defineReactive(scope, this.iterator, key !== null ? key : index);\n    }\n    var frag = this.factory.create(host, scope, this._frag);\n    frag.forId = this.id;\n    this.cacheFrag(value, frag, index, key);\n    return frag;\n  },\n\n  /**\n   * Update the v-ref on owner vm.\n   */\n\n  updateRef: function updateRef() {\n    var ref = this.descriptor.ref;\n    if (!ref) return;\n    var hash = (this._scope || this.vm).$refs;\n    var refs;\n    if (!this.fromObject) {\n      refs = this.frags.map(findVmFromFrag);\n    } else {\n      refs = {};\n      this.frags.forEach(function (frag) {\n        refs[frag.scope.$key] = findVmFromFrag(frag);\n      });\n    }\n    hash[ref] = refs;\n  },\n\n  /**\n   * For option lists, update the containing v-model on\n   * parent <select>.\n   */\n\n  updateModel: function updateModel() {\n    if (this.isOption) {\n      var parent = this.start.parentNode;\n      var model = parent && parent.__v_model;\n      if (model) {\n        model.forceUpdate();\n      }\n    }\n  },\n\n  /**\n   * Insert a fragment. Handles staggering.\n   *\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {Node} prevEl\n   * @param {Boolean} inDocument\n   */\n\n  insert: function insert(frag, index, prevEl, inDocument) {\n    if (frag.staggerCb) {\n      frag.staggerCb.cancel();\n      frag.staggerCb = null;\n    }\n    var staggerAmount = this.getStagger(frag, index, null, 'enter');\n    if (inDocument && staggerAmount) {\n      // create an anchor and insert it synchronously,\n      // so that we can resolve the correct order without\n      // worrying about some elements not inserted yet\n      var anchor = frag.staggerAnchor;\n      if (!anchor) {\n        anchor = frag.staggerAnchor = createAnchor('stagger-anchor');\n        anchor.__vfrag__ = frag;\n      }\n      after(anchor, prevEl);\n      var op = frag.staggerCb = cancellable(function () {\n        frag.staggerCb = null;\n        frag.before(anchor);\n        remove(anchor);\n      });\n      setTimeout(op, staggerAmount);\n    } else {\n      frag.before(prevEl.nextSibling);\n    }\n  },\n\n  /**\n   * Remove a fragment. Handles staggering.\n   *\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {Number} total\n   * @param {Boolean} inDocument\n   */\n\n  remove: function remove(frag, index, total, inDocument) {\n    if (frag.staggerCb) {\n      frag.staggerCb.cancel();\n      frag.staggerCb = null;\n      // it's not possible for the same frag to be removed\n      // twice, so if we have a pending stagger callback,\n      // it means this frag is queued for enter but removed\n      // before its transition started. Since it is already\n      // destroyed, we can just leave it in detached state.\n      return;\n    }\n    var staggerAmount = this.getStagger(frag, index, total, 'leave');\n    if (inDocument && staggerAmount) {\n      var op = frag.staggerCb = cancellable(function () {\n        frag.staggerCb = null;\n        frag.remove();\n      });\n      setTimeout(op, staggerAmount);\n    } else {\n      frag.remove();\n    }\n  },\n\n  /**\n   * Move a fragment to a new position.\n   * Force no transition.\n   *\n   * @param {Fragment} frag\n   * @param {Node} prevEl\n   */\n\n  move: function move(frag, prevEl) {\n    // fix a common issue with Sortable:\n    // if prevEl doesn't have nextSibling, this means it's\n    // been dragged after the end anchor. Just re-position\n    // the end anchor to the end of the container.\n    /* istanbul ignore if */\n    if (!prevEl.nextSibling) {\n      this.end.parentNode.appendChild(this.end);\n    }\n    frag.before(prevEl.nextSibling, false);\n  },\n\n  /**\n   * Cache a fragment using track-by or the object key.\n   *\n   * @param {*} value\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {String} [key]\n   */\n\n  cacheFrag: function cacheFrag(value, frag, index, key) {\n    var trackByKey = this.params.trackBy;\n    var cache = this.cache;\n    var primitive = !isObject(value);\n    var id;\n    if (key || trackByKey || primitive) {\n      id = trackByKey ? trackByKey === '$index' ? index : value[trackByKey] : key || value;\n      if (!cache[id]) {\n        cache[id] = frag;\n      } else if (trackByKey !== '$index') {\n        process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n      }\n    } else {\n      id = this.id;\n      if (hasOwn(value, id)) {\n        if (value[id] === null) {\n          value[id] = frag;\n        } else {\n          process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n        }\n      } else {\n        def(value, id, frag);\n      }\n    }\n    frag.raw = value;\n  },\n\n  /**\n   * Get a cached fragment from the value/index/key\n   *\n   * @param {*} value\n   * @param {Number} index\n   * @param {String} key\n   * @return {Fragment}\n   */\n\n  getCachedFrag: function getCachedFrag(value, index, key) {\n    var trackByKey = this.params.trackBy;\n    var primitive = !isObject(value);\n    var frag;\n    if (key || trackByKey || primitive) {\n      var id = trackByKey ? trackByKey === '$index' ? index : value[trackByKey] : key || value;\n      frag = this.cache[id];\n    } else {\n      frag = value[this.id];\n    }\n    if (frag && (frag.reused || frag.fresh)) {\n      process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n    }\n    return frag;\n  },\n\n  /**\n   * Delete a fragment from cache.\n   *\n   * @param {Fragment} frag\n   */\n\n  deleteCachedFrag: function deleteCachedFrag(frag) {\n    var value = frag.raw;\n    var trackByKey = this.params.trackBy;\n    var scope = frag.scope;\n    var index = scope.$index;\n    // fix #948: avoid accidentally fall through to\n    // a parent repeater which happens to have $key.\n    var key = hasOwn(scope, '$key') && scope.$key;\n    var primitive = !isObject(value);\n    if (trackByKey || key || primitive) {\n      var id = trackByKey ? trackByKey === '$index' ? index : value[trackByKey] : key || value;\n      this.cache[id] = null;\n    } else {\n      value[this.id] = null;\n      frag.raw = null;\n    }\n  },\n\n  /**\n   * Get the stagger amount for an insertion/removal.\n   *\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {Number} total\n   * @param {String} type\n   */\n\n  getStagger: function getStagger(frag, index, total, type) {\n    type = type + 'Stagger';\n    var trans = frag.node.__v_trans;\n    var hooks = trans && trans.hooks;\n    var hook = hooks && (hooks[type] || hooks.stagger);\n    return hook ? hook.call(frag, index, total) : index * parseInt(this.params[type] || this.params.stagger, 10);\n  },\n\n  /**\n   * Pre-process the value before piping it through the\n   * filters. This is passed to and called by the watcher.\n   */\n\n  _preProcess: function _preProcess(value) {\n    // regardless of type, store the un-filtered raw value.\n    this.rawValue = value;\n    return value;\n  },\n\n  /**\n   * Post-process the value after it has been piped through\n   * the filters. This is passed to and called by the watcher.\n   *\n   * It is necessary for this to be called during the\n   * wathcer's dependency collection phase because we want\n   * the v-for to update when the source Object is mutated.\n   */\n\n  _postProcess: function _postProcess(value) {\n    if (isArray(value)) {\n      return value;\n    } else if (isPlainObject(value)) {\n      // convert plain object to array.\n      var keys = Object.keys(value);\n      var i = keys.length;\n      var res = new Array(i);\n      var key;\n      while (i--) {\n        key = keys[i];\n        res[i] = {\n          $key: key,\n          $value: value[key]\n        };\n      }\n      return res;\n    } else {\n      if (typeof value === 'number') {\n        value = range(value);\n      }\n      return value || [];\n    }\n  },\n\n  unbind: function unbind() {\n    if (this.descriptor.ref) {\n      (this._scope || this.vm).$refs[this.descriptor.ref] = null;\n    }\n    if (this.frags) {\n      var i = this.frags.length;\n      var frag;\n      while (i--) {\n        frag = this.frags[i];\n        this.deleteCachedFrag(frag);\n        frag.destroy();\n      }\n    }\n  }\n};\n\n/**\n * Helper to find the previous element that is a fragment\n * anchor. This is necessary because a destroyed frag's\n * element could still be lingering in the DOM before its\n * leaving transition finishes, but its inserted flag\n * should have been set to false so we can skip them.\n *\n * If this is a block repeat, we want to make sure we only\n * return frag that is bound to this v-for. (see #929)\n *\n * @param {Fragment} frag\n * @param {Comment|Text} anchor\n * @param {String} id\n * @return {Fragment}\n */\n\nfunction findPrevFrag(frag, anchor, id) {\n  var el = frag.node.previousSibling;\n  /* istanbul ignore if */\n  if (!el) return;\n  frag = el.__vfrag__;\n  while ((!frag || frag.forId !== id || !frag.inserted) && el !== anchor) {\n    el = el.previousSibling;\n    /* istanbul ignore if */\n    if (!el) return;\n    frag = el.__vfrag__;\n  }\n  return frag;\n}\n\n/**\n * Find a vm from a fragment.\n *\n * @param {Fragment} frag\n * @return {Vue|undefined}\n */\n\nfunction findVmFromFrag(frag) {\n  var node = frag.node;\n  // handle multi-node frag\n  if (frag.end) {\n    while (!node.__vue__ && node !== frag.end && node.nextSibling) {\n      node = node.nextSibling;\n    }\n  }\n  return node.__vue__;\n}\n\n/**\n * Create a range array from given number.\n *\n * @param {Number} n\n * @return {Array}\n */\n\nfunction range(n) {\n  var i = -1;\n  var ret = new Array(n);\n  while (++i < n) {\n    ret[i] = i;\n  }\n  return ret;\n}\n\nif (process.env.NODE_ENV !== 'production') {\n  vFor.warnDuplicate = function (value) {\n    warn('Duplicate value found in v-for=\"' + this.descriptor.raw + '\": ' + JSON.stringify(value) + '. Use track-by=\"$index\" if ' + 'you are expecting duplicate values.');\n  };\n}\n\nvar html = {\n\n  bind: function bind() {\n    // a comment node means this is a binding for\n    // {{{ inline unescaped html }}}\n    if (this.el.nodeType === 8) {\n      // hold nodes\n      this.nodes = [];\n      // replace the placeholder with proper anchor\n      this.anchor = createAnchor('v-html');\n      replace(this.el, this.anchor);\n    }\n  },\n\n  update: function update(value) {\n    value = _toString(value);\n    if (this.nodes) {\n      this.swap(value);\n    } else {\n      this.el.innerHTML = value;\n    }\n  },\n\n  swap: function swap(value) {\n    // remove old nodes\n    var i = this.nodes.length;\n    while (i--) {\n      remove(this.nodes[i]);\n    }\n    // convert new value to a fragment\n    // do not attempt to retrieve from id selector\n    var frag = parseTemplate(value, true, true);\n    // save a reference to these nodes so we can remove later\n    this.nodes = toArray(frag.childNodes);\n    before(frag, this.anchor);\n  }\n};\n\nvar text = {\n\n  bind: function bind() {\n    this.attr = this.el.nodeType === 3 ? 'data' : 'textContent';\n  },\n\n  update: function update(value) {\n    this.el[this.attr] = _toString(value);\n  }\n};\n\n// must export plain object\nvar publicDirectives = {\n  text: text,\n  html: html,\n  'for': vFor,\n  'if': vIf,\n  show: show,\n  model: model,\n  on: on,\n  bind: bind,\n  el: el,\n  ref: ref,\n  cloak: cloak\n};\n\nvar queue$1 = [];\nvar queued = false;\n\n/**\n * Push a job into the queue.\n *\n * @param {Function} job\n */\n\nfunction pushJob(job) {\n  queue$1.push(job);\n  if (!queued) {\n    queued = true;\n    nextTick(flush);\n  }\n}\n\n/**\n * Flush the queue, and do one forced reflow before\n * triggering transitions.\n */\n\nfunction flush() {\n  // Force layout\n  var f = document.documentElement.offsetHeight;\n  for (var i = 0; i < queue$1.length; i++) {\n    queue$1[i]();\n  }\n  queue$1 = [];\n  queued = false;\n  // dummy return, so js linters don't complain about\n  // unused variable f\n  return f;\n}\n\nvar TYPE_TRANSITION = 'transition';\nvar TYPE_ANIMATION = 'animation';\nvar transDurationProp = transitionProp + 'Duration';\nvar animDurationProp = animationProp + 'Duration';\n\n/**\n * A Transition object that encapsulates the state and logic\n * of the transition.\n *\n * @param {Element} el\n * @param {String} id\n * @param {Object} hooks\n * @param {Vue} vm\n */\nfunction Transition(el, id, hooks, vm) {\n  this.id = id;\n  this.el = el;\n  this.enterClass = hooks && hooks.enterClass || id + '-enter';\n  this.leaveClass = hooks && hooks.leaveClass || id + '-leave';\n  this.hooks = hooks;\n  this.vm = vm;\n  // async state\n  this.pendingCssEvent = this.pendingCssCb = this.cancel = this.pendingJsCb = this.op = this.cb = null;\n  this.justEntered = false;\n  this.entered = this.left = false;\n  this.typeCache = {};\n  // check css transition type\n  this.type = hooks && hooks.type;\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV !== 'production') {\n    if (this.type && this.type !== TYPE_TRANSITION && this.type !== TYPE_ANIMATION) {\n      warn('invalid CSS transition type for transition=\"' + this.id + '\": ' + this.type);\n    }\n  }\n  // bind\n  var self = this;['enterNextTick', 'enterDone', 'leaveNextTick', 'leaveDone'].forEach(function (m) {\n    self[m] = bind$1(self[m], self);\n  });\n}\n\nvar p$1 = Transition.prototype;\n\n/**\n * Start an entering transition.\n *\n * 1. enter transition triggered\n * 2. call beforeEnter hook\n * 3. add enter class\n * 4. insert/show element\n * 5. call enter hook (with possible explicit js callback)\n * 6. reflow\n * 7. based on transition type:\n *    - transition:\n *        remove class now, wait for transitionend,\n *        then done if there's no explicit js callback.\n *    - animation:\n *        wait for animationend, remove class,\n *        then done if there's no explicit js callback.\n *    - no css transition:\n *        done now if there's no explicit js callback.\n * 8. wait for either done or js callback, then call\n *    afterEnter hook.\n *\n * @param {Function} op - insert/show the element\n * @param {Function} [cb]\n */\n\np$1.enter = function (op, cb) {\n  this.cancelPending();\n  this.callHook('beforeEnter');\n  this.cb = cb;\n  addClass(this.el, this.enterClass);\n  op();\n  this.entered = false;\n  this.callHookWithCb('enter');\n  if (this.entered) {\n    return; // user called done synchronously.\n  }\n  this.cancel = this.hooks && this.hooks.enterCancelled;\n  pushJob(this.enterNextTick);\n};\n\n/**\n * The \"nextTick\" phase of an entering transition, which is\n * to be pushed into a queue and executed after a reflow so\n * that removing the class can trigger a CSS transition.\n */\n\np$1.enterNextTick = function () {\n\n  // Important hack:\n  // in Chrome, if a just-entered element is applied the\n  // leave class while its interpolated property still has\n  // a very small value (within one frame), Chrome will\n  // skip the leave transition entirely and not firing the\n  // transtionend event. Therefore we need to protected\n  // against such cases using a one-frame timeout.\n  this.justEntered = true;\n  var self = this;\n  setTimeout(function () {\n    self.justEntered = false;\n  }, 17);\n\n  var enterDone = this.enterDone;\n  var type = this.getCssTransitionType(this.enterClass);\n  if (!this.pendingJsCb) {\n    if (type === TYPE_TRANSITION) {\n      // trigger transition by removing enter class now\n      removeClass(this.el, this.enterClass);\n      this.setupCssCb(transitionEndEvent, enterDone);\n    } else if (type === TYPE_ANIMATION) {\n      this.setupCssCb(animationEndEvent, enterDone);\n    } else {\n      enterDone();\n    }\n  } else if (type === TYPE_TRANSITION) {\n    removeClass(this.el, this.enterClass);\n  }\n};\n\n/**\n * The \"cleanup\" phase of an entering transition.\n */\n\np$1.enterDone = function () {\n  this.entered = true;\n  this.cancel = this.pendingJsCb = null;\n  removeClass(this.el, this.enterClass);\n  this.callHook('afterEnter');\n  if (this.cb) this.cb();\n};\n\n/**\n * Start a leaving transition.\n *\n * 1. leave transition triggered.\n * 2. call beforeLeave hook\n * 3. add leave class (trigger css transition)\n * 4. call leave hook (with possible explicit js callback)\n * 5. reflow if no explicit js callback is provided\n * 6. based on transition type:\n *    - transition or animation:\n *        wait for end event, remove class, then done if\n *        there's no explicit js callback.\n *    - no css transition:\n *        done if there's no explicit js callback.\n * 7. wait for either done or js callback, then call\n *    afterLeave hook.\n *\n * @param {Function} op - remove/hide the element\n * @param {Function} [cb]\n */\n\np$1.leave = function (op, cb) {\n  this.cancelPending();\n  this.callHook('beforeLeave');\n  this.op = op;\n  this.cb = cb;\n  addClass(this.el, this.leaveClass);\n  this.left = false;\n  this.callHookWithCb('leave');\n  if (this.left) {\n    return; // user called done synchronously.\n  }\n  this.cancel = this.hooks && this.hooks.leaveCancelled;\n  // only need to handle leaveDone if\n  // 1. the transition is already done (synchronously called\n  //    by the user, which causes this.op set to null)\n  // 2. there's no explicit js callback\n  if (this.op && !this.pendingJsCb) {\n    // if a CSS transition leaves immediately after enter,\n    // the transitionend event never fires. therefore we\n    // detect such cases and end the leave immediately.\n    if (this.justEntered) {\n      this.leaveDone();\n    } else {\n      pushJob(this.leaveNextTick);\n    }\n  }\n};\n\n/**\n * The \"nextTick\" phase of a leaving transition.\n */\n\np$1.leaveNextTick = function () {\n  var type = this.getCssTransitionType(this.leaveClass);\n  if (type) {\n    var event = type === TYPE_TRANSITION ? transitionEndEvent : animationEndEvent;\n    this.setupCssCb(event, this.leaveDone);\n  } else {\n    this.leaveDone();\n  }\n};\n\n/**\n * The \"cleanup\" phase of a leaving transition.\n */\n\np$1.leaveDone = function () {\n  this.left = true;\n  this.cancel = this.pendingJsCb = null;\n  this.op();\n  removeClass(this.el, this.leaveClass);\n  this.callHook('afterLeave');\n  if (this.cb) this.cb();\n  this.op = null;\n};\n\n/**\n * Cancel any pending callbacks from a previously running\n * but not finished transition.\n */\n\np$1.cancelPending = function () {\n  this.op = this.cb = null;\n  var hasPending = false;\n  if (this.pendingCssCb) {\n    hasPending = true;\n    off(this.el, this.pendingCssEvent, this.pendingCssCb);\n    this.pendingCssEvent = this.pendingCssCb = null;\n  }\n  if (this.pendingJsCb) {\n    hasPending = true;\n    this.pendingJsCb.cancel();\n    this.pendingJsCb = null;\n  }\n  if (hasPending) {\n    removeClass(this.el, this.enterClass);\n    removeClass(this.el, this.leaveClass);\n  }\n  if (this.cancel) {\n    this.cancel.call(this.vm, this.el);\n    this.cancel = null;\n  }\n};\n\n/**\n * Call a user-provided synchronous hook function.\n *\n * @param {String} type\n */\n\np$1.callHook = function (type) {\n  if (this.hooks && this.hooks[type]) {\n    this.hooks[type].call(this.vm, this.el);\n  }\n};\n\n/**\n * Call a user-provided, potentially-async hook function.\n * We check for the length of arguments to see if the hook\n * expects a `done` callback. If true, the transition's end\n * will be determined by when the user calls that callback;\n * otherwise, the end is determined by the CSS transition or\n * animation.\n *\n * @param {String} type\n */\n\np$1.callHookWithCb = function (type) {\n  var hook = this.hooks && this.hooks[type];\n  if (hook) {\n    if (hook.length > 1) {\n      this.pendingJsCb = cancellable(this[type + 'Done']);\n    }\n    hook.call(this.vm, this.el, this.pendingJsCb);\n  }\n};\n\n/**\n * Get an element's transition type based on the\n * calculated styles.\n *\n * @param {String} className\n * @return {Number}\n */\n\np$1.getCssTransitionType = function (className) {\n  /* istanbul ignore if */\n  if (!transitionEndEvent ||\n  // skip CSS transitions if page is not visible -\n  // this solves the issue of transitionend events not\n  // firing until the page is visible again.\n  // pageVisibility API is supported in IE10+, same as\n  // CSS transitions.\n  document.hidden ||\n  // explicit js-only transition\n  this.hooks && this.hooks.css === false ||\n  // element is hidden\n  isHidden(this.el)) {\n    return;\n  }\n  var type = this.type || this.typeCache[className];\n  if (type) return type;\n  var inlineStyles = this.el.style;\n  var computedStyles = window.getComputedStyle(this.el);\n  var transDuration = inlineStyles[transDurationProp] || computedStyles[transDurationProp];\n  if (transDuration && transDuration !== '0s') {\n    type = TYPE_TRANSITION;\n  } else {\n    var animDuration = inlineStyles[animDurationProp] || computedStyles[animDurationProp];\n    if (animDuration && animDuration !== '0s') {\n      type = TYPE_ANIMATION;\n    }\n  }\n  if (type) {\n    this.typeCache[className] = type;\n  }\n  return type;\n};\n\n/**\n * Setup a CSS transitionend/animationend callback.\n *\n * @param {String} event\n * @param {Function} cb\n */\n\np$1.setupCssCb = function (event, cb) {\n  this.pendingCssEvent = event;\n  var self = this;\n  var el = this.el;\n  var onEnd = this.pendingCssCb = function (e) {\n    if (e.target === el) {\n      off(el, event, onEnd);\n      self.pendingCssEvent = self.pendingCssCb = null;\n      if (!self.pendingJsCb && cb) {\n        cb();\n      }\n    }\n  };\n  on$1(el, event, onEnd);\n};\n\n/**\n * Check if an element is hidden - in that case we can just\n * skip the transition alltogether.\n *\n * @param {Element} el\n * @return {Boolean}\n */\n\nfunction isHidden(el) {\n  return !(el.offsetWidth || el.offsetHeight || el.getClientRects().length);\n}\n\nvar transition = {\n\n  priority: TRANSITION,\n\n  update: function update(id, oldId) {\n    var el = this.el;\n    // resolve on owner vm\n    var hooks = resolveAsset(this.vm.$options, 'transitions', id);\n    id = id || 'v';\n    // apply on closest vm\n    el.__v_trans = new Transition(el, id, hooks, this.el.__vue__ || this.vm);\n    if (oldId) {\n      removeClass(el, oldId + '-transition');\n    }\n    addClass(el, id + '-transition');\n  }\n};\n\nvar bindingModes = config._propBindingModes;\n\nvar propDef = {\n\n  bind: function bind() {\n\n    var child = this.vm;\n    var parent = child._context;\n    // passed in from compiler directly\n    var prop = this.descriptor.prop;\n    var childKey = prop.path;\n    var parentKey = prop.parentPath;\n    var twoWay = prop.mode === bindingModes.TWO_WAY;\n\n    var parentWatcher = this.parentWatcher = new Watcher(parent, parentKey, function (val) {\n      val = coerceProp(prop, val);\n      if (assertProp(prop, val)) {\n        child[childKey] = val;\n      }\n    }, {\n      twoWay: twoWay,\n      filters: prop.filters,\n      // important: props need to be observed on the\n      // v-for scope if present\n      scope: this._scope\n    });\n\n    // set the child initial value.\n    initProp(child, prop, parentWatcher.value);\n\n    // setup two-way binding\n    if (twoWay) {\n      // important: defer the child watcher creation until\n      // the created hook (after data observation)\n      var self = this;\n      child.$once('pre-hook:created', function () {\n        self.childWatcher = new Watcher(child, childKey, function (val) {\n          parentWatcher.set(val);\n        }, {\n          // ensure sync upward before parent sync down.\n          // this is necessary in cases e.g. the child\n          // mutates a prop array, then replaces it. (#1683)\n          sync: true\n        });\n      });\n    }\n  },\n\n  unbind: function unbind() {\n    this.parentWatcher.teardown();\n    if (this.childWatcher) {\n      this.childWatcher.teardown();\n    }\n  }\n};\n\nvar component = {\n\n  priority: COMPONENT,\n\n  params: ['keep-alive', 'transition-mode', 'inline-template'],\n\n  /**\n   * Setup. Two possible usages:\n   *\n   * - static:\n   *   <comp> or <div v-component=\"comp\">\n   *\n   * - dynamic:\n   *   <component :is=\"view\">\n   */\n\n  bind: function bind() {\n    if (!this.el.__vue__) {\n      // keep-alive cache\n      this.keepAlive = this.params.keepAlive;\n      if (this.keepAlive) {\n        this.cache = {};\n      }\n      // check inline-template\n      if (this.params.inlineTemplate) {\n        // extract inline template as a DocumentFragment\n        this.inlineTemplate = extractContent(this.el, true);\n      }\n      // component resolution related state\n      this.pendingComponentCb = this.Component = null;\n      // transition related state\n      this.pendingRemovals = 0;\n      this.pendingRemovalCb = null;\n      // create a ref anchor\n      this.anchor = createAnchor('v-component');\n      replace(this.el, this.anchor);\n      // remove is attribute.\n      // this is removed during compilation, but because compilation is\n      // cached, when the component is used elsewhere this attribute\n      // will remain at link time.\n      this.el.removeAttribute('is');\n      // remove ref, same as above\n      if (this.descriptor.ref) {\n        this.el.removeAttribute('v-ref:' + hyphenate(this.descriptor.ref));\n      }\n      // if static, build right now.\n      if (this.literal) {\n        this.setComponent(this.expression);\n      }\n    } else {\n      process.env.NODE_ENV !== 'production' && warn('cannot mount component \"' + this.expression + '\" ' + 'on already mounted element: ' + this.el);\n    }\n  },\n\n  /**\n   * Public update, called by the watcher in the dynamic\n   * literal scenario, e.g. <component :is=\"view\">\n   */\n\n  update: function update(value) {\n    if (!this.literal) {\n      this.setComponent(value);\n    }\n  },\n\n  /**\n   * Switch dynamic components. May resolve the component\n   * asynchronously, and perform transition based on\n   * specified transition mode. Accepts a few additional\n   * arguments specifically for vue-router.\n   *\n   * The callback is called when the full transition is\n   * finished.\n   *\n   * @param {String} value\n   * @param {Function} [cb]\n   */\n\n  setComponent: function setComponent(value, cb) {\n    this.invalidatePending();\n    if (!value) {\n      // just remove current\n      this.unbuild(true);\n      this.remove(this.childVM, cb);\n      this.childVM = null;\n    } else {\n      var self = this;\n      this.resolveComponent(value, function () {\n        self.mountComponent(cb);\n      });\n    }\n  },\n\n  /**\n   * Resolve the component constructor to use when creating\n   * the child vm.\n   */\n\n  resolveComponent: function resolveComponent(id, cb) {\n    var self = this;\n    this.pendingComponentCb = cancellable(function (Component) {\n      self.ComponentName = Component.options.name || id;\n      self.Component = Component;\n      cb();\n    });\n    this.vm._resolveComponent(id, this.pendingComponentCb);\n  },\n\n  /**\n   * Create a new instance using the current constructor and\n   * replace the existing instance. This method doesn't care\n   * whether the new component and the old one are actually\n   * the same.\n   *\n   * @param {Function} [cb]\n   */\n\n  mountComponent: function mountComponent(cb) {\n    // actual mount\n    this.unbuild(true);\n    var self = this;\n    var activateHook = this.Component.options.activate;\n    var cached = this.getCached();\n    var newComponent = this.build();\n    if (activateHook && !cached) {\n      this.waitingFor = newComponent;\n      activateHook.call(newComponent, function () {\n        if (self.waitingFor !== newComponent) {\n          return;\n        }\n        self.waitingFor = null;\n        self.transition(newComponent, cb);\n      });\n    } else {\n      // update ref for kept-alive component\n      if (cached) {\n        newComponent._updateRef();\n      }\n      this.transition(newComponent, cb);\n    }\n  },\n\n  /**\n   * When the component changes or unbinds before an async\n   * constructor is resolved, we need to invalidate its\n   * pending callback.\n   */\n\n  invalidatePending: function invalidatePending() {\n    if (this.pendingComponentCb) {\n      this.pendingComponentCb.cancel();\n      this.pendingComponentCb = null;\n    }\n  },\n\n  /**\n   * Instantiate/insert a new child vm.\n   * If keep alive and has cached instance, insert that\n   * instance; otherwise build a new one and cache it.\n   *\n   * @param {Object} [extraOptions]\n   * @return {Vue} - the created instance\n   */\n\n  build: function build(extraOptions) {\n    var cached = this.getCached();\n    if (cached) {\n      return cached;\n    }\n    if (this.Component) {\n      // default options\n      var options = {\n        name: this.ComponentName,\n        el: cloneNode(this.el),\n        template: this.inlineTemplate,\n        // make sure to add the child with correct parent\n        // if this is a transcluded component, its parent\n        // should be the transclusion host.\n        parent: this._host || this.vm,\n        // if no inline-template, then the compiled\n        // linker can be cached for better performance.\n        _linkerCachable: !this.inlineTemplate,\n        _ref: this.descriptor.ref,\n        _asComponent: true,\n        _isRouterView: this._isRouterView,\n        // if this is a transcluded component, context\n        // will be the common parent vm of this instance\n        // and its host.\n        _context: this.vm,\n        // if this is inside an inline v-for, the scope\n        // will be the intermediate scope created for this\n        // repeat fragment. this is used for linking props\n        // and container directives.\n        _scope: this._scope,\n        // pass in the owner fragment of this component.\n        // this is necessary so that the fragment can keep\n        // track of its contained components in order to\n        // call attach/detach hooks for them.\n        _frag: this._frag\n      };\n      // extra options\n      // in 1.0.0 this is used by vue-router only\n      /* istanbul ignore if */\n      if (extraOptions) {\n        extend(options, extraOptions);\n      }\n      var child = new this.Component(options);\n      if (this.keepAlive) {\n        this.cache[this.Component.cid] = child;\n      }\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && this.el.hasAttribute('transition') && child._isFragment) {\n        warn('Transitions will not work on a fragment instance. ' + 'Template: ' + child.$options.template);\n      }\n      return child;\n    }\n  },\n\n  /**\n   * Try to get a cached instance of the current component.\n   *\n   * @return {Vue|undefined}\n   */\n\n  getCached: function getCached() {\n    return this.keepAlive && this.cache[this.Component.cid];\n  },\n\n  /**\n   * Teardown the current child, but defers cleanup so\n   * that we can separate the destroy and removal steps.\n   *\n   * @param {Boolean} defer\n   */\n\n  unbuild: function unbuild(defer) {\n    if (this.waitingFor) {\n      this.waitingFor.$destroy();\n      this.waitingFor = null;\n    }\n    var child = this.childVM;\n    if (!child || this.keepAlive) {\n      if (child) {\n        // remove ref\n        child._updateRef(true);\n      }\n      return;\n    }\n    // the sole purpose of `deferCleanup` is so that we can\n    // \"deactivate\" the vm right now and perform DOM removal\n    // later.\n    child.$destroy(false, defer);\n  },\n\n  /**\n   * Remove current destroyed child and manually do\n   * the cleanup after removal.\n   *\n   * @param {Function} cb\n   */\n\n  remove: function remove(child, cb) {\n    var keepAlive = this.keepAlive;\n    if (child) {\n      // we may have a component switch when a previous\n      // component is still being transitioned out.\n      // we want to trigger only one lastest insertion cb\n      // when the existing transition finishes. (#1119)\n      this.pendingRemovals++;\n      this.pendingRemovalCb = cb;\n      var self = this;\n      child.$remove(function () {\n        self.pendingRemovals--;\n        if (!keepAlive) child._cleanup();\n        if (!self.pendingRemovals && self.pendingRemovalCb) {\n          self.pendingRemovalCb();\n          self.pendingRemovalCb = null;\n        }\n      });\n    } else if (cb) {\n      cb();\n    }\n  },\n\n  /**\n   * Actually swap the components, depending on the\n   * transition mode. Defaults to simultaneous.\n   *\n   * @param {Vue} target\n   * @param {Function} [cb]\n   */\n\n  transition: function transition(target, cb) {\n    var self = this;\n    var current = this.childVM;\n    // for devtool inspection\n    if (process.env.NODE_ENV !== 'production') {\n      if (current) current._inactive = true;\n      target._inactive = false;\n    }\n    this.childVM = target;\n    switch (self.params.transitionMode) {\n      case 'in-out':\n        target.$before(self.anchor, function () {\n          self.remove(current, cb);\n        });\n        break;\n      case 'out-in':\n        self.remove(current, function () {\n          target.$before(self.anchor, cb);\n        });\n        break;\n      default:\n        self.remove(current);\n        target.$before(self.anchor, cb);\n    }\n  },\n\n  /**\n   * Unbind.\n   */\n\n  unbind: function unbind() {\n    this.invalidatePending();\n    // Do not defer cleanup when unbinding\n    this.unbuild();\n    // destroy all keep-alive cached instances\n    if (this.cache) {\n      for (var key in this.cache) {\n        this.cache[key].$destroy();\n      }\n      this.cache = null;\n    }\n  }\n};\n\nvar vClass = {\n\n  deep: true,\n\n  update: function update(value) {\n    if (value && typeof value === 'string') {\n      this.handleObject(stringToObject(value));\n    } else if (isPlainObject(value)) {\n      this.handleObject(value);\n    } else if (isArray(value)) {\n      this.handleArray(value);\n    } else {\n      this.cleanup();\n    }\n  },\n\n  handleObject: function handleObject(value) {\n    this.cleanup(value);\n    var keys = this.prevKeys = Object.keys(value);\n    for (var i = 0, l = keys.length; i < l; i++) {\n      var key = keys[i];\n      if (value[key]) {\n        addClass(this.el, key);\n      } else {\n        removeClass(this.el, key);\n      }\n    }\n  },\n\n  handleArray: function handleArray(value) {\n    this.cleanup(value);\n    for (var i = 0, l = value.length; i < l; i++) {\n      if (value[i]) {\n        addClass(this.el, value[i]);\n      }\n    }\n    this.prevKeys = value.slice();\n  },\n\n  cleanup: function cleanup(value) {\n    if (this.prevKeys) {\n      var i = this.prevKeys.length;\n      while (i--) {\n        var key = this.prevKeys[i];\n        if (key && (!value || !contains$1(value, key))) {\n          removeClass(this.el, key);\n        }\n      }\n    }\n  }\n};\n\nfunction stringToObject(value) {\n  var res = {};\n  var keys = value.trim().split(/\\s+/);\n  var i = keys.length;\n  while (i--) {\n    res[keys[i]] = true;\n  }\n  return res;\n}\n\nfunction contains$1(value, key) {\n  return isArray(value) ? value.indexOf(key) > -1 : hasOwn(value, key);\n}\n\nvar internalDirectives = {\n  style: style,\n  'class': vClass,\n  component: component,\n  prop: propDef,\n  transition: transition\n};\n\nvar propBindingModes = config._propBindingModes;\nvar empty = {};\n\n// regexes\nvar identRE$1 = /^[$_a-zA-Z]+[\\w$]*$/;\nvar settablePathRE = /^[A-Za-z_$][\\w$]*(\\.[A-Za-z_$][\\w$]*|\\[[^\\[\\]]+\\])*$/;\n\n/**\n * Compile props on a root element and return\n * a props link function.\n *\n * @param {Element|DocumentFragment} el\n * @param {Array} propOptions\n * @return {Function} propsLinkFn\n */\n\nfunction compileProps(el, propOptions) {\n  var props = [];\n  var names = Object.keys(propOptions);\n  var i = names.length;\n  var options, name, attr, value, path, parsed, prop;\n  while (i--) {\n    name = names[i];\n    options = propOptions[name] || empty;\n\n    if (process.env.NODE_ENV !== 'production' && name === '$data') {\n      warn('Do not use $data as prop.');\n      continue;\n    }\n\n    // props could contain dashes, which will be\n    // interpreted as minus calculations by the parser\n    // so we need to camelize the path here\n    path = camelize(name);\n    if (!identRE$1.test(path)) {\n      process.env.NODE_ENV !== 'production' && warn('Invalid prop key: \"' + name + '\". Prop keys ' + 'must be valid identifiers.');\n      continue;\n    }\n\n    prop = {\n      name: name,\n      path: path,\n      options: options,\n      mode: propBindingModes.ONE_WAY,\n      raw: null\n    };\n\n    attr = hyphenate(name);\n    // first check dynamic version\n    if ((value = getBindAttr(el, attr)) === null) {\n      if ((value = getBindAttr(el, attr + '.sync')) !== null) {\n        prop.mode = propBindingModes.TWO_WAY;\n      } else if ((value = getBindAttr(el, attr + '.once')) !== null) {\n        prop.mode = propBindingModes.ONE_TIME;\n      }\n    }\n    if (value !== null) {\n      // has dynamic binding!\n      prop.raw = value;\n      parsed = parseDirective(value);\n      value = parsed.expression;\n      prop.filters = parsed.filters;\n      // check binding type\n      if (isLiteral(value) && !parsed.filters) {\n        // for expressions containing literal numbers and\n        // booleans, there's no need to setup a prop binding,\n        // so we can optimize them as a one-time set.\n        prop.optimizedLiteral = true;\n      } else {\n        prop.dynamic = true;\n        // check non-settable path for two-way bindings\n        if (process.env.NODE_ENV !== 'production' && prop.mode === propBindingModes.TWO_WAY && !settablePathRE.test(value)) {\n          prop.mode = propBindingModes.ONE_WAY;\n          warn('Cannot bind two-way prop with non-settable ' + 'parent path: ' + value);\n        }\n      }\n      prop.parentPath = value;\n\n      // warn required two-way\n      if (process.env.NODE_ENV !== 'production' && options.twoWay && prop.mode !== propBindingModes.TWO_WAY) {\n        warn('Prop \"' + name + '\" expects a two-way binding type.');\n      }\n    } else if ((value = getAttr(el, attr)) !== null) {\n      // has literal binding!\n      prop.raw = value;\n    } else if (options.required) {\n      // warn missing required\n      process.env.NODE_ENV !== 'production' && warn('Missing required prop: ' + name);\n    }\n    // push prop\n    props.push(prop);\n  }\n  return makePropsLinkFn(props);\n}\n\n/**\n * Build a function that applies props to a vm.\n *\n * @param {Array} props\n * @return {Function} propsLinkFn\n */\n\nfunction makePropsLinkFn(props) {\n  return function propsLinkFn(vm, scope) {\n    // store resolved props info\n    vm._props = {};\n    var i = props.length;\n    var prop, path, options, value, raw;\n    while (i--) {\n      prop = props[i];\n      raw = prop.raw;\n      path = prop.path;\n      options = prop.options;\n      vm._props[path] = prop;\n      if (raw === null) {\n        // initialize absent prop\n        initProp(vm, prop, getDefault(vm, options));\n      } else if (prop.dynamic) {\n        // dynamic prop\n        if (vm._context) {\n          if (prop.mode === propBindingModes.ONE_TIME) {\n            // one time binding\n            value = (scope || vm._context).$get(prop.parentPath);\n            initProp(vm, prop, value);\n          } else {\n            // dynamic binding\n            vm._bindDir({\n              name: 'prop',\n              def: propDef,\n              prop: prop\n            }, null, null, scope); // el, host, scope\n          }\n        } else {\n            process.env.NODE_ENV !== 'production' && warn('Cannot bind dynamic prop on a root instance' + ' with no parent: ' + prop.name + '=\"' + raw + '\"');\n          }\n      } else if (prop.optimizedLiteral) {\n        // optimized literal, cast it and just set once\n        var stripped = stripQuotes(raw);\n        value = stripped === raw ? toBoolean(toNumber(raw)) : stripped;\n        initProp(vm, prop, value);\n      } else {\n        // string literal, but we need to cater for\n        // Boolean props with no value\n        value = options.type === Boolean && raw === '' ? true : raw;\n        initProp(vm, prop, value);\n      }\n    }\n  };\n}\n\n/**\n * Get the default value of a prop.\n *\n * @param {Vue} vm\n * @param {Object} options\n * @return {*}\n */\n\nfunction getDefault(vm, options) {\n  // no default, return undefined\n  if (!hasOwn(options, 'default')) {\n    // absent boolean value defaults to false\n    return options.type === Boolean ? false : undefined;\n  }\n  var def = options['default'];\n  // warn against non-factory defaults for Object & Array\n  if (isObject(def)) {\n    process.env.NODE_ENV !== 'production' && warn('Object/Array as default prop values will be shared ' + 'across multiple instances. Use a factory function ' + 'to return the default value instead.');\n  }\n  // call factory function for non-Function types\n  return typeof def === 'function' && options.type !== Function ? def.call(vm) : def;\n}\n\n// special binding prefixes\nvar bindRE = /^v-bind:|^:/;\nvar onRE = /^v-on:|^@/;\nvar argRE = /:(.*)$/;\nvar modifierRE = /\\.[^\\.]+/g;\nvar transitionRE = /^(v-bind:|:)?transition$/;\n\n// terminal directives\nvar terminalDirectives = ['for', 'if'];\n\n// default directive priority\nvar DEFAULT_PRIORITY = 1000;\n\n/**\n * Compile a template and return a reusable composite link\n * function, which recursively contains more link functions\n * inside. This top level compile function would normally\n * be called on instance root nodes, but can also be used\n * for partial compilation if the partial argument is true.\n *\n * The returned composite link function, when called, will\n * return an unlink function that tearsdown all directives\n * created during the linking phase.\n *\n * @param {Element|DocumentFragment} el\n * @param {Object} options\n * @param {Boolean} partial\n * @return {Function}\n */\n\nfunction compile(el, options, partial) {\n  // link function for the node itself.\n  var nodeLinkFn = partial || !options._asComponent ? compileNode(el, options) : null;\n  // link function for the childNodes\n  var childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && el.tagName !== 'SCRIPT' && el.hasChildNodes() ? compileNodeList(el.childNodes, options) : null;\n\n  /**\n   * A composite linker function to be called on a already\n   * compiled piece of DOM, which instantiates all directive\n   * instances.\n   *\n   * @param {Vue} vm\n   * @param {Element|DocumentFragment} el\n   * @param {Vue} [host] - host vm of transcluded content\n   * @param {Object} [scope] - v-for scope\n   * @param {Fragment} [frag] - link context fragment\n   * @return {Function|undefined}\n   */\n\n  return function compositeLinkFn(vm, el, host, scope, frag) {\n    // cache childNodes before linking parent, fix #657\n    var childNodes = toArray(el.childNodes);\n    // link\n    var dirs = linkAndCapture(function compositeLinkCapturer() {\n      if (nodeLinkFn) nodeLinkFn(vm, el, host, scope, frag);\n      if (childLinkFn) childLinkFn(vm, childNodes, host, scope, frag);\n    }, vm);\n    return makeUnlinkFn(vm, dirs);\n  };\n}\n\n/**\n * Apply a linker to a vm/element pair and capture the\n * directives created during the process.\n *\n * @param {Function} linker\n * @param {Vue} vm\n */\n\nfunction linkAndCapture(linker, vm) {\n  var originalDirCount = vm._directives.length;\n  linker();\n  var dirs = vm._directives.slice(originalDirCount);\n  dirs.sort(directiveComparator);\n  for (var i = 0, l = dirs.length; i < l; i++) {\n    dirs[i]._bind();\n  }\n  return dirs;\n}\n\n/**\n * Directive priority sort comparator\n *\n * @param {Object} a\n * @param {Object} b\n */\n\nfunction directiveComparator(a, b) {\n  a = a.descriptor.def.priority || DEFAULT_PRIORITY;\n  b = b.descriptor.def.priority || DEFAULT_PRIORITY;\n  return a > b ? -1 : a === b ? 0 : 1;\n}\n\n/**\n * Linker functions return an unlink function that\n * tearsdown all directives instances generated during\n * the process.\n *\n * We create unlink functions with only the necessary\n * information to avoid retaining additional closures.\n *\n * @param {Vue} vm\n * @param {Array} dirs\n * @param {Vue} [context]\n * @param {Array} [contextDirs]\n * @return {Function}\n */\n\nfunction makeUnlinkFn(vm, dirs, context, contextDirs) {\n  function unlink(destroying) {\n    teardownDirs(vm, dirs, destroying);\n    if (context && contextDirs) {\n      teardownDirs(context, contextDirs);\n    }\n  }\n  // expose linked directives\n  unlink.dirs = dirs;\n  return unlink;\n}\n\n/**\n * Teardown partial linked directives.\n *\n * @param {Vue} vm\n * @param {Array} dirs\n * @param {Boolean} destroying\n */\n\nfunction teardownDirs(vm, dirs, destroying) {\n  var i = dirs.length;\n  while (i--) {\n    dirs[i]._teardown();\n    if (!destroying) {\n      vm._directives.$remove(dirs[i]);\n    }\n  }\n}\n\n/**\n * Compile link props on an instance.\n *\n * @param {Vue} vm\n * @param {Element} el\n * @param {Object} props\n * @param {Object} [scope]\n * @return {Function}\n */\n\nfunction compileAndLinkProps(vm, el, props, scope) {\n  var propsLinkFn = compileProps(el, props);\n  var propDirs = linkAndCapture(function () {\n    propsLinkFn(vm, scope);\n  }, vm);\n  return makeUnlinkFn(vm, propDirs);\n}\n\n/**\n * Compile the root element of an instance.\n *\n * 1. attrs on context container (context scope)\n * 2. attrs on the component template root node, if\n *    replace:true (child scope)\n *\n * If this is a fragment instance, we only need to compile 1.\n *\n * @param {Vue} vm\n * @param {Element} el\n * @param {Object} options\n * @param {Object} contextOptions\n * @return {Function}\n */\n\nfunction compileRoot(el, options, contextOptions) {\n  var containerAttrs = options._containerAttrs;\n  var replacerAttrs = options._replacerAttrs;\n  var contextLinkFn, replacerLinkFn;\n\n  // only need to compile other attributes for\n  // non-fragment instances\n  if (el.nodeType !== 11) {\n    // for components, container and replacer need to be\n    // compiled separately and linked in different scopes.\n    if (options._asComponent) {\n      // 2. container attributes\n      if (containerAttrs && contextOptions) {\n        contextLinkFn = compileDirectives(containerAttrs, contextOptions);\n      }\n      if (replacerAttrs) {\n        // 3. replacer attributes\n        replacerLinkFn = compileDirectives(replacerAttrs, options);\n      }\n    } else {\n      // non-component, just compile as a normal element.\n      replacerLinkFn = compileDirectives(el.attributes, options);\n    }\n  } else if (process.env.NODE_ENV !== 'production' && containerAttrs) {\n    // warn container directives for fragment instances\n    var names = containerAttrs.filter(function (attr) {\n      // allow vue-loader/vueify scoped css attributes\n      return attr.name.indexOf('_v-') < 0 &&\n      // allow event listeners\n      !onRE.test(attr.name) &&\n      // allow slots\n      attr.name !== 'slot';\n    }).map(function (attr) {\n      return '\"' + attr.name + '\"';\n    });\n    if (names.length) {\n      var plural = names.length > 1;\n      warn('Attribute' + (plural ? 's ' : ' ') + names.join(', ') + (plural ? ' are' : ' is') + ' ignored on component ' + '<' + options.el.tagName.toLowerCase() + '> because ' + 'the component is a fragment instance: ' + 'http://vuejs.org/guide/components.html#Fragment_Instance');\n    }\n  }\n\n  options._containerAttrs = options._replacerAttrs = null;\n  return function rootLinkFn(vm, el, scope) {\n    // link context scope dirs\n    var context = vm._context;\n    var contextDirs;\n    if (context && contextLinkFn) {\n      contextDirs = linkAndCapture(function () {\n        contextLinkFn(context, el, null, scope);\n      }, context);\n    }\n\n    // link self\n    var selfDirs = linkAndCapture(function () {\n      if (replacerLinkFn) replacerLinkFn(vm, el);\n    }, vm);\n\n    // return the unlink function that tearsdown context\n    // container directives.\n    return makeUnlinkFn(vm, selfDirs, context, contextDirs);\n  };\n}\n\n/**\n * Compile a node and return a nodeLinkFn based on the\n * node type.\n *\n * @param {Node} node\n * @param {Object} options\n * @return {Function|null}\n */\n\nfunction compileNode(node, options) {\n  var type = node.nodeType;\n  if (type === 1 && node.tagName !== 'SCRIPT') {\n    return compileElement(node, options);\n  } else if (type === 3 && node.data.trim()) {\n    return compileTextNode(node, options);\n  } else {\n    return null;\n  }\n}\n\n/**\n * Compile an element and return a nodeLinkFn.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Function|null}\n */\n\nfunction compileElement(el, options) {\n  // preprocess textareas.\n  // textarea treats its text content as the initial value.\n  // just bind it as an attr directive for value.\n  if (el.tagName === 'TEXTAREA') {\n    var tokens = parseText(el.value);\n    if (tokens) {\n      el.setAttribute(':value', tokensToExp(tokens));\n      el.value = '';\n    }\n  }\n  var linkFn;\n  var hasAttrs = el.hasAttributes();\n  // check terminal directives (for & if)\n  if (hasAttrs) {\n    linkFn = checkTerminalDirectives(el, options);\n  }\n  // check element directives\n  if (!linkFn) {\n    linkFn = checkElementDirectives(el, options);\n  }\n  // check component\n  if (!linkFn) {\n    linkFn = checkComponent(el, options);\n  }\n  // normal directives\n  if (!linkFn && hasAttrs) {\n    linkFn = compileDirectives(el.attributes, options);\n  }\n  return linkFn;\n}\n\n/**\n * Compile a textNode and return a nodeLinkFn.\n *\n * @param {TextNode} node\n * @param {Object} options\n * @return {Function|null} textNodeLinkFn\n */\n\nfunction compileTextNode(node, options) {\n  // skip marked text nodes\n  if (node._skip) {\n    return removeText;\n  }\n\n  var tokens = parseText(node.wholeText);\n  if (!tokens) {\n    return null;\n  }\n\n  // mark adjacent text nodes as skipped,\n  // because we are using node.wholeText to compile\n  // all adjacent text nodes together. This fixes\n  // issues in IE where sometimes it splits up a single\n  // text node into multiple ones.\n  var next = node.nextSibling;\n  while (next && next.nodeType === 3) {\n    next._skip = true;\n    next = next.nextSibling;\n  }\n\n  var frag = document.createDocumentFragment();\n  var el, token;\n  for (var i = 0, l = tokens.length; i < l; i++) {\n    token = tokens[i];\n    el = token.tag ? processTextToken(token, options) : document.createTextNode(token.value);\n    frag.appendChild(el);\n  }\n  return makeTextNodeLinkFn(tokens, frag, options);\n}\n\n/**\n * Linker for an skipped text node.\n *\n * @param {Vue} vm\n * @param {Text} node\n */\n\nfunction removeText(vm, node) {\n  remove(node);\n}\n\n/**\n * Process a single text token.\n *\n * @param {Object} token\n * @param {Object} options\n * @return {Node}\n */\n\nfunction processTextToken(token, options) {\n  var el;\n  if (token.oneTime) {\n    el = document.createTextNode(token.value);\n  } else {\n    if (token.html) {\n      el = document.createComment('v-html');\n      setTokenType('html');\n    } else {\n      // IE will clean up empty textNodes during\n      // frag.cloneNode(true), so we have to give it\n      // something here...\n      el = document.createTextNode(' ');\n      setTokenType('text');\n    }\n  }\n  function setTokenType(type) {\n    if (token.descriptor) return;\n    var parsed = parseDirective(token.value);\n    token.descriptor = {\n      name: type,\n      def: publicDirectives[type],\n      expression: parsed.expression,\n      filters: parsed.filters\n    };\n  }\n  return el;\n}\n\n/**\n * Build a function that processes a textNode.\n *\n * @param {Array<Object>} tokens\n * @param {DocumentFragment} frag\n */\n\nfunction makeTextNodeLinkFn(tokens, frag) {\n  return function textNodeLinkFn(vm, el, host, scope) {\n    var fragClone = frag.cloneNode(true);\n    var childNodes = toArray(fragClone.childNodes);\n    var token, value, node;\n    for (var i = 0, l = tokens.length; i < l; i++) {\n      token = tokens[i];\n      value = token.value;\n      if (token.tag) {\n        node = childNodes[i];\n        if (token.oneTime) {\n          value = (scope || vm).$eval(value);\n          if (token.html) {\n            replace(node, parseTemplate(value, true));\n          } else {\n            node.data = value;\n          }\n        } else {\n          vm._bindDir(token.descriptor, node, host, scope);\n        }\n      }\n    }\n    replace(el, fragClone);\n  };\n}\n\n/**\n * Compile a node list and return a childLinkFn.\n *\n * @param {NodeList} nodeList\n * @param {Object} options\n * @return {Function|undefined}\n */\n\nfunction compileNodeList(nodeList, options) {\n  var linkFns = [];\n  var nodeLinkFn, childLinkFn, node;\n  for (var i = 0, l = nodeList.length; i < l; i++) {\n    node = nodeList[i];\n    nodeLinkFn = compileNode(node, options);\n    childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && node.tagName !== 'SCRIPT' && node.hasChildNodes() ? compileNodeList(node.childNodes, options) : null;\n    linkFns.push(nodeLinkFn, childLinkFn);\n  }\n  return linkFns.length ? makeChildLinkFn(linkFns) : null;\n}\n\n/**\n * Make a child link function for a node's childNodes.\n *\n * @param {Array<Function>} linkFns\n * @return {Function} childLinkFn\n */\n\nfunction makeChildLinkFn(linkFns) {\n  return function childLinkFn(vm, nodes, host, scope, frag) {\n    var node, nodeLinkFn, childrenLinkFn;\n    for (var i = 0, n = 0, l = linkFns.length; i < l; n++) {\n      node = nodes[n];\n      nodeLinkFn = linkFns[i++];\n      childrenLinkFn = linkFns[i++];\n      // cache childNodes before linking parent, fix #657\n      var childNodes = toArray(node.childNodes);\n      if (nodeLinkFn) {\n        nodeLinkFn(vm, node, host, scope, frag);\n      }\n      if (childrenLinkFn) {\n        childrenLinkFn(vm, childNodes, host, scope, frag);\n      }\n    }\n  };\n}\n\n/**\n * Check for element directives (custom elements that should\n * be resovled as terminal directives).\n *\n * @param {Element} el\n * @param {Object} options\n */\n\nfunction checkElementDirectives(el, options) {\n  var tag = el.tagName.toLowerCase();\n  if (commonTagRE.test(tag)) return;\n  // special case: give named slot a higher priority\n  // than unnamed slots\n  if (tag === 'slot' && hasBindAttr(el, 'name')) {\n    tag = '_namedSlot';\n  }\n  var def = resolveAsset(options, 'elementDirectives', tag);\n  if (def) {\n    return makeTerminalNodeLinkFn(el, tag, '', options, def);\n  }\n}\n\n/**\n * Check if an element is a component. If yes, return\n * a component link function.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Function|undefined}\n */\n\nfunction checkComponent(el, options) {\n  var component = checkComponentAttr(el, options);\n  if (component) {\n    var ref = findRef(el);\n    var descriptor = {\n      name: 'component',\n      ref: ref,\n      expression: component.id,\n      def: internalDirectives.component,\n      modifiers: {\n        literal: !component.dynamic\n      }\n    };\n    var componentLinkFn = function componentLinkFn(vm, el, host, scope, frag) {\n      if (ref) {\n        defineReactive((scope || vm).$refs, ref, null);\n      }\n      vm._bindDir(descriptor, el, host, scope, frag);\n    };\n    componentLinkFn.terminal = true;\n    return componentLinkFn;\n  }\n}\n\n/**\n * Check an element for terminal directives in fixed order.\n * If it finds one, return a terminal link function.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Function} terminalLinkFn\n */\n\nfunction checkTerminalDirectives(el, options) {\n  // skip v-pre\n  if (getAttr(el, 'v-pre') !== null) {\n    return skip;\n  }\n  // skip v-else block, but only if following v-if\n  if (el.hasAttribute('v-else')) {\n    var prev = el.previousElementSibling;\n    if (prev && prev.hasAttribute('v-if')) {\n      return skip;\n    }\n  }\n  var value, dirName;\n  for (var i = 0, l = terminalDirectives.length; i < l; i++) {\n    dirName = terminalDirectives[i];\n    value = el.getAttribute('v-' + dirName);\n    if (value != null) {\n      return makeTerminalNodeLinkFn(el, dirName, value, options);\n    }\n  }\n}\n\nfunction skip() {}\nskip.terminal = true;\n\n/**\n * Build a node link function for a terminal directive.\n * A terminal link function terminates the current\n * compilation recursion and handles compilation of the\n * subtree in the directive.\n *\n * @param {Element} el\n * @param {String} dirName\n * @param {String} value\n * @param {Object} options\n * @param {Object} [def]\n * @return {Function} terminalLinkFn\n */\n\nfunction makeTerminalNodeLinkFn(el, dirName, value, options, def) {\n  var parsed = parseDirective(value);\n  var descriptor = {\n    name: dirName,\n    expression: parsed.expression,\n    filters: parsed.filters,\n    raw: value,\n    // either an element directive, or if/for\n    def: def || publicDirectives[dirName]\n  };\n  // check ref for v-for and router-view\n  if (dirName === 'for' || dirName === 'router-view') {\n    descriptor.ref = findRef(el);\n  }\n  var fn = function terminalNodeLinkFn(vm, el, host, scope, frag) {\n    if (descriptor.ref) {\n      defineReactive((scope || vm).$refs, descriptor.ref, null);\n    }\n    vm._bindDir(descriptor, el, host, scope, frag);\n  };\n  fn.terminal = true;\n  return fn;\n}\n\n/**\n * Compile the directives on an element and return a linker.\n *\n * @param {Array|NamedNodeMap} attrs\n * @param {Object} options\n * @return {Function}\n */\n\nfunction compileDirectives(attrs, options) {\n  var i = attrs.length;\n  var dirs = [];\n  var attr, name, value, rawName, rawValue, dirName, arg, modifiers, dirDef, tokens;\n  while (i--) {\n    attr = attrs[i];\n    name = rawName = attr.name;\n    value = rawValue = attr.value;\n    tokens = parseText(value);\n    // reset arg\n    arg = null;\n    // check modifiers\n    modifiers = parseModifiers(name);\n    name = name.replace(modifierRE, '');\n\n    // attribute interpolations\n    if (tokens) {\n      value = tokensToExp(tokens);\n      arg = name;\n      pushDir('bind', publicDirectives.bind, tokens);\n      // warn against mixing mustaches with v-bind\n      if (process.env.NODE_ENV !== 'production') {\n        if (name === 'class' && Array.prototype.some.call(attrs, function (attr) {\n          return attr.name === ':class' || attr.name === 'v-bind:class';\n        })) {\n          warn('class=\"' + rawValue + '\": Do not mix mustache interpolation ' + 'and v-bind for \"class\" on the same element. Use one or the other.');\n        }\n      }\n    } else\n\n      // special attribute: transition\n      if (transitionRE.test(name)) {\n        modifiers.literal = !bindRE.test(name);\n        pushDir('transition', internalDirectives.transition);\n      } else\n\n        // event handlers\n        if (onRE.test(name)) {\n          arg = name.replace(onRE, '');\n          pushDir('on', publicDirectives.on);\n        } else\n\n          // attribute bindings\n          if (bindRE.test(name)) {\n            dirName = name.replace(bindRE, '');\n            if (dirName === 'style' || dirName === 'class') {\n              pushDir(dirName, internalDirectives[dirName]);\n            } else {\n              arg = dirName;\n              pushDir('bind', publicDirectives.bind);\n            }\n          } else\n\n            // normal directives\n            if (name.indexOf('v-') === 0) {\n              // check arg\n              arg = (arg = name.match(argRE)) && arg[1];\n              if (arg) {\n                name = name.replace(argRE, '');\n              }\n              // extract directive name\n              dirName = name.slice(2);\n\n              // skip v-else (when used with v-show)\n              if (dirName === 'else') {\n                continue;\n              }\n\n              dirDef = resolveAsset(options, 'directives', dirName);\n\n              if (process.env.NODE_ENV !== 'production') {\n                assertAsset(dirDef, 'directive', dirName);\n              }\n\n              if (dirDef) {\n                pushDir(dirName, dirDef);\n              }\n            }\n  }\n\n  /**\n   * Push a directive.\n   *\n   * @param {String} dirName\n   * @param {Object|Function} def\n   * @param {Array} [interpTokens]\n   */\n\n  function pushDir(dirName, def, interpTokens) {\n    var hasOneTimeToken = interpTokens && hasOneTime(interpTokens);\n    var parsed = !hasOneTimeToken && parseDirective(value);\n    dirs.push({\n      name: dirName,\n      attr: rawName,\n      raw: rawValue,\n      def: def,\n      arg: arg,\n      modifiers: modifiers,\n      // conversion from interpolation strings with one-time token\n      // to expression is differed until directive bind time so that we\n      // have access to the actual vm context for one-time bindings.\n      expression: parsed && parsed.expression,\n      filters: parsed && parsed.filters,\n      interp: interpTokens,\n      hasOneTime: hasOneTimeToken\n    });\n  }\n\n  if (dirs.length) {\n    return makeNodeLinkFn(dirs);\n  }\n}\n\n/**\n * Parse modifiers from directive attribute name.\n *\n * @param {String} name\n * @return {Object}\n */\n\nfunction parseModifiers(name) {\n  var res = Object.create(null);\n  var match = name.match(modifierRE);\n  if (match) {\n    var i = match.length;\n    while (i--) {\n      res[match[i].slice(1)] = true;\n    }\n  }\n  return res;\n}\n\n/**\n * Build a link function for all directives on a single node.\n *\n * @param {Array} directives\n * @return {Function} directivesLinkFn\n */\n\nfunction makeNodeLinkFn(directives) {\n  return function nodeLinkFn(vm, el, host, scope, frag) {\n    // reverse apply because it's sorted low to high\n    var i = directives.length;\n    while (i--) {\n      vm._bindDir(directives[i], el, host, scope, frag);\n    }\n  };\n}\n\n/**\n * Check if an interpolation string contains one-time tokens.\n *\n * @param {Array} tokens\n * @return {Boolean}\n */\n\nfunction hasOneTime(tokens) {\n  var i = tokens.length;\n  while (i--) {\n    if (tokens[i].oneTime) return true;\n  }\n}\n\nvar specialCharRE = /[^\\w\\-:\\.]/;\n\n/**\n * Process an element or a DocumentFragment based on a\n * instance option object. This allows us to transclude\n * a template node/fragment before the instance is created,\n * so the processed fragment can then be cloned and reused\n * in v-for.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Element|DocumentFragment}\n */\n\nfunction transclude(el, options) {\n  // extract container attributes to pass them down\n  // to compiler, because they need to be compiled in\n  // parent scope. we are mutating the options object here\n  // assuming the same object will be used for compile\n  // right after this.\n  if (options) {\n    options._containerAttrs = extractAttrs(el);\n  }\n  // for template tags, what we want is its content as\n  // a documentFragment (for fragment instances)\n  if (isTemplate(el)) {\n    el = parseTemplate(el);\n  }\n  if (options) {\n    if (options._asComponent && !options.template) {\n      options.template = '<slot></slot>';\n    }\n    if (options.template) {\n      options._content = extractContent(el);\n      el = transcludeTemplate(el, options);\n    }\n  }\n  if (el instanceof DocumentFragment) {\n    // anchors for fragment instance\n    // passing in `persist: true` to avoid them being\n    // discarded by IE during template cloning\n    prepend(createAnchor('v-start', true), el);\n    el.appendChild(createAnchor('v-end', true));\n  }\n  return el;\n}\n\n/**\n * Process the template option.\n * If the replace option is true this will swap the $el.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Element|DocumentFragment}\n */\n\nfunction transcludeTemplate(el, options) {\n  var template = options.template;\n  var frag = parseTemplate(template, true);\n  if (frag) {\n    var replacer = frag.firstChild;\n    var tag = replacer.tagName && replacer.tagName.toLowerCase();\n    if (options.replace) {\n      /* istanbul ignore if */\n      if (el === document.body) {\n        process.env.NODE_ENV !== 'production' && warn('You are mounting an instance with a template to ' + '<body>. This will replace <body> entirely. You ' + 'should probably use `replace: false` here.');\n      }\n      // there are many cases where the instance must\n      // become a fragment instance: basically anything that\n      // can create more than 1 root nodes.\n      if (\n      // multi-children template\n      frag.childNodes.length > 1 ||\n      // non-element template\n      replacer.nodeType !== 1 ||\n      // single nested component\n      tag === 'component' || resolveAsset(options, 'components', tag) || hasBindAttr(replacer, 'is') ||\n      // element directive\n      resolveAsset(options, 'elementDirectives', tag) ||\n      // for block\n      replacer.hasAttribute('v-for') ||\n      // if block\n      replacer.hasAttribute('v-if')) {\n        return frag;\n      } else {\n        options._replacerAttrs = extractAttrs(replacer);\n        mergeAttrs(el, replacer);\n        return replacer;\n      }\n    } else {\n      el.appendChild(frag);\n      return el;\n    }\n  } else {\n    process.env.NODE_ENV !== 'production' && warn('Invalid template option: ' + template);\n  }\n}\n\n/**\n * Helper to extract a component container's attributes\n * into a plain object array.\n *\n * @param {Element} el\n * @return {Array}\n */\n\nfunction extractAttrs(el) {\n  if (el.nodeType === 1 && el.hasAttributes()) {\n    return toArray(el.attributes);\n  }\n}\n\n/**\n * Merge the attributes of two elements, and make sure\n * the class names are merged properly.\n *\n * @param {Element} from\n * @param {Element} to\n */\n\nfunction mergeAttrs(from, to) {\n  var attrs = from.attributes;\n  var i = attrs.length;\n  var name, value;\n  while (i--) {\n    name = attrs[i].name;\n    value = attrs[i].value;\n    if (!to.hasAttribute(name) && !specialCharRE.test(name)) {\n      to.setAttribute(name, value);\n    } else if (name === 'class' && !parseText(value)) {\n      value.split(/\\s+/).forEach(function (cls) {\n        addClass(to, cls);\n      });\n    }\n  }\n}\n\nvar compiler = Object.freeze({\n\tcompile: compile,\n\tcompileAndLinkProps: compileAndLinkProps,\n\tcompileRoot: compileRoot,\n\tterminalDirectives: terminalDirectives,\n\ttransclude: transclude\n});\n\nfunction stateMixin (Vue) {\n\n  /**\n   * Accessor for `$data` property, since setting $data\n   * requires observing the new object and updating\n   * proxied properties.\n   */\n\n  Object.defineProperty(Vue.prototype, '$data', {\n    get: function get() {\n      return this._data;\n    },\n    set: function set(newData) {\n      if (newData !== this._data) {\n        this._setData(newData);\n      }\n    }\n  });\n\n  /**\n   * Setup the scope of an instance, which contains:\n   * - observed data\n   * - computed properties\n   * - user methods\n   * - meta properties\n   */\n\n  Vue.prototype._initState = function () {\n    this._initProps();\n    this._initMeta();\n    this._initMethods();\n    this._initData();\n    this._initComputed();\n  };\n\n  /**\n   * Initialize props.\n   */\n\n  Vue.prototype._initProps = function () {\n    var options = this.$options;\n    var el = options.el;\n    var props = options.props;\n    if (props && !el) {\n      process.env.NODE_ENV !== 'production' && warn('Props will not be compiled if no `el` option is ' + 'provided at instantiation.');\n    }\n    // make sure to convert string selectors into element now\n    el = options.el = query(el);\n    this._propsUnlinkFn = el && el.nodeType === 1 && props\n    // props must be linked in proper scope if inside v-for\n    ? compileAndLinkProps(this, el, props, this._scope) : null;\n  };\n\n  /**\n   * Initialize the data.\n   */\n\n  Vue.prototype._initData = function () {\n    var propsData = this._data;\n    var optionsDataFn = this.$options.data;\n    var optionsData = optionsDataFn && optionsDataFn();\n    if (optionsData) {\n      this._data = optionsData;\n      for (var prop in propsData) {\n        if (process.env.NODE_ENV !== 'production' && hasOwn(optionsData, prop)) {\n          warn('Data field \"' + prop + '\" is already defined ' + 'as a prop. Use prop default value instead.');\n        }\n        if (this._props[prop].raw !== null || !hasOwn(optionsData, prop)) {\n          set(optionsData, prop, propsData[prop]);\n        }\n      }\n    }\n    var data = this._data;\n    // proxy data on instance\n    var keys = Object.keys(data);\n    var i, key;\n    i = keys.length;\n    while (i--) {\n      key = keys[i];\n      this._proxy(key);\n    }\n    // observe data\n    observe(data, this);\n  };\n\n  /**\n   * Swap the instance's $data. Called in $data's setter.\n   *\n   * @param {Object} newData\n   */\n\n  Vue.prototype._setData = function (newData) {\n    newData = newData || {};\n    var oldData = this._data;\n    this._data = newData;\n    var keys, key, i;\n    // unproxy keys not present in new data\n    keys = Object.keys(oldData);\n    i = keys.length;\n    while (i--) {\n      key = keys[i];\n      if (!(key in newData)) {\n        this._unproxy(key);\n      }\n    }\n    // proxy keys not already proxied,\n    // and trigger change for changed values\n    keys = Object.keys(newData);\n    i = keys.length;\n    while (i--) {\n      key = keys[i];\n      if (!hasOwn(this, key)) {\n        // new property\n        this._proxy(key);\n      }\n    }\n    oldData.__ob__.removeVm(this);\n    observe(newData, this);\n    this._digest();\n  };\n\n  /**\n   * Proxy a property, so that\n   * vm.prop === vm._data.prop\n   *\n   * @param {String} key\n   */\n\n  Vue.prototype._proxy = function (key) {\n    if (!isReserved(key)) {\n      // need to store ref to self here\n      // because these getter/setters might\n      // be called by child scopes via\n      // prototype inheritance.\n      var self = this;\n      Object.defineProperty(self, key, {\n        configurable: true,\n        enumerable: true,\n        get: function proxyGetter() {\n          return self._data[key];\n        },\n        set: function proxySetter(val) {\n          self._data[key] = val;\n        }\n      });\n    }\n  };\n\n  /**\n   * Unproxy a property.\n   *\n   * @param {String} key\n   */\n\n  Vue.prototype._unproxy = function (key) {\n    if (!isReserved(key)) {\n      delete this[key];\n    }\n  };\n\n  /**\n   * Force update on every watcher in scope.\n   */\n\n  Vue.prototype._digest = function () {\n    for (var i = 0, l = this._watchers.length; i < l; i++) {\n      this._watchers[i].update(true); // shallow updates\n    }\n  };\n\n  /**\n   * Setup computed properties. They are essentially\n   * special getter/setters\n   */\n\n  function noop() {}\n  Vue.prototype._initComputed = function () {\n    var computed = this.$options.computed;\n    if (computed) {\n      for (var key in computed) {\n        var userDef = computed[key];\n        var def = {\n          enumerable: true,\n          configurable: true\n        };\n        if (typeof userDef === 'function') {\n          def.get = makeComputedGetter(userDef, this);\n          def.set = noop;\n        } else {\n          def.get = userDef.get ? userDef.cache !== false ? makeComputedGetter(userDef.get, this) : bind$1(userDef.get, this) : noop;\n          def.set = userDef.set ? bind$1(userDef.set, this) : noop;\n        }\n        Object.defineProperty(this, key, def);\n      }\n    }\n  };\n\n  function makeComputedGetter(getter, owner) {\n    var watcher = new Watcher(owner, getter, null, {\n      lazy: true\n    });\n    return function computedGetter() {\n      if (watcher.dirty) {\n        watcher.evaluate();\n      }\n      if (Dep.target) {\n        watcher.depend();\n      }\n      return watcher.value;\n    };\n  }\n\n  /**\n   * Setup instance methods. Methods must be bound to the\n   * instance since they might be passed down as a prop to\n   * child components.\n   */\n\n  Vue.prototype._initMethods = function () {\n    var methods = this.$options.methods;\n    if (methods) {\n      for (var key in methods) {\n        this[key] = bind$1(methods[key], this);\n      }\n    }\n  };\n\n  /**\n   * Initialize meta information like $index, $key & $value.\n   */\n\n  Vue.prototype._initMeta = function () {\n    var metas = this.$options._meta;\n    if (metas) {\n      for (var key in metas) {\n        defineReactive(this, key, metas[key]);\n      }\n    }\n  };\n}\n\nvar eventRE = /^v-on:|^@/;\n\nfunction eventsMixin (Vue) {\n\n  /**\n   * Setup the instance's option events & watchers.\n   * If the value is a string, we pull it from the\n   * instance's methods by name.\n   */\n\n  Vue.prototype._initEvents = function () {\n    var options = this.$options;\n    if (options._asComponent) {\n      registerComponentEvents(this, options.el);\n    }\n    registerCallbacks(this, '$on', options.events);\n    registerCallbacks(this, '$watch', options.watch);\n  };\n\n  /**\n   * Register v-on events on a child component\n   *\n   * @param {Vue} vm\n   * @param {Element} el\n   */\n\n  function registerComponentEvents(vm, el) {\n    var attrs = el.attributes;\n    var name, handler;\n    for (var i = 0, l = attrs.length; i < l; i++) {\n      name = attrs[i].name;\n      if (eventRE.test(name)) {\n        name = name.replace(eventRE, '');\n        handler = (vm._scope || vm._context).$eval(attrs[i].value, true);\n        handler._fromParent = true;\n        vm.$on(name.replace(eventRE), handler);\n      }\n    }\n  }\n\n  /**\n   * Register callbacks for option events and watchers.\n   *\n   * @param {Vue} vm\n   * @param {String} action\n   * @param {Object} hash\n   */\n\n  function registerCallbacks(vm, action, hash) {\n    if (!hash) return;\n    var handlers, key, i, j;\n    for (key in hash) {\n      handlers = hash[key];\n      if (isArray(handlers)) {\n        for (i = 0, j = handlers.length; i < j; i++) {\n          register(vm, action, key, handlers[i]);\n        }\n      } else {\n        register(vm, action, key, handlers);\n      }\n    }\n  }\n\n  /**\n   * Helper to register an event/watch callback.\n   *\n   * @param {Vue} vm\n   * @param {String} action\n   * @param {String} key\n   * @param {Function|String|Object} handler\n   * @param {Object} [options]\n   */\n\n  function register(vm, action, key, handler, options) {\n    var type = typeof handler;\n    if (type === 'function') {\n      vm[action](key, handler, options);\n    } else if (type === 'string') {\n      var methods = vm.$options.methods;\n      var method = methods && methods[handler];\n      if (method) {\n        vm[action](key, method, options);\n      } else {\n        process.env.NODE_ENV !== 'production' && warn('Unknown method: \"' + handler + '\" when ' + 'registering callback for ' + action + ': \"' + key + '\".');\n      }\n    } else if (handler && type === 'object') {\n      register(vm, action, key, handler.handler, handler);\n    }\n  }\n\n  /**\n   * Setup recursive attached/detached calls\n   */\n\n  Vue.prototype._initDOMHooks = function () {\n    this.$on('hook:attached', onAttached);\n    this.$on('hook:detached', onDetached);\n  };\n\n  /**\n   * Callback to recursively call attached hook on children\n   */\n\n  function onAttached() {\n    if (!this._isAttached) {\n      this._isAttached = true;\n      this.$children.forEach(callAttach);\n    }\n  }\n\n  /**\n   * Iterator to call attached hook\n   *\n   * @param {Vue} child\n   */\n\n  function callAttach(child) {\n    if (!child._isAttached && inDoc(child.$el)) {\n      child._callHook('attached');\n    }\n  }\n\n  /**\n   * Callback to recursively call detached hook on children\n   */\n\n  function onDetached() {\n    if (this._isAttached) {\n      this._isAttached = false;\n      this.$children.forEach(callDetach);\n    }\n  }\n\n  /**\n   * Iterator to call detached hook\n   *\n   * @param {Vue} child\n   */\n\n  function callDetach(child) {\n    if (child._isAttached && !inDoc(child.$el)) {\n      child._callHook('detached');\n    }\n  }\n\n  /**\n   * Trigger all handlers for a hook\n   *\n   * @param {String} hook\n   */\n\n  Vue.prototype._callHook = function (hook) {\n    this.$emit('pre-hook:' + hook);\n    var handlers = this.$options[hook];\n    if (handlers) {\n      for (var i = 0, j = handlers.length; i < j; i++) {\n        handlers[i].call(this);\n      }\n    }\n    this.$emit('hook:' + hook);\n  };\n}\n\nfunction noop() {}\n\n/**\n * A directive links a DOM element with a piece of data,\n * which is the result of evaluating an expression.\n * It registers a watcher with the expression and calls\n * the DOM update function when a change is triggered.\n *\n * @param {String} name\n * @param {Node} el\n * @param {Vue} vm\n * @param {Object} descriptor\n *                 - {String} name\n *                 - {Object} def\n *                 - {String} expression\n *                 - {Array<Object>} [filters]\n *                 - {Boolean} literal\n *                 - {String} attr\n *                 - {String} raw\n * @param {Object} def - directive definition object\n * @param {Vue} [host] - transclusion host component\n * @param {Object} [scope] - v-for scope\n * @param {Fragment} [frag] - owner fragment\n * @constructor\n */\nfunction Directive(descriptor, vm, el, host, scope, frag) {\n  this.vm = vm;\n  this.el = el;\n  // copy descriptor properties\n  this.descriptor = descriptor;\n  this.name = descriptor.name;\n  this.expression = descriptor.expression;\n  this.arg = descriptor.arg;\n  this.modifiers = descriptor.modifiers;\n  this.filters = descriptor.filters;\n  this.literal = this.modifiers && this.modifiers.literal;\n  // private\n  this._locked = false;\n  this._bound = false;\n  this._listeners = null;\n  // link context\n  this._host = host;\n  this._scope = scope;\n  this._frag = frag;\n  // store directives on node in dev mode\n  if (process.env.NODE_ENV !== 'production' && this.el) {\n    this.el._vue_directives = this.el._vue_directives || [];\n    this.el._vue_directives.push(this);\n  }\n}\n\n/**\n * Initialize the directive, mixin definition properties,\n * setup the watcher, call definition bind() and update()\n * if present.\n *\n * @param {Object} def\n */\n\nDirective.prototype._bind = function () {\n  var name = this.name;\n  var descriptor = this.descriptor;\n\n  // remove attribute\n  if ((name !== 'cloak' || this.vm._isCompiled) && this.el && this.el.removeAttribute) {\n    var attr = descriptor.attr || 'v-' + name;\n    this.el.removeAttribute(attr);\n  }\n\n  // copy def properties\n  var def = descriptor.def;\n  if (typeof def === 'function') {\n    this.update = def;\n  } else {\n    extend(this, def);\n  }\n\n  // setup directive params\n  this._setupParams();\n\n  // initial bind\n  if (this.bind) {\n    this.bind();\n  }\n  this._bound = true;\n\n  if (this.literal) {\n    this.update && this.update(descriptor.raw);\n  } else if ((this.expression || this.modifiers) && (this.update || this.twoWay) && !this._checkStatement()) {\n    // wrapped updater for context\n    var dir = this;\n    if (this.update) {\n      this._update = function (val, oldVal) {\n        if (!dir._locked) {\n          dir.update(val, oldVal);\n        }\n      };\n    } else {\n      this._update = noop;\n    }\n    var preProcess = this._preProcess ? bind$1(this._preProcess, this) : null;\n    var postProcess = this._postProcess ? bind$1(this._postProcess, this) : null;\n    var watcher = this._watcher = new Watcher(this.vm, this.expression, this._update, // callback\n    {\n      filters: this.filters,\n      twoWay: this.twoWay,\n      deep: this.deep,\n      preProcess: preProcess,\n      postProcess: postProcess,\n      scope: this._scope\n    });\n    // v-model with inital inline value need to sync back to\n    // model instead of update to DOM on init. They would\n    // set the afterBind hook to indicate that.\n    if (this.afterBind) {\n      this.afterBind();\n    } else if (this.update) {\n      this.update(watcher.value);\n    }\n  }\n};\n\n/**\n * Setup all param attributes, e.g. track-by,\n * transition-mode, etc...\n */\n\nDirective.prototype._setupParams = function () {\n  if (!this.params) {\n    return;\n  }\n  var params = this.params;\n  // swap the params array with a fresh object.\n  this.params = Object.create(null);\n  var i = params.length;\n  var key, val, mappedKey;\n  while (i--) {\n    key = params[i];\n    mappedKey = camelize(key);\n    val = getBindAttr(this.el, key);\n    if (val != null) {\n      // dynamic\n      this._setupParamWatcher(mappedKey, val);\n    } else {\n      // static\n      val = getAttr(this.el, key);\n      if (val != null) {\n        this.params[mappedKey] = val === '' ? true : val;\n      }\n    }\n  }\n};\n\n/**\n * Setup a watcher for a dynamic param.\n *\n * @param {String} key\n * @param {String} expression\n */\n\nDirective.prototype._setupParamWatcher = function (key, expression) {\n  var self = this;\n  var called = false;\n  var unwatch = (this._scope || this.vm).$watch(expression, function (val, oldVal) {\n    self.params[key] = val;\n    // since we are in immediate mode,\n    // only call the param change callbacks if this is not the first update.\n    if (called) {\n      var cb = self.paramWatchers && self.paramWatchers[key];\n      if (cb) {\n        cb.call(self, val, oldVal);\n      }\n    } else {\n      called = true;\n    }\n  }, {\n    immediate: true,\n    user: false\n  });(this._paramUnwatchFns || (this._paramUnwatchFns = [])).push(unwatch);\n};\n\n/**\n * Check if the directive is a function caller\n * and if the expression is a callable one. If both true,\n * we wrap up the expression and use it as the event\n * handler.\n *\n * e.g. on-click=\"a++\"\n *\n * @return {Boolean}\n */\n\nDirective.prototype._checkStatement = function () {\n  var expression = this.expression;\n  if (expression && this.acceptStatement && !isSimplePath(expression)) {\n    var fn = parseExpression(expression).get;\n    var scope = this._scope || this.vm;\n    var handler = function handler(e) {\n      scope.$event = e;\n      fn.call(scope, scope);\n      scope.$event = null;\n    };\n    if (this.filters) {\n      handler = scope._applyFilters(handler, null, this.filters);\n    }\n    this.update(handler);\n    return true;\n  }\n};\n\n/**\n * Set the corresponding value with the setter.\n * This should only be used in two-way directives\n * e.g. v-model.\n *\n * @param {*} value\n * @public\n */\n\nDirective.prototype.set = function (value) {\n  /* istanbul ignore else */\n  if (this.twoWay) {\n    this._withLock(function () {\n      this._watcher.set(value);\n    });\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn('Directive.set() can only be used inside twoWay' + 'directives.');\n  }\n};\n\n/**\n * Execute a function while preventing that function from\n * triggering updates on this directive instance.\n *\n * @param {Function} fn\n */\n\nDirective.prototype._withLock = function (fn) {\n  var self = this;\n  self._locked = true;\n  fn.call(self);\n  nextTick(function () {\n    self._locked = false;\n  });\n};\n\n/**\n * Convenience method that attaches a DOM event listener\n * to the directive element and autometically tears it down\n * during unbind.\n *\n * @param {String} event\n * @param {Function} handler\n */\n\nDirective.prototype.on = function (event, handler) {\n  on$1(this.el, event, handler);(this._listeners || (this._listeners = [])).push([event, handler]);\n};\n\n/**\n * Teardown the watcher and call unbind.\n */\n\nDirective.prototype._teardown = function () {\n  if (this._bound) {\n    this._bound = false;\n    if (this.unbind) {\n      this.unbind();\n    }\n    if (this._watcher) {\n      this._watcher.teardown();\n    }\n    var listeners = this._listeners;\n    var i;\n    if (listeners) {\n      i = listeners.length;\n      while (i--) {\n        off(this.el, listeners[i][0], listeners[i][1]);\n      }\n    }\n    var unwatchFns = this._paramUnwatchFns;\n    if (unwatchFns) {\n      i = unwatchFns.length;\n      while (i--) {\n        unwatchFns[i]();\n      }\n    }\n    if (process.env.NODE_ENV !== 'production' && this.el) {\n      this.el._vue_directives.$remove(this);\n    }\n    this.vm = this.el = this._watcher = this._listeners = null;\n  }\n};\n\nfunction lifecycleMixin (Vue) {\n\n  /**\n   * Update v-ref for component.\n   *\n   * @param {Boolean} remove\n   */\n\n  Vue.prototype._updateRef = function (remove) {\n    var ref = this.$options._ref;\n    if (ref) {\n      var refs = (this._scope || this._context).$refs;\n      if (remove) {\n        if (refs[ref] === this) {\n          refs[ref] = null;\n        }\n      } else {\n        refs[ref] = this;\n      }\n    }\n  };\n\n  /**\n   * Transclude, compile and link element.\n   *\n   * If a pre-compiled linker is available, that means the\n   * passed in element will be pre-transcluded and compiled\n   * as well - all we need to do is to call the linker.\n   *\n   * Otherwise we need to call transclude/compile/link here.\n   *\n   * @param {Element} el\n   * @return {Element}\n   */\n\n  Vue.prototype._compile = function (el) {\n    var options = this.$options;\n\n    // transclude and init element\n    // transclude can potentially replace original\n    // so we need to keep reference; this step also injects\n    // the template and caches the original attributes\n    // on the container node and replacer node.\n    var original = el;\n    el = transclude(el, options);\n    this._initElement(el);\n\n    // handle v-pre on root node (#2026)\n    if (el.nodeType === 1 && getAttr(el, 'v-pre') !== null) {\n      return;\n    }\n\n    // root is always compiled per-instance, because\n    // container attrs and props can be different every time.\n    var contextOptions = this._context && this._context.$options;\n    var rootLinker = compileRoot(el, options, contextOptions);\n\n    // compile and link the rest\n    var contentLinkFn;\n    var ctor = this.constructor;\n    // component compilation can be cached\n    // as long as it's not using inline-template\n    if (options._linkerCachable) {\n      contentLinkFn = ctor.linker;\n      if (!contentLinkFn) {\n        contentLinkFn = ctor.linker = compile(el, options);\n      }\n    }\n\n    // link phase\n    // make sure to link root with prop scope!\n    var rootUnlinkFn = rootLinker(this, el, this._scope);\n    var contentUnlinkFn = contentLinkFn ? contentLinkFn(this, el) : compile(el, options)(this, el);\n\n    // register composite unlink function\n    // to be called during instance destruction\n    this._unlinkFn = function () {\n      rootUnlinkFn();\n      // passing destroying: true to avoid searching and\n      // splicing the directives\n      contentUnlinkFn(true);\n    };\n\n    // finally replace original\n    if (options.replace) {\n      replace(original, el);\n    }\n\n    this._isCompiled = true;\n    this._callHook('compiled');\n    return el;\n  };\n\n  /**\n   * Initialize instance element. Called in the public\n   * $mount() method.\n   *\n   * @param {Element} el\n   */\n\n  Vue.prototype._initElement = function (el) {\n    if (el instanceof DocumentFragment) {\n      this._isFragment = true;\n      this.$el = this._fragmentStart = el.firstChild;\n      this._fragmentEnd = el.lastChild;\n      // set persisted text anchors to empty\n      if (this._fragmentStart.nodeType === 3) {\n        this._fragmentStart.data = this._fragmentEnd.data = '';\n      }\n      this._fragment = el;\n    } else {\n      this.$el = el;\n    }\n    this.$el.__vue__ = this;\n    this._callHook('beforeCompile');\n  };\n\n  /**\n   * Create and bind a directive to an element.\n   *\n   * @param {String} name - directive name\n   * @param {Node} node   - target node\n   * @param {Object} desc - parsed directive descriptor\n   * @param {Object} def  - directive definition object\n   * @param {Vue} [host] - transclusion host component\n   * @param {Object} [scope] - v-for scope\n   * @param {Fragment} [frag] - owner fragment\n   */\n\n  Vue.prototype._bindDir = function (descriptor, node, host, scope, frag) {\n    this._directives.push(new Directive(descriptor, this, node, host, scope, frag));\n  };\n\n  /**\n   * Teardown an instance, unobserves the data, unbind all the\n   * directives, turn off all the event listeners, etc.\n   *\n   * @param {Boolean} remove - whether to remove the DOM node.\n   * @param {Boolean} deferCleanup - if true, defer cleanup to\n   *                                 be called later\n   */\n\n  Vue.prototype._destroy = function (remove, deferCleanup) {\n    if (this._isBeingDestroyed) {\n      if (!deferCleanup) {\n        this._cleanup();\n      }\n      return;\n    }\n\n    var destroyReady;\n    var pendingRemoval;\n\n    var self = this;\n    // Cleanup should be called either synchronously or asynchronoysly as\n    // callback of this.$remove(), or if remove and deferCleanup are false.\n    // In any case it should be called after all other removing, unbinding and\n    // turning of is done\n    var cleanupIfPossible = function cleanupIfPossible() {\n      if (destroyReady && !pendingRemoval && !deferCleanup) {\n        self._cleanup();\n      }\n    };\n\n    // remove DOM element\n    if (remove && this.$el) {\n      pendingRemoval = true;\n      this.$remove(function () {\n        pendingRemoval = false;\n        cleanupIfPossible();\n      });\n    }\n\n    this._callHook('beforeDestroy');\n    this._isBeingDestroyed = true;\n    var i;\n    // remove self from parent. only necessary\n    // if parent is not being destroyed as well.\n    var parent = this.$parent;\n    if (parent && !parent._isBeingDestroyed) {\n      parent.$children.$remove(this);\n      // unregister ref (remove: true)\n      this._updateRef(true);\n    }\n    // destroy all children.\n    i = this.$children.length;\n    while (i--) {\n      this.$children[i].$destroy();\n    }\n    // teardown props\n    if (this._propsUnlinkFn) {\n      this._propsUnlinkFn();\n    }\n    // teardown all directives. this also tearsdown all\n    // directive-owned watchers.\n    if (this._unlinkFn) {\n      this._unlinkFn();\n    }\n    i = this._watchers.length;\n    while (i--) {\n      this._watchers[i].teardown();\n    }\n    // remove reference to self on $el\n    if (this.$el) {\n      this.$el.__vue__ = null;\n    }\n\n    destroyReady = true;\n    cleanupIfPossible();\n  };\n\n  /**\n   * Clean up to ensure garbage collection.\n   * This is called after the leave transition if there\n   * is any.\n   */\n\n  Vue.prototype._cleanup = function () {\n    if (this._isDestroyed) {\n      return;\n    }\n    // remove self from owner fragment\n    // do it in cleanup so that we can call $destroy with\n    // defer right when a fragment is about to be removed.\n    if (this._frag) {\n      this._frag.children.$remove(this);\n    }\n    // remove reference from data ob\n    // frozen object may not have observer.\n    if (this._data.__ob__) {\n      this._data.__ob__.removeVm(this);\n    }\n    // Clean up references to private properties and other\n    // instances. preserve reference to _data so that proxy\n    // accessors still work. The only potential side effect\n    // here is that mutating the instance after it's destroyed\n    // may affect the state of other components that are still\n    // observing the same object, but that seems to be a\n    // reasonable responsibility for the user rather than\n    // always throwing an error on them.\n    this.$el = this.$parent = this.$root = this.$children = this._watchers = this._context = this._scope = this._directives = null;\n    // call the last hook...\n    this._isDestroyed = true;\n    this._callHook('destroyed');\n    // turn off all instance listeners.\n    this.$off();\n  };\n}\n\nfunction miscMixin (Vue) {\n\n  /**\n   * Apply a list of filter (descriptors) to a value.\n   * Using plain for loops here because this will be called in\n   * the getter of any watcher with filters so it is very\n   * performance sensitive.\n   *\n   * @param {*} value\n   * @param {*} [oldValue]\n   * @param {Array} filters\n   * @param {Boolean} write\n   * @return {*}\n   */\n\n  Vue.prototype._applyFilters = function (value, oldValue, filters, write) {\n    var filter, fn, args, arg, offset, i, l, j, k;\n    for (i = 0, l = filters.length; i < l; i++) {\n      filter = filters[i];\n      fn = resolveAsset(this.$options, 'filters', filter.name);\n      if (process.env.NODE_ENV !== 'production') {\n        assertAsset(fn, 'filter', filter.name);\n      }\n      if (!fn) continue;\n      fn = write ? fn.write : fn.read || fn;\n      if (typeof fn !== 'function') continue;\n      args = write ? [value, oldValue] : [value];\n      offset = write ? 2 : 1;\n      if (filter.args) {\n        for (j = 0, k = filter.args.length; j < k; j++) {\n          arg = filter.args[j];\n          args[j + offset] = arg.dynamic ? this.$get(arg.value) : arg.value;\n        }\n      }\n      value = fn.apply(this, args);\n    }\n    return value;\n  };\n\n  /**\n   * Resolve a component, depending on whether the component\n   * is defined normally or using an async factory function.\n   * Resolves synchronously if already resolved, otherwise\n   * resolves asynchronously and caches the resolved\n   * constructor on the factory.\n   *\n   * @param {String} id\n   * @param {Function} cb\n   */\n\n  Vue.prototype._resolveComponent = function (id, cb) {\n    var factory = resolveAsset(this.$options, 'components', id);\n    if (process.env.NODE_ENV !== 'production') {\n      assertAsset(factory, 'component', id);\n    }\n    if (!factory) {\n      return;\n    }\n    // async component factory\n    if (!factory.options) {\n      if (factory.resolved) {\n        // cached\n        cb(factory.resolved);\n      } else if (factory.requested) {\n        // pool callbacks\n        factory.pendingCallbacks.push(cb);\n      } else {\n        factory.requested = true;\n        var cbs = factory.pendingCallbacks = [cb];\n        factory(function resolve(res) {\n          if (isPlainObject(res)) {\n            res = Vue.extend(res);\n          }\n          // cache resolved\n          factory.resolved = res;\n          // invoke callbacks\n          for (var i = 0, l = cbs.length; i < l; i++) {\n            cbs[i](res);\n          }\n        }, function reject(reason) {\n          process.env.NODE_ENV !== 'production' && warn('Failed to resolve async component: ' + id + '. ' + (reason ? '\\nReason: ' + reason : ''));\n        });\n      }\n    } else {\n      // normal component\n      cb(factory);\n    }\n  };\n}\n\nfunction globalAPI (Vue) {\n\n  /**\n   * Expose useful internals\n   */\n\n  Vue.util = util;\n  Vue.config = config;\n  Vue.set = set;\n  Vue['delete'] = del;\n  Vue.nextTick = nextTick;\n\n  /**\n   * The following are exposed for advanced usage / plugins\n   */\n\n  Vue.compiler = compiler;\n  Vue.FragmentFactory = FragmentFactory;\n  Vue.internalDirectives = internalDirectives;\n  Vue.parsers = {\n    path: path,\n    text: text$1,\n    template: template,\n    directive: directive,\n    expression: expression\n  };\n\n  /**\n   * Each instance constructor, including Vue, has a unique\n   * cid. This enables us to create wrapped \"child\n   * constructors\" for prototypal inheritance and cache them.\n   */\n\n  Vue.cid = 0;\n  var cid = 1;\n\n  /**\n   * Class inheritance\n   *\n   * @param {Object} extendOptions\n   */\n\n  Vue.extend = function (extendOptions) {\n    extendOptions = extendOptions || {};\n    var Super = this;\n    var isFirstExtend = Super.cid === 0;\n    if (isFirstExtend && extendOptions._Ctor) {\n      return extendOptions._Ctor;\n    }\n    var name = extendOptions.name || Super.options.name;\n    if (process.env.NODE_ENV !== 'production') {\n      if (!/^[a-zA-Z][\\w-]+$/.test(name)) {\n        warn('Invalid component name: ' + name);\n        name = null;\n      }\n    }\n    var Sub = createClass(name || 'VueComponent');\n    Sub.prototype = Object.create(Super.prototype);\n    Sub.prototype.constructor = Sub;\n    Sub.cid = cid++;\n    Sub.options = mergeOptions(Super.options, extendOptions);\n    Sub['super'] = Super;\n    // allow further extension\n    Sub.extend = Super.extend;\n    // create asset registers, so extended classes\n    // can have their private assets too.\n    config._assetTypes.forEach(function (type) {\n      Sub[type] = Super[type];\n    });\n    // enable recursive self-lookup\n    if (name) {\n      Sub.options.components[name] = Sub;\n    }\n    // cache constructor\n    if (isFirstExtend) {\n      extendOptions._Ctor = Sub;\n    }\n    return Sub;\n  };\n\n  /**\n   * A function that returns a sub-class constructor with the\n   * given name. This gives us much nicer output when\n   * logging instances in the console.\n   *\n   * @param {String} name\n   * @return {Function}\n   */\n\n  function createClass(name) {\n    return new Function('return function ' + classify(name) + ' (options) { this._init(options) }')();\n  }\n\n  /**\n   * Plugin system\n   *\n   * @param {Object} plugin\n   */\n\n  Vue.use = function (plugin) {\n    /* istanbul ignore if */\n    if (plugin.installed) {\n      return;\n    }\n    // additional parameters\n    var args = toArray(arguments, 1);\n    args.unshift(this);\n    if (typeof plugin.install === 'function') {\n      plugin.install.apply(plugin, args);\n    } else {\n      plugin.apply(null, args);\n    }\n    plugin.installed = true;\n    return this;\n  };\n\n  /**\n   * Apply a global mixin by merging it into the default\n   * options.\n   */\n\n  Vue.mixin = function (mixin) {\n    Vue.options = mergeOptions(Vue.options, mixin);\n  };\n\n  /**\n   * Create asset registration methods with the following\n   * signature:\n   *\n   * @param {String} id\n   * @param {*} definition\n   */\n\n  config._assetTypes.forEach(function (type) {\n    Vue[type] = function (id, definition) {\n      if (!definition) {\n        return this.options[type + 's'][id];\n      } else {\n        /* istanbul ignore if */\n        if (process.env.NODE_ENV !== 'production') {\n          if (type === 'component' && (commonTagRE.test(id) || reservedTagRE.test(id))) {\n            warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + id);\n          }\n        }\n        if (type === 'component' && isPlainObject(definition)) {\n          definition.name = id;\n          definition = Vue.extend(definition);\n        }\n        this.options[type + 's'][id] = definition;\n        return definition;\n      }\n    };\n  });\n}\n\nvar filterRE = /[^|]\\|[^|]/;\n\nfunction dataAPI (Vue) {\n\n  /**\n   * Get the value from an expression on this vm.\n   *\n   * @param {String} exp\n   * @param {Boolean} [asStatement]\n   * @return {*}\n   */\n\n  Vue.prototype.$get = function (exp, asStatement) {\n    var res = parseExpression(exp);\n    if (res) {\n      if (asStatement && !isSimplePath(exp)) {\n        var self = this;\n        return function statementHandler() {\n          self.$arguments = toArray(arguments);\n          var result = res.get.call(self, self);\n          self.$arguments = null;\n          return result;\n        };\n      } else {\n        try {\n          return res.get.call(this, this);\n        } catch (e) {}\n      }\n    }\n  };\n\n  /**\n   * Set the value from an expression on this vm.\n   * The expression must be a valid left-hand\n   * expression in an assignment.\n   *\n   * @param {String} exp\n   * @param {*} val\n   */\n\n  Vue.prototype.$set = function (exp, val) {\n    var res = parseExpression(exp, true);\n    if (res && res.set) {\n      res.set.call(this, this, val);\n    }\n  };\n\n  /**\n   * Delete a property on the VM\n   *\n   * @param {String} key\n   */\n\n  Vue.prototype.$delete = function (key) {\n    del(this._data, key);\n  };\n\n  /**\n   * Watch an expression, trigger callback when its\n   * value changes.\n   *\n   * @param {String|Function} expOrFn\n   * @param {Function} cb\n   * @param {Object} [options]\n   *                 - {Boolean} deep\n   *                 - {Boolean} immediate\n   * @return {Function} - unwatchFn\n   */\n\n  Vue.prototype.$watch = function (expOrFn, cb, options) {\n    var vm = this;\n    var parsed;\n    if (typeof expOrFn === 'string') {\n      parsed = parseDirective(expOrFn);\n      expOrFn = parsed.expression;\n    }\n    var watcher = new Watcher(vm, expOrFn, cb, {\n      deep: options && options.deep,\n      sync: options && options.sync,\n      filters: parsed && parsed.filters,\n      user: !options || options.user !== false\n    });\n    if (options && options.immediate) {\n      cb.call(vm, watcher.value);\n    }\n    return function unwatchFn() {\n      watcher.teardown();\n    };\n  };\n\n  /**\n   * Evaluate a text directive, including filters.\n   *\n   * @param {String} text\n   * @param {Boolean} [asStatement]\n   * @return {String}\n   */\n\n  Vue.prototype.$eval = function (text, asStatement) {\n    // check for filters.\n    if (filterRE.test(text)) {\n      var dir = parseDirective(text);\n      // the filter regex check might give false positive\n      // for pipes inside strings, so it's possible that\n      // we don't get any filters here\n      var val = this.$get(dir.expression, asStatement);\n      return dir.filters ? this._applyFilters(val, null, dir.filters) : val;\n    } else {\n      // no filter\n      return this.$get(text, asStatement);\n    }\n  };\n\n  /**\n   * Interpolate a piece of template text.\n   *\n   * @param {String} text\n   * @return {String}\n   */\n\n  Vue.prototype.$interpolate = function (text) {\n    var tokens = parseText(text);\n    var vm = this;\n    if (tokens) {\n      if (tokens.length === 1) {\n        return vm.$eval(tokens[0].value) + '';\n      } else {\n        return tokens.map(function (token) {\n          return token.tag ? vm.$eval(token.value) : token.value;\n        }).join('');\n      }\n    } else {\n      return text;\n    }\n  };\n\n  /**\n   * Log instance data as a plain JS object\n   * so that it is easier to inspect in console.\n   * This method assumes console is available.\n   *\n   * @param {String} [path]\n   */\n\n  Vue.prototype.$log = function (path) {\n    var data = path ? getPath(this._data, path) : this._data;\n    if (data) {\n      data = clean(data);\n    }\n    // include computed fields\n    if (!path) {\n      for (var key in this.$options.computed) {\n        data[key] = clean(this[key]);\n      }\n    }\n    console.log(data);\n  };\n\n  /**\n   * \"clean\" a getter/setter converted object into a plain\n   * object copy.\n   *\n   * @param {Object} - obj\n   * @return {Object}\n   */\n\n  function clean(obj) {\n    return JSON.parse(JSON.stringify(obj));\n  }\n}\n\nfunction domAPI (Vue) {\n\n  /**\n   * Convenience on-instance nextTick. The callback is\n   * auto-bound to the instance, and this avoids component\n   * modules having to rely on the global Vue.\n   *\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$nextTick = function (fn) {\n    nextTick(fn, this);\n  };\n\n  /**\n   * Append instance to target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$appendTo = function (target, cb, withTransition) {\n    return insert(this, target, cb, withTransition, append, appendWithTransition);\n  };\n\n  /**\n   * Prepend instance to target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$prependTo = function (target, cb, withTransition) {\n    target = query(target);\n    if (target.hasChildNodes()) {\n      this.$before(target.firstChild, cb, withTransition);\n    } else {\n      this.$appendTo(target, cb, withTransition);\n    }\n    return this;\n  };\n\n  /**\n   * Insert instance before target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$before = function (target, cb, withTransition) {\n    return insert(this, target, cb, withTransition, beforeWithCb, beforeWithTransition);\n  };\n\n  /**\n   * Insert instance after target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$after = function (target, cb, withTransition) {\n    target = query(target);\n    if (target.nextSibling) {\n      this.$before(target.nextSibling, cb, withTransition);\n    } else {\n      this.$appendTo(target.parentNode, cb, withTransition);\n    }\n    return this;\n  };\n\n  /**\n   * Remove instance from DOM\n   *\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$remove = function (cb, withTransition) {\n    if (!this.$el.parentNode) {\n      return cb && cb();\n    }\n    var inDocument = this._isAttached && inDoc(this.$el);\n    // if we are not in document, no need to check\n    // for transitions\n    if (!inDocument) withTransition = false;\n    var self = this;\n    var realCb = function realCb() {\n      if (inDocument) self._callHook('detached');\n      if (cb) cb();\n    };\n    if (this._isFragment) {\n      removeNodeRange(this._fragmentStart, this._fragmentEnd, this, this._fragment, realCb);\n    } else {\n      var op = withTransition === false ? removeWithCb : removeWithTransition;\n      op(this.$el, this, realCb);\n    }\n    return this;\n  };\n\n  /**\n   * Shared DOM insertion function.\n   *\n   * @param {Vue} vm\n   * @param {Element} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition]\n   * @param {Function} op1 - op for non-transition insert\n   * @param {Function} op2 - op for transition insert\n   * @return vm\n   */\n\n  function insert(vm, target, cb, withTransition, op1, op2) {\n    target = query(target);\n    var targetIsDetached = !inDoc(target);\n    var op = withTransition === false || targetIsDetached ? op1 : op2;\n    var shouldCallHook = !targetIsDetached && !vm._isAttached && !inDoc(vm.$el);\n    if (vm._isFragment) {\n      mapNodeRange(vm._fragmentStart, vm._fragmentEnd, function (node) {\n        op(node, target, vm);\n      });\n      cb && cb();\n    } else {\n      op(vm.$el, target, vm, cb);\n    }\n    if (shouldCallHook) {\n      vm._callHook('attached');\n    }\n    return vm;\n  }\n\n  /**\n   * Check for selectors\n   *\n   * @param {String|Element} el\n   */\n\n  function query(el) {\n    return typeof el === 'string' ? document.querySelector(el) : el;\n  }\n\n  /**\n   * Append operation that takes a callback.\n   *\n   * @param {Node} el\n   * @param {Node} target\n   * @param {Vue} vm - unused\n   * @param {Function} [cb]\n   */\n\n  function append(el, target, vm, cb) {\n    target.appendChild(el);\n    if (cb) cb();\n  }\n\n  /**\n   * InsertBefore operation that takes a callback.\n   *\n   * @param {Node} el\n   * @param {Node} target\n   * @param {Vue} vm - unused\n   * @param {Function} [cb]\n   */\n\n  function beforeWithCb(el, target, vm, cb) {\n    before(el, target);\n    if (cb) cb();\n  }\n\n  /**\n   * Remove operation that takes a callback.\n   *\n   * @param {Node} el\n   * @param {Vue} vm - unused\n   * @param {Function} [cb]\n   */\n\n  function removeWithCb(el, vm, cb) {\n    remove(el);\n    if (cb) cb();\n  }\n}\n\nfunction eventsAPI (Vue) {\n\n  /**\n   * Listen on the given `event` with `fn`.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$on = function (event, fn) {\n    (this._events[event] || (this._events[event] = [])).push(fn);\n    modifyListenerCount(this, event, 1);\n    return this;\n  };\n\n  /**\n   * Adds an `event` listener that will be invoked a single\n   * time then automatically removed.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$once = function (event, fn) {\n    var self = this;\n    function on() {\n      self.$off(event, on);\n      fn.apply(this, arguments);\n    }\n    on.fn = fn;\n    this.$on(event, on);\n    return this;\n  };\n\n  /**\n   * Remove the given callback for `event` or all\n   * registered callbacks.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$off = function (event, fn) {\n    var cbs;\n    // all\n    if (!arguments.length) {\n      if (this.$parent) {\n        for (event in this._events) {\n          cbs = this._events[event];\n          if (cbs) {\n            modifyListenerCount(this, event, -cbs.length);\n          }\n        }\n      }\n      this._events = {};\n      return this;\n    }\n    // specific event\n    cbs = this._events[event];\n    if (!cbs) {\n      return this;\n    }\n    if (arguments.length === 1) {\n      modifyListenerCount(this, event, -cbs.length);\n      this._events[event] = null;\n      return this;\n    }\n    // specific handler\n    var cb;\n    var i = cbs.length;\n    while (i--) {\n      cb = cbs[i];\n      if (cb === fn || cb.fn === fn) {\n        modifyListenerCount(this, event, -1);\n        cbs.splice(i, 1);\n        break;\n      }\n    }\n    return this;\n  };\n\n  /**\n   * Trigger an event on self.\n   *\n   * @param {String|Object} event\n   * @return {Boolean} shouldPropagate\n   */\n\n  Vue.prototype.$emit = function (event) {\n    var isSource = typeof event === 'string';\n    event = isSource ? event : event.name;\n    var cbs = this._events[event];\n    var shouldPropagate = isSource || !cbs;\n    if (cbs) {\n      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n      // this is a somewhat hacky solution to the question raised\n      // in #2102: for an inline component listener like <comp @test=\"doThis\">,\n      // the propagation handling is somewhat broken. Therefore we\n      // need to treat these inline callbacks differently.\n      var hasParentCbs = isSource && cbs.some(function (cb) {\n        return cb._fromParent;\n      });\n      if (hasParentCbs) {\n        shouldPropagate = false;\n      }\n      var args = toArray(arguments, 1);\n      for (var i = 0, l = cbs.length; i < l; i++) {\n        var cb = cbs[i];\n        var res = cb.apply(this, args);\n        if (res === true && (!hasParentCbs || cb._fromParent)) {\n          shouldPropagate = true;\n        }\n      }\n    }\n    return shouldPropagate;\n  };\n\n  /**\n   * Recursively broadcast an event to all children instances.\n   *\n   * @param {String|Object} event\n   * @param {...*} additional arguments\n   */\n\n  Vue.prototype.$broadcast = function (event) {\n    var isSource = typeof event === 'string';\n    event = isSource ? event : event.name;\n    // if no child has registered for this event,\n    // then there's no need to broadcast.\n    if (!this._eventsCount[event]) return;\n    var children = this.$children;\n    var args = toArray(arguments);\n    if (isSource) {\n      // use object event to indicate non-source emit\n      // on children\n      args[0] = { name: event, source: this };\n    }\n    for (var i = 0, l = children.length; i < l; i++) {\n      var child = children[i];\n      var shouldPropagate = child.$emit.apply(child, args);\n      if (shouldPropagate) {\n        child.$broadcast.apply(child, args);\n      }\n    }\n    return this;\n  };\n\n  /**\n   * Recursively propagate an event up the parent chain.\n   *\n   * @param {String} event\n   * @param {...*} additional arguments\n   */\n\n  Vue.prototype.$dispatch = function (event) {\n    var shouldPropagate = this.$emit.apply(this, arguments);\n    if (!shouldPropagate) return;\n    var parent = this.$parent;\n    var args = toArray(arguments);\n    // use object event to indicate non-source emit\n    // on parents\n    args[0] = { name: event, source: this };\n    while (parent) {\n      shouldPropagate = parent.$emit.apply(parent, args);\n      parent = shouldPropagate ? parent.$parent : null;\n    }\n    return this;\n  };\n\n  /**\n   * Modify the listener counts on all parents.\n   * This bookkeeping allows $broadcast to return early when\n   * no child has listened to a certain event.\n   *\n   * @param {Vue} vm\n   * @param {String} event\n   * @param {Number} count\n   */\n\n  var hookRE = /^hook:/;\n  function modifyListenerCount(vm, event, count) {\n    var parent = vm.$parent;\n    // hooks do not get broadcasted so no need\n    // to do bookkeeping for them\n    if (!parent || !count || hookRE.test(event)) return;\n    while (parent) {\n      parent._eventsCount[event] = (parent._eventsCount[event] || 0) + count;\n      parent = parent.$parent;\n    }\n  }\n}\n\nfunction lifecycleAPI (Vue) {\n\n  /**\n   * Set instance target element and kick off the compilation\n   * process. The passed in `el` can be a selector string, an\n   * existing Element, or a DocumentFragment (for block\n   * instances).\n   *\n   * @param {Element|DocumentFragment|string} el\n   * @public\n   */\n\n  Vue.prototype.$mount = function (el) {\n    if (this._isCompiled) {\n      process.env.NODE_ENV !== 'production' && warn('$mount() should be called only once.');\n      return;\n    }\n    el = query(el);\n    if (!el) {\n      el = document.createElement('div');\n    }\n    this._compile(el);\n    this._initDOMHooks();\n    if (inDoc(this.$el)) {\n      this._callHook('attached');\n      ready.call(this);\n    } else {\n      this.$once('hook:attached', ready);\n    }\n    return this;\n  };\n\n  /**\n   * Mark an instance as ready.\n   */\n\n  function ready() {\n    this._isAttached = true;\n    this._isReady = true;\n    this._callHook('ready');\n  }\n\n  /**\n   * Teardown the instance, simply delegate to the internal\n   * _destroy.\n   */\n\n  Vue.prototype.$destroy = function (remove, deferCleanup) {\n    this._destroy(remove, deferCleanup);\n  };\n\n  /**\n   * Partially compile a piece of DOM and return a\n   * decompile function.\n   *\n   * @param {Element|DocumentFragment} el\n   * @param {Vue} [host]\n   * @return {Function}\n   */\n\n  Vue.prototype.$compile = function (el, host, scope, frag) {\n    return compile(el, this.$options, true)(this, el, host, scope, frag);\n  };\n}\n\n/**\n * The exposed Vue constructor.\n *\n * API conventions:\n * - public API methods/properties are prefixed with `$`\n * - internal methods/properties are prefixed with `_`\n * - non-prefixed properties are assumed to be proxied user\n *   data.\n *\n * @constructor\n * @param {Object} [options]\n * @public\n */\n\nfunction Vue(options) {\n  this._init(options);\n}\n\n// install internals\ninitMixin(Vue);\nstateMixin(Vue);\neventsMixin(Vue);\nlifecycleMixin(Vue);\nmiscMixin(Vue);\n\n// install APIs\nglobalAPI(Vue);\ndataAPI(Vue);\ndomAPI(Vue);\neventsAPI(Vue);\nlifecycleAPI(Vue);\n\nvar convertArray = vFor._postProcess;\n\n/**\n * Limit filter for arrays\n *\n * @param {Number} n\n * @param {Number} offset (Decimal expected)\n */\n\nfunction limitBy(arr, n, offset) {\n  offset = offset ? parseInt(offset, 10) : 0;\n  n = toNumber(n);\n  return typeof n === 'number' ? arr.slice(offset, offset + n) : arr;\n}\n\n/**\n * Filter filter for arrays\n *\n * @param {String} search\n * @param {String} [delimiter]\n * @param {String} ...dataKeys\n */\n\nfunction filterBy(arr, search, delimiter) {\n  arr = convertArray(arr);\n  if (search == null) {\n    return arr;\n  }\n  if (typeof search === 'function') {\n    return arr.filter(search);\n  }\n  // cast to lowercase string\n  search = ('' + search).toLowerCase();\n  // allow optional `in` delimiter\n  // because why not\n  var n = delimiter === 'in' ? 3 : 2;\n  // extract and flatten keys\n  var keys = toArray(arguments, n).reduce(function (prev, cur) {\n    return prev.concat(cur);\n  }, []);\n  var res = [];\n  var item, key, val, j;\n  for (var i = 0, l = arr.length; i < l; i++) {\n    item = arr[i];\n    val = item && item.$value || item;\n    j = keys.length;\n    if (j) {\n      while (j--) {\n        key = keys[j];\n        if (key === '$key' && contains(item.$key, search) || contains(getPath(val, key), search)) {\n          res.push(item);\n          break;\n        }\n      }\n    } else if (contains(item, search)) {\n      res.push(item);\n    }\n  }\n  return res;\n}\n\n/**\n * Filter filter for arrays\n *\n * @param {String} sortKey\n * @param {String} reverse\n */\n\nfunction orderBy(arr, sortKey, reverse) {\n  arr = convertArray(arr);\n  if (!sortKey) {\n    return arr;\n  }\n  var order = reverse && reverse < 0 ? -1 : 1;\n  // sort on a copy to avoid mutating original array\n  return arr.slice().sort(function (a, b) {\n    if (sortKey !== '$key') {\n      if (isObject(a) && '$value' in a) a = a.$value;\n      if (isObject(b) && '$value' in b) b = b.$value;\n    }\n    a = isObject(a) ? getPath(a, sortKey) : a;\n    b = isObject(b) ? getPath(b, sortKey) : b;\n    return a === b ? 0 : a > b ? order : -order;\n  });\n}\n\n/**\n * String contain helper\n *\n * @param {*} val\n * @param {String} search\n */\n\nfunction contains(val, search) {\n  var i;\n  if (isPlainObject(val)) {\n    var keys = Object.keys(val);\n    i = keys.length;\n    while (i--) {\n      if (contains(val[keys[i]], search)) {\n        return true;\n      }\n    }\n  } else if (isArray(val)) {\n    i = val.length;\n    while (i--) {\n      if (contains(val[i], search)) {\n        return true;\n      }\n    }\n  } else if (val != null) {\n    return val.toString().toLowerCase().indexOf(search) > -1;\n  }\n}\n\nvar digitsRE = /(\\d{3})(?=\\d)/g;\n\n// asset collections must be a plain object.\nvar filters = {\n\n  orderBy: orderBy,\n  filterBy: filterBy,\n  limitBy: limitBy,\n\n  /**\n   * Stringify value.\n   *\n   * @param {Number} indent\n   */\n\n  json: {\n    read: function read(value, indent) {\n      return typeof value === 'string' ? value : JSON.stringify(value, null, Number(indent) || 2);\n    },\n    write: function write(value) {\n      try {\n        return JSON.parse(value);\n      } catch (e) {\n        return value;\n      }\n    }\n  },\n\n  /**\n   * 'abc' => 'Abc'\n   */\n\n  capitalize: function capitalize(value) {\n    if (!value && value !== 0) return '';\n    value = value.toString();\n    return value.charAt(0).toUpperCase() + value.slice(1);\n  },\n\n  /**\n   * 'abc' => 'ABC'\n   */\n\n  uppercase: function uppercase(value) {\n    return value || value === 0 ? value.toString().toUpperCase() : '';\n  },\n\n  /**\n   * 'AbC' => 'abc'\n   */\n\n  lowercase: function lowercase(value) {\n    return value || value === 0 ? value.toString().toLowerCase() : '';\n  },\n\n  /**\n   * 12345 => $12,345.00\n   *\n   * @param {String} sign\n   */\n\n  currency: function currency(value, _currency) {\n    value = parseFloat(value);\n    if (!isFinite(value) || !value && value !== 0) return '';\n    _currency = _currency != null ? _currency : '$';\n    var stringified = Math.abs(value).toFixed(2);\n    var _int = stringified.slice(0, -3);\n    var i = _int.length % 3;\n    var head = i > 0 ? _int.slice(0, i) + (_int.length > 3 ? ',' : '') : '';\n    var _float = stringified.slice(-3);\n    var sign = value < 0 ? '-' : '';\n    return _currency + sign + head + _int.slice(i).replace(digitsRE, '$1,') + _float;\n  },\n\n  /**\n   * 'item' => 'items'\n   *\n   * @params\n   *  an array of strings corresponding to\n   *  the single, double, triple ... forms of the word to\n   *  be pluralized. When the number to be pluralized\n   *  exceeds the length of the args, it will use the last\n   *  entry in the array.\n   *\n   *  e.g. ['single', 'double', 'triple', 'multiple']\n   */\n\n  pluralize: function pluralize(value) {\n    var args = toArray(arguments, 1);\n    return args.length > 1 ? args[value % 10 - 1] || args[args.length - 1] : args[0] + (value === 1 ? '' : 's');\n  },\n\n  /**\n   * Debounce a handler function.\n   *\n   * @param {Function} handler\n   * @param {Number} delay = 300\n   * @return {Function}\n   */\n\n  debounce: function debounce(handler, delay) {\n    if (!handler) return;\n    if (!delay) {\n      delay = 300;\n    }\n    return _debounce(handler, delay);\n  }\n};\n\nvar partial = {\n\n  priority: PARTIAL,\n\n  params: ['name'],\n\n  // watch changes to name for dynamic partials\n  paramWatchers: {\n    name: function name(value) {\n      vIf.remove.call(this);\n      if (value) {\n        this.insert(value);\n      }\n    }\n  },\n\n  bind: function bind() {\n    this.anchor = createAnchor('v-partial');\n    replace(this.el, this.anchor);\n    this.insert(this.params.name);\n  },\n\n  insert: function insert(id) {\n    var partial = resolveAsset(this.vm.$options, 'partials', id);\n    if (process.env.NODE_ENV !== 'production') {\n      assertAsset(partial, 'partial', id);\n    }\n    if (partial) {\n      this.factory = new FragmentFactory(this.vm, partial);\n      vIf.insert.call(this);\n    }\n  },\n\n  unbind: function unbind() {\n    if (this.frag) {\n      this.frag.destroy();\n    }\n  }\n};\n\n// This is the elementDirective that handles <content>\n// transclusions. It relies on the raw content of an\n// instance being stored as `$options._content` during\n// the transclude phase.\n\n// We are exporting two versions, one for named and one\n// for unnamed, because the unnamed slots must be compiled\n// AFTER all named slots have selected their content. So\n// we need to give them different priorities in the compilation\n// process. (See #1965)\n\nvar slot = {\n\n  priority: SLOT,\n\n  bind: function bind() {\n    var host = this.vm;\n    var raw = host.$options._content;\n    if (!raw) {\n      this.fallback();\n      return;\n    }\n    var context = host._context;\n    var slotName = this.params && this.params.name;\n    if (!slotName) {\n      // Default slot\n      this.tryCompile(extractFragment(raw.childNodes, raw, true), context, host);\n    } else {\n      // Named slot\n      var selector = '[slot=\"' + slotName + '\"]';\n      var nodes = raw.querySelectorAll(selector);\n      if (nodes.length) {\n        this.tryCompile(extractFragment(nodes, raw), context, host);\n      } else {\n        this.fallback();\n      }\n    }\n  },\n\n  tryCompile: function tryCompile(content, context, host) {\n    if (content.hasChildNodes()) {\n      this.compile(content, context, host);\n    } else {\n      this.fallback();\n    }\n  },\n\n  compile: function compile(content, context, host) {\n    if (content && context) {\n      var scope = host ? host._scope : this._scope;\n      this.unlink = context.$compile(content, host, scope, this._frag);\n    }\n    if (content) {\n      replace(this.el, content);\n    } else {\n      remove(this.el);\n    }\n  },\n\n  fallback: function fallback() {\n    this.compile(extractContent(this.el, true), this.vm);\n  },\n\n  unbind: function unbind() {\n    if (this.unlink) {\n      this.unlink();\n    }\n  }\n};\n\nvar namedSlot = extend(extend({}, slot), {\n  priority: slot.priority + 1,\n  params: ['name']\n});\n\n/**\n * Extract qualified content nodes from a node list.\n *\n * @param {NodeList} nodes\n * @param {Element} parent\n * @param {Boolean} main\n * @return {DocumentFragment}\n */\n\nfunction extractFragment(nodes, parent, main) {\n  var frag = document.createDocumentFragment();\n  for (var i = 0, l = nodes.length; i < l; i++) {\n    var node = nodes[i];\n    // if this is the main outlet, we want to skip all\n    // previously selected nodes;\n    // otherwise, we want to mark the node as selected.\n    // clone the node so the original raw content remains\n    // intact. this ensures proper re-compilation in cases\n    // where the outlet is inside a conditional block\n    if (main && !node.__v_selected) {\n      append(node);\n    } else if (!main && node.parentNode === parent) {\n      node.__v_selected = true;\n      append(node);\n    }\n  }\n  return frag;\n\n  function append(node) {\n    if (isTemplate(node) && !node.hasAttribute('v-if') && !node.hasAttribute('v-for')) {\n      node = parseTemplate(node);\n    }\n    node = cloneNode(node);\n    frag.appendChild(node);\n  }\n}\n\nvar elementDirectives = {\n  slot: slot,\n  _namedSlot: namedSlot, // same as slot but with higher priority\n  partial: partial\n};\n\nVue.version = '1.0.15';\n\n/**\n * Vue and every constructor that extends Vue has an\n * associated options object, which can be accessed during\n * compilation steps as `this.constructor.options`.\n *\n * These can be seen as the default options of every\n * Vue instance.\n */\n\nVue.options = {\n  directives: publicDirectives,\n  elementDirectives: elementDirectives,\n  filters: filters,\n  transitions: {},\n  components: {},\n  partials: {},\n  replace: true\n};\n\n// devtools global hook\n/* istanbul ignore if */\nif (process.env.NODE_ENV !== 'production' && inBrowser) {\n  if (window.__VUE_DEVTOOLS_GLOBAL_HOOK__) {\n    window.__VUE_DEVTOOLS_GLOBAL_HOOK__.emit('init', Vue);\n  } else if (/Chrome\\/\\d+/.test(navigator.userAgent)) {\n    console.log('Download the Vue Devtools for a better development experience:\\n' + 'https://github.com/vuejs/vue-devtools');\n  }\n}\n\nmodule.exports = Vue;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue/dist/vue.common.js\n ** module id = 17\n ** module chunks = 0\n **/"],"sourceRoot":""}